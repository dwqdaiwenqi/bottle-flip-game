/*!
 * @author  flip-bottle-game<2540546236@qq.com>
 * @lastest Thu Sep 13 2018 13:46:45 GMT+0800 (中国标准时间)}
 */
!function(Q,F){"object"==typeof exports&&"object"==typeof module?module.exports=F():"function"==typeof define&&define.amd?define([],F):"object"==typeof exports?exports.TiaoYiTiao=F():Q.TiaoYiTiao=F()}(window,function(){return function(Q){var F={};function t(n){if(F[n])return F[n].exports;var c=F[n]={i:n,l:!1,exports:{}};return Q[n].call(c.exports,c,c.exports,t),c.l=!0,c.exports}return t.m=Q,t.c=F,t.d=function(Q,F,n){t.o(Q,F)||Object.defineProperty(Q,F,{enumerable:!0,get:n})},t.r=function(Q){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},t.t=function(Q,F){if(1&F&&(Q=t(Q)),8&F)return Q;if(4&F&&"object"==typeof Q&&Q&&Q.__esModule)return Q;var n=Object.create(null);if(t.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:Q}),2&F&&"string"!=typeof Q)for(var c in Q)t.d(n,c,function(F){return Q[F]}.bind(null,c));return n},t.n=function(Q){var F=Q&&Q.__esModule?function(){return Q.default}:function(){return Q};return t.d(F,"a",F),F},t.o=function(Q,F){return Object.prototype.hasOwnProperty.call(Q,F)},t.p="dist/",t(t.s=29)}([function(module,exports,__webpack_require__){eval("\nmodule.exports = __webpack_require__(23);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9UaWFvWWlUaWFvLy4uL25vZGVfbW9kdWxlcy9taWt1LXR3ZWVuL2luZGV4LmpzP2VjMTAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBIiwiZmlsZSI6IjAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9kaXN0L3R3ZWVuLmpzJyk7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///0\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nvar TextureManager = {\n  initial: function initial(results) {\n    var _this = this;\n\n    var groups = Object.keys(results).map(function (s) {\n      var group = results[s];\n\n      return Promise.all(group.map(function (s, i) {\n\n        return new Promise(function (r) {\n\n          var loader = new THREE.TextureLoader();\n          loader.crossOrigin = '*';\n          loader.load(s, function (texture) {\n            r(texture);\n          });\n        });\n      })).then(function (res) {\n\n        results[s] = res;\n\n        return new Promise(function (r) {\n          r(res);\n        });\n      });\n    });\n\n    Promise.all(groups).then(function (res) {\n\n      _this._handle_complete && _this._handle_complete(results);\n    });\n  },\n  onComplate: function onComplate(fn) {\n    this._handle_complete = fn;\n  }\n};\n\nmodule.exports = { TextureManager: TextureManager };//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9UaWFvWWlUaWFvLy4vc3JjL3RleHR1cmVfbWFuYWdlci5qcz9kOWFmIl0sIm5hbWVzIjpbIlRleHR1cmVNYW5hZ2VyIiwiaW5pdGlhbCIsInJlc3VsdHMiLCJncm91cHMiLCJPYmplY3QiLCJrZXlzIiwibWFwIiwiZ3JvdXAiLCJzIiwiUHJvbWlzZSIsImFsbCIsImkiLCJsb2FkZXIiLCJUSFJFRSIsIlRleHR1cmVMb2FkZXIiLCJjcm9zc09yaWdpbiIsImxvYWQiLCJyIiwidGV4dHVyZSIsInRoZW4iLCJyZXMiLCJfaGFuZGxlX2NvbXBsZXRlIiwib25Db21wbGF0ZSIsImZuIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFDQSxJQUFJQSxpQkFBaUI7QUFDbkJDLFNBRG1CLG1CQUNYQyxPQURXLEVBQ0g7QUFBQTs7QUFFZCxRQUFJQyxTQUFVQyxPQUFPQyxJQUFQLENBQVlILE9BQVosRUFBcUJJLEdBQXJCLENBQXlCLGFBQUc7QUFDeEMsVUFBSUMsUUFBUUwsUUFBUU0sQ0FBUixDQUFaOztBQUVBLGFBQU9DLFFBQVFDLEdBQVIsQ0FBY0gsTUFBTUQsR0FBTixDQUFXLFVBQUNFLENBQUQsRUFBR0csQ0FBSCxFQUFROztBQUV0QyxlQUFPLElBQUlGLE9BQUosQ0FBWSxhQUFHOztBQUVwQixjQUFJRyxTQUFTLElBQUlDLE1BQU1DLGFBQVYsRUFBYjtBQUNBRixpQkFBT0csV0FBUCxHQUFxQixHQUFyQjtBQUNBSCxpQkFBT0ksSUFBUCxDQUFZUixDQUFaLEVBQWMsbUJBQVM7QUFDckJTLGNBQUVDLE9BQUY7QUFFRCxXQUhEO0FBS0MsU0FUSSxDQUFQO0FBV0MsT0Fia0IsQ0FBZCxFQWVMQyxJQWZLLENBZUEsZUFBSzs7QUFFVmpCLGdCQUFRTSxDQUFSLElBQWFZLEdBQWI7O0FBRUEsZUFBTyxJQUFJWCxPQUFKLENBQVksYUFBRztBQUNwQlEsWUFBRUcsR0FBRjtBQUNELFNBRk0sQ0FBUDtBQUlELE9BdkJNLENBQVA7QUF5QkQsS0E1QmEsQ0FBZDs7QUE4QkFYLFlBQVFDLEdBQVIsQ0FBWVAsTUFBWixFQUFvQmdCLElBQXBCLENBQXlCLGVBQUs7O0FBRTVCLFlBQUtFLGdCQUFMLElBQXVCLE1BQUtBLGdCQUFMLENBQXNCbkIsT0FBdEIsQ0FBdkI7QUFFRCxLQUpEO0FBTUQsR0F2Q2tCO0FBd0NsQm9CLFlBeENrQixzQkF3Q1BDLEVBeENPLEVBd0NKO0FBQ2IsU0FBS0YsZ0JBQUwsR0FBd0JFLEVBQXhCO0FBQ0Q7QUExQ2tCLENBQXJCOztBQTZDQUMsT0FBT0MsT0FBUCxHQUFnQixFQUFDekIsOEJBQUQsRUFBaEIiLCJmaWxlIjoiMS5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG52YXIgVGV4dHVyZU1hbmFnZXIgPSB7XHJcbiAgaW5pdGlhbChyZXN1bHRzKXtcclxuXHJcbiAgICB2YXIgZ3JvdXBzID0gXHRPYmplY3Qua2V5cyhyZXN1bHRzKS5tYXAocz0+e1xyXG4gICAgICB2YXIgZ3JvdXAgPSByZXN1bHRzW3NdO1xyXG5cclxuICAgICAgcmV0dXJuIFByb21pc2UuYWxsKCAgZ3JvdXAubWFwKCAocyxpKSA9PntcclxuXHJcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKHI9PntcclxuXHJcbiAgICAgICAgICB2YXIgbG9hZGVyID0gbmV3IFRIUkVFLlRleHR1cmVMb2FkZXIoKTtcclxuICAgICAgICAgIGxvYWRlci5jcm9zc09yaWdpbiA9ICcqJztcclxuICAgICAgICAgIGxvYWRlci5sb2FkKHMsdGV4dHVyZT0+e1xyXG4gICAgICAgICAgICByKHRleHR1cmUpO1xyXG5cclxuICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgIH0pXHJcblxyXG4gICAgICAgIH0pXHJcblxyXG4gICAgICApLnRoZW4ocmVzPT57XHJcbiAgICAgICAgXHJcbiAgICAgICAgcmVzdWx0c1tzXSA9IHJlcztcclxuICAgICAgICBcclxuICAgICAgICByZXR1cm4gbmV3IFByb21pc2Uocj0+e1xyXG4gICAgICAgICAgcihyZXMpO1xyXG4gICAgICAgIH0pXHJcbiAgICAgIFxyXG4gICAgICB9KTtcclxuICAgIFxyXG4gICAgfSk7XHJcblxyXG4gICAgUHJvbWlzZS5hbGwoZ3JvdXBzKS50aGVuKHJlcz0+e1xyXG5cclxuICAgICAgdGhpcy5faGFuZGxlX2NvbXBsZXRlJiZ0aGlzLl9oYW5kbGVfY29tcGxldGUocmVzdWx0cyk7XHJcblxyXG4gICAgfSk7XHJcblxyXG4gIH1cclxuICAsb25Db21wbGF0ZShmbil7XHJcbiAgICB0aGlzLl9oYW5kbGVfY29tcGxldGUgPSBmbjtcclxuICB9XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzPSB7VGV4dHVyZU1hbmFnZXJ9O1xyXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nvar _mikuUtil = __webpack_require__(25);\n\n{\n  // var str = ['x','y'];\n  //    var count = 0;\n  //    function arrange(s){\n  //     for(var i=0,length=str.length; i<length; i++) {\n  //      if(s.length == length - 1) {\n  //       if(s.indexOf(str[i]) < 0) {\n  //        count++;\n  //        console.log(\"\"+count+\"=\"+s + str[i]);\n  //       }\n  //       continue;\n  //      }\n\n  //      if(s.indexOf(str[i]) < 0) { arrange(s+str[i]); }\n  //     }\n  //    }\n  //    arrange(\"\");\n\n  var Slerp = function Slerp(v0, v1, rad) {\n    var α, β;\n    var eachPos = function eachPos(s, t) {\n      return α * v0[s] + β * v1[s];\n    };\n    var _ = {\n      pos: function pos(t) {\n        α = sin((1 - t) * rad) / sin(rad);\n        β = sin(t * rad) / sin(rad);\n        return {\n          x: eachPos('x', t),\n          y: eachPos('y', t),\n          z: eachPos('z', t)\n        };\n      },\n      tangent: function tangent(t) {},\n      v0: v0, v1: v1, rad: rad,\n      deg: rad / PI * 180\n    };\n    return _;\n  };\n\n  var FreeCamera = function FreeCamera(_ref) {\n    var camera = _ref.camera,\n        _ref$el = _ref.el,\n        el = _ref$el === undefined ? window : _ref$el,\n        _ref$mw = _ref.mw,\n        mw = _ref$mw === undefined ? innerWidth : _ref$mw,\n        _ref$mh = _ref.mh,\n        mh = _ref$mh === undefined ? innerHeight : _ref$mh,\n        _ref$keycode_move = _ref.keycode_move,\n        keycode_move = _ref$keycode_move === undefined ? true : _ref$keycode_move,\n        _ref$range = _ref.range,\n        range = _ref$range === undefined ? { the: [0, 126], fai: [123, 201] } : _ref$range;\n\n\n    var behavior = {\n      'rotate': 1,\n      'position': 1\n    };\n\n    //  201 123\n    var cx = mw >> 1,\n        cy = mh >> 1;\n    var φ = 180,\n        θ = 90;\n    var x = 0,\n        y = 0,\n        z = 0;\n\n\n    var _ = Object.defineProperties({\n      update: function update() {\n\n        if (this.transition) return;\n\n        Walk.update();\n\n        //FC.fun[s].update\n\n        var φ = this.φ / 180 * PI,\n            θ = this.θ / 180 * PI;\n\n\n        this.v3_look = new _mikuUtil.Vec(sin(θ) * sin(φ), cos(θ), sin(θ) * cos(φ));\n\n        // console.log(this.v3_look);\n        // if(!this.v3_look_bef ){\n        //   this.v3_look_bef = this.v3_look;\n        // }\n        // this.v3_look_delta = this.v3_look.sub(this.v3_look_bef);\n\n        // console.log(this.v3_look_delta);\n        // this.v3_look_bef = this.v3_look;\n\n\n        this.v3_look_right = new _mikuUtil.Vec(sin(θ) * sin(φ - PI * .5), cos(θ), sin(θ) * cos(φ - PI * .5));\n\n        this.v3_look_up = this.v3_look.cross(this.v3_look_right);\n\n        this.v3_camera = new _mikuUtil.Vec(x, y, z);\n        camera.position.set(x, y, z);\n\n        //...\n        var v = this.v3_camera.add(this.v3_look);\n        camera.lookAt(new THREE.Vector3(v.x, v.y, v.z));\n      },\n      transition: 0,\n      movingPath: function movingPath(_ref2) {\n        var _ref2$time = _ref2.time,\n            time = _ref2$time === undefined ? 1000 : _ref2$time,\n            θ = _ref2.θ,\n            φ = _ref2.φ;\n      },\n      slerp: function slerp(v3) {\n        var _ref3 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n            bit_dist = _ref3.bit_dist,\n            _ref3$until = _ref3.until,\n            until = _ref3$until === undefined ? 1 : _ref3$until,\n            _ref3$time = _ref3.time,\n            time = _ref3$time === undefined ? 1000 : _ref3$time,\n            θ = _ref3.θ,\n            φ = _ref3.φ;\n\n        this.transition = 1;\n\n        var complete_fn;\n\n        var rad = this.v3_look.dot(v3);\n        var slp = Slerp(this.v3_look, v3, rad);\n\n        var tw = new TWEEN.Tween({ t: 0 }).to({ t: 1 }, time).onStart(function () {\n          if (bit_dist) {\n            this.bv = new _mikuUtil.Vec(_.x, _.y, _.z);\n          }\n        }).onUpdate(function () {\n          //console.log('aaa');\n          var pos = slp.pos(this.t);\n          _.v3_look = new _mikuUtil.Vec(pos.x, pos.y, pos.z);\n\n          if (bit_dist) {\n            var _ref4 = [this.t, 1 - this.t],\n                t1 = _ref4[0],\n                t2 = _ref4[1];\n\n            x = this.bv.x * t2 + bit_dist.x * t1;\n            y = this.bv.y * t2 + bit_dist.y * t1;\n            z = this.bv.z * t2 + bit_dist.z * t1;\n          } else {\n            x = _.x;\n            y = _.y;\n            z = _.z;\n          }\n\n          camera.position.set(_.v3_camera.x, _.v3_camera.y, _.v3_camera.z);\n\n          var v = _.v3_camera.add(_.v3_look);\n\n          camera.lookAt(new THREE.Vector3(v.x, v.y, v.z));\n        }).onComplete(function () {\n          _.transition = 0;\n          //相机路径的终点θ和φ 。。。注意直线和曲线的终值θ和φ\n          _.θ = θ;\n          _.φ = φ;\n\n          complete_fn && complete_fn();\n        }).start();\n\n        return {\n          complete: function complete(fn) {\n            complete_fn = fn;\n          }\n        };\n      }\n      //正前方方向\n      ,\n      v3_look: new _mikuUtil.Vec()\n      //后方向\n      , v3_look_back: new _mikuUtil.Vec()\n      //右方向\n      , v3_look_right: new _mikuUtil.Vec()\n      //左方向\n      , v3_look_left: new _mikuUtil.Vec()\n      //上方向\n      , v3_look_up: new _mikuUtil.Vec(),\n\n      v3_camera: new _mikuUtil.Vec()\n\n      //为了检测在球内外的碰撞，在内部到球的外部。。会出现错误\n      //所以要保证，到外部的时候，速度向量是于lookat向量不同的。。\n      , v3_speed: new _mikuUtil.Vec(),\n\n      camera: camera,\n      speed: {\n        front: 1, back: 1, right: 1, left: 1\n        //rotate position\n      }, cancelDefualt: function cancelDefualt() {\n        if (!arguments.length) {\n          behavior.rotate = behavior.position = 0;\n          return;\n        }\n        Array.from(arguments, function (v) {\n          if (!behavior[v]) return console.wran('!');\n          behavior[v] = 0;\n        });\n      },\n      walkFront: function walkFront(n) {\n        Walk['front'].run = true;\n      },\n      walkBack: function walkBack(n) {\n        Walk['back'].run = true;\n      },\n      walkRight: function walkRight(n) {\n        Walk['right'].run = true;\n      },\n      walkLeft: function walkLeft(n) {\n        Walk['left'].run = true;\n      }\n    }, {\n      'θ': {\n        get: function get() {\n          return θ;\n        },\n        set: function set(a) {\n          θ = a;\n        }\n      },\n      'φ': {\n        get: function get() {\n          return φ;\n        },\n        set: function set(a) {\n          φ = a;\n        }\n      },\n      'the': {\n        get: function get() {\n          return θ;\n        },\n        set: function set(a) {\n          θ = a;\n        }\n      },\n      'phi': {\n        get: function get() {\n          return φ;\n        },\n        set: function set(a) {\n          φ = a;\n        }\n      },\n      rotate: {\n        get: function get() {\n          return [θ, φ];\n        },\n        set: function set(a, b) {\n          θ = a;\n          φ = b;\n        }\n      },\n      x: {\n        get: function get() {\n          return x;\n        },\n        set: function set(a) {\n          x = a;\n          this.v3_camera.x = x;\n        }\n      },\n      y: {\n        get: function get() {\n          return y;\n        },\n        set: function set(a) {\n          y = a;\n          this.v3_camera.y = y;\n        }\n      },\n      z: {\n        get: function get() {\n          //console.log('get z:',z);\n          return z;\n        },\n        set: function set(a) {\n          z = a;\n          //console.log('set z:',z);\n          this.v3_camera.z = z;\n        }\n      },\n      position: {\n        get: function get() {\n          return [x, y, z];\n        },\n        set: function set(a, b, c) {\n          x = a, y = b, z = c;\n        }\n      }\n    });\n\n    var Walk = {\n      add: function add(s, fn) {\n        Walk[s] = this.mp[s] = {\n          run: 0,\n          update: function update() {\n            fn();\n          }\n        };\n      },\n      mp: {},\n      code_mp: {\n        '87': 'w',\n        '83': 's',\n        '65': 'a',\n        '68': 'd'\n      },\n      update: function update() {\n        var _this = this;\n\n        Object.keys(this.mp).forEach(function (s) {\n          var o = _this.mp[s];\n          if (!o.run) return;\n          o.update();\n        });\n      }\n    };\n\n    Walk.add('w', function () {\n      _.v3_speed = _.v3_look.clone();\n      var v = _.v3_speed.scale(_.speed.front);\n      x += v.x, z += v.z;\n      //console.log('ex:w')\n    });\n    Walk.add('s', function () {\n      _.v3_speed = _.v3_look.clone().scale(-1);\n      var v = _.v3_speed.scale(_.speed.back);\n      x += v.x, z += v.z;\n    });\n    Walk.add('d', function () {\n      _.v3_speed = _.v3_look_right.clone();\n      var v = _.v3_speed.scale(_.speed.right);\n      x += v.x, z += v.z;\n    });\n    Walk.add('a', function () {\n      _.v3_speed = _.v3_look_right.clone().scale(-1);\n      var v = _.v3_speed.scale(_.speed.left);\n      x += v.x, z += v.z;\n      //console.log('ex:a')\n    });\n\n    var bx = void 0,\n        by = void 0;\n    var delta_x = void 0,\n        delta_y = void 0;\n\n    el.addEventListener('mousedown', function (e) {\n\n      if (!bx) bx = e.pageX;\n      if (!by) by = e.pageY;\n    });\n\n    // el.addEventListener('touchstart',e=>{\n\n\n    //   if(!bx)bx = e.touches[0].pageX;\n    //   if(!by)by = e.touches[0].pageY;\n\n    // });\n\n\n    el.addEventListener('mousemove', function (e) {\n\n      if (!behavior.rotate) return;\n      if (!bx || !by) return;\n      delta_x = (e.pageX - bx) * -.2, delta_y = (e.pageY - by) * .3;\n      bx = e.pageX, by = e.pageY;\n      _.φ += delta_x, _.θ += delta_y;\n\n      _.the = _.θ;\n      _.phi = _.φ;\n\n      // this.v3_look = new Vec(sin(θ)*sin(φ),cos(θ),sin(θ)*cos(φ));\n\n\n      // if(!this.v3_look_bef ){\n      //   this.v3_look_bef = this.v3_look;\n      // }\n      // this.v3_look_delta = this.v3_look.sub(this.v3_look_bef);\n\n      // console.log(this.v3_look_delta);\n      // this.v3_look_bef = this.v3_look;\n\n\n      // _.θ<range.the[0] && (_.θ=range.the[0]);\n      _.θ > range.the[1] && (_.θ = range.the[1]);\n\n      _.φ < range.fai[0] && (_.φ = range.fai[0]);\n      _.φ > range.fai[1] && (_.φ = range.fai[1]);\n\n      _.trigger('rotate', { delta_x: delta_x, delta_y: delta_y });\n    });\n    // el.addEventListener('touchmove',e=>{\n\n\n    //   if(!behavior.rotate) return;\n    //   if(!bx || !by) return;\n    //   delta_x = (e.touches[0].pageX-bx)*-.2,delta_y = (e.touches[0].pageY-by)*.3;\n    //   bx = e.touches[0].pageX,by = e.touches[0].pageY;\n    //   _.φ += delta_x,_.θ += delta_y;\n\n\n    //   _.the = _.θ;\n    //   _.phi = _.φ;\n\n\n    //   // this.v3_look = new Vec(sin(θ)*sin(φ),cos(θ),sin(θ)*cos(φ));\n\n\n    //   // if(!this.v3_look_bef ){\n    //   //   this.v3_look_bef = this.v3_look;\n    //   // }\n    //   // this.v3_look_delta = this.v3_look.sub(this.v3_look_bef);\n\n    //   // console.log(this.v3_look_delta);\n    //   // this.v3_look_bef = this.v3_look;\n\n\n    //   // _.θ<range.the[0] && (_.θ=range.the[0]);\n    //   _.θ>range.the[1] && (_.θ=range.the[1]);\n\n    //   _.φ<range.fai[0] && (_.φ=range.fai[0]);\n    //   _.φ>range.fai[1] && (_.φ=range.fai[1]);\n\n\n    //   _.trigger('rotate',{delta_x,delta_y});\n    // });\n\n    el.addEventListener('mouseup', function (e) {\n      bx = by = 0;\n    });\n    el.addEventListener('touchend', function (e) {\n      bx = by = 0;\n    });\n\n    x = camera.position.x;\n    y = camera.position.y;\n    z = camera.position.z;\n\n    var key_speed;\n    var k1, k2;\n    var keyFn = function keyFn(e) {\n      // if(_.transition){\n      // \t//console.log('!!!!');\n      // \treturn;\n      // } \n\n      if (!keycode_move) return;\n\n      var W = Walk;\n      var o = W[W.code_mp[e.keyCode]];\n      if (!o) return;\n      if (!k1) {\n        k1 = k2 = new _mikuUtil.Vec(x, y, z);\n      }\n      k1 = new _mikuUtil.Vec(x, y, z);\n      _.v3_key = new _mikuUtil.Vec(k1.x - k2.x, k1.y - k2.y, k1.z - k2.z);\n\n      //_.v3_key\n      k2.x = k1.x;\n      k2.y = k1.y;\n      k2.z = k1.z;\n\n      if (e.type == 'keyup') {\n        o.run = 0;\n        return;\n      }\n      o.run = 1;\n      //console.log(e.keyCode,e.type);\n    };\n    addEventListener('keydown', keyFn);\n    addEventListener('keyup', keyFn);\n\n    window.FreeCamera = window.Cam = $.extend(true, _, K.MxEvent);\n\n    return window.FreeCamera;\n  };\n\n  window['Cam'] = window['FreeCamera'] = FreeCamera;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2\n")},function(module,exports,__webpack_require__){eval('/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === "undefined") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target) {\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target) {\n                // If passing function in options, then use it for resolve "head" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector("#foo").shadowRoot }\n                // }\n                if (typeof target === \'function\') {\n                        return target();\n                }\n                if (typeof memo[target] === "undefined") {\n\t\t\tvar styleTarget = getTarget.call(this, target);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = __webpack_require__(26);\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== "undefined" && DEBUG) {\n\t\tif (typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === "object" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== "boolean") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = "head";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = "bottom";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error("Couldn\'t find a style target. This probably means that the value for the \'insertInto\' parameter is invalid.");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === "top") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === "bottom") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === "object" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + " " + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error("[Style Loader]\\n\\n Invalid value for parameter \'insertAt\' (\'options.insertAt\') found.\\n Must be \'top\', \'bottom\', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement("style");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = "text/css";\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement("link");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = "text/css";\n\t}\n\toptions.attrs.rel = "stylesheet";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don\'t add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === "function" &&\n\t\ttypeof URL.createObjectURL === "function" &&\n\t\ttypeof URL.revokeObjectURL === "function" &&\n\t\ttypeof Blob === "function" &&\n\t\ttypeof btoa === "function"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join(\'\\n\');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? "" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute("media", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn\'t defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += "\\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";\n\t}\n\n\tvar blob = new Blob([css], { type: "text/css" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9UaWFvWWlUaWFvLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qcz81MWVjIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEM7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBLGlCQUFpQixtQkFBbUI7QUFDcEM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsaUJBQWlCLHNCQUFzQjtBQUN2Qzs7QUFFQTtBQUNBLG1CQUFtQiwyQkFBMkI7O0FBRTlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxnQkFBZ0IsbUJBQW1CO0FBQ25DO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSxpQkFBaUIsMkJBQTJCO0FBQzVDO0FBQ0E7O0FBRUEsUUFBUSx1QkFBdUI7QUFDL0I7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQSxpQkFBaUIsdUJBQXVCO0FBQ3hDO0FBQ0E7O0FBRUEsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsZ0JBQWdCLGlCQUFpQjtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYzs7QUFFZCxrREFBa0Qsc0JBQXNCO0FBQ3hFO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBLEVBQUU7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSx1REFBdUQ7QUFDdkQ7O0FBRUEsNkJBQTZCLG1CQUFtQjs7QUFFaEQ7O0FBRUE7O0FBRUE7QUFDQSIsImZpbGUiOiIzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLypcblx0TUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcblx0QXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cblxudmFyIHN0eWxlc0luRG9tID0ge307XG5cbnZhclx0bWVtb2l6ZSA9IGZ1bmN0aW9uIChmbikge1xuXHR2YXIgbWVtbztcblxuXHRyZXR1cm4gZnVuY3Rpb24gKCkge1xuXHRcdGlmICh0eXBlb2YgbWVtbyA9PT0gXCJ1bmRlZmluZWRcIikgbWVtbyA9IGZuLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG5cdFx0cmV0dXJuIG1lbW87XG5cdH07XG59O1xuXG52YXIgaXNPbGRJRSA9IG1lbW9pemUoZnVuY3Rpb24gKCkge1xuXHQvLyBUZXN0IGZvciBJRSA8PSA5IGFzIHByb3Bvc2VkIGJ5IEJyb3dzZXJoYWNrc1xuXHQvLyBAc2VlIGh0dHA6Ly9icm93c2VyaGFja3MuY29tLyNoYWNrLWU3MWQ4NjkyZjY1MzM0MTczZmVlNzE1YzIyMmNiODA1XG5cdC8vIFRlc3RzIGZvciBleGlzdGVuY2Ugb2Ygc3RhbmRhcmQgZ2xvYmFscyBpcyB0byBhbGxvdyBzdHlsZS1sb2FkZXJcblx0Ly8gdG8gb3BlcmF0ZSBjb3JyZWN0bHkgaW50byBub24tc3RhbmRhcmQgZW52aXJvbm1lbnRzXG5cdC8vIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL3dlYnBhY2stY29udHJpYi9zdHlsZS1sb2FkZXIvaXNzdWVzLzE3N1xuXHRyZXR1cm4gd2luZG93ICYmIGRvY3VtZW50ICYmIGRvY3VtZW50LmFsbCAmJiAhd2luZG93LmF0b2I7XG59KTtcblxudmFyIGdldFRhcmdldCA9IGZ1bmN0aW9uICh0YXJnZXQpIHtcbiAgcmV0dXJuIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTtcbn07XG5cbnZhciBnZXRFbGVtZW50ID0gKGZ1bmN0aW9uIChmbikge1xuXHR2YXIgbWVtbyA9IHt9O1xuXG5cdHJldHVybiBmdW5jdGlvbih0YXJnZXQpIHtcbiAgICAgICAgICAgICAgICAvLyBJZiBwYXNzaW5nIGZ1bmN0aW9uIGluIG9wdGlvbnMsIHRoZW4gdXNlIGl0IGZvciByZXNvbHZlIFwiaGVhZFwiIGVsZW1lbnQuXG4gICAgICAgICAgICAgICAgLy8gVXNlZnVsIGZvciBTaGFkb3cgUm9vdCBzdHlsZSBpLmVcbiAgICAgICAgICAgICAgICAvLyB7XG4gICAgICAgICAgICAgICAgLy8gICBpbnNlcnRJbnRvOiBmdW5jdGlvbiAoKSB7IHJldHVybiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2Zvb1wiKS5zaGFkb3dSb290IH1cbiAgICAgICAgICAgICAgICAvLyB9XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiB0YXJnZXQgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0YXJnZXQoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcblx0XHRcdHZhciBzdHlsZVRhcmdldCA9IGdldFRhcmdldC5jYWxsKHRoaXMsIHRhcmdldCk7XG5cdFx0XHQvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuXHRcdFx0aWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuXHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG5cdFx0XHRcdFx0Ly8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcblx0XHRcdFx0XHRzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuXHRcdFx0XHR9IGNhdGNoKGUpIHtcblx0XHRcdFx0XHRzdHlsZVRhcmdldCA9IG51bGw7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuXHRcdH1cblx0XHRyZXR1cm4gbWVtb1t0YXJnZXRdXG5cdH07XG59KSgpO1xuXG52YXIgc2luZ2xldG9uID0gbnVsbDtcbnZhclx0c2luZ2xldG9uQ291bnRlciA9IDA7XG52YXJcdHN0eWxlc0luc2VydGVkQXRUb3AgPSBbXTtcblxudmFyXHRmaXhVcmxzID0gcmVxdWlyZShcIi4vdXJsc1wiKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihsaXN0LCBvcHRpb25zKSB7XG5cdGlmICh0eXBlb2YgREVCVUcgIT09IFwidW5kZWZpbmVkXCIgJiYgREVCVUcpIHtcblx0XHRpZiAodHlwZW9mIGRvY3VtZW50ICE9PSBcIm9iamVjdFwiKSB0aHJvdyBuZXcgRXJyb3IoXCJUaGUgc3R5bGUtbG9hZGVyIGNhbm5vdCBiZSB1c2VkIGluIGEgbm9uLWJyb3dzZXIgZW52aXJvbm1lbnRcIik7XG5cdH1cblxuXHRvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcblxuXHRvcHRpb25zLmF0dHJzID0gdHlwZW9mIG9wdGlvbnMuYXR0cnMgPT09IFwib2JqZWN0XCIgPyBvcHRpb25zLmF0dHJzIDoge307XG5cblx0Ly8gRm9yY2Ugc2luZ2xlLXRhZyBzb2x1dGlvbiBvbiBJRTYtOSwgd2hpY2ggaGFzIGEgaGFyZCBsaW1pdCBvbiB0aGUgIyBvZiA8c3R5bGU+XG5cdC8vIHRhZ3MgaXQgd2lsbCBhbGxvdyBvbiBhIHBhZ2Vcblx0aWYgKCFvcHRpb25zLnNpbmdsZXRvbiAmJiB0eXBlb2Ygb3B0aW9ucy5zaW5nbGV0b24gIT09IFwiYm9vbGVhblwiKSBvcHRpb25zLnNpbmdsZXRvbiA9IGlzT2xkSUUoKTtcblxuXHQvLyBCeSBkZWZhdWx0LCBhZGQgPHN0eWxlPiB0YWdzIHRvIHRoZSA8aGVhZD4gZWxlbWVudFxuICAgICAgICBpZiAoIW9wdGlvbnMuaW5zZXJ0SW50bykgb3B0aW9ucy5pbnNlcnRJbnRvID0gXCJoZWFkXCI7XG5cblx0Ly8gQnkgZGVmYXVsdCwgYWRkIDxzdHlsZT4gdGFncyB0byB0aGUgYm90dG9tIG9mIHRoZSB0YXJnZXRcblx0aWYgKCFvcHRpb25zLmluc2VydEF0KSBvcHRpb25zLmluc2VydEF0ID0gXCJib3R0b21cIjtcblxuXHR2YXIgc3R5bGVzID0gbGlzdFRvU3R5bGVzKGxpc3QsIG9wdGlvbnMpO1xuXG5cdGFkZFN0eWxlc1RvRG9tKHN0eWxlcywgb3B0aW9ucyk7XG5cblx0cmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZSAobmV3TGlzdCkge1xuXHRcdHZhciBtYXlSZW1vdmUgPSBbXTtcblxuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgaXRlbSA9IHN0eWxlc1tpXTtcblx0XHRcdHZhciBkb21TdHlsZSA9IHN0eWxlc0luRG9tW2l0ZW0uaWRdO1xuXG5cdFx0XHRkb21TdHlsZS5yZWZzLS07XG5cdFx0XHRtYXlSZW1vdmUucHVzaChkb21TdHlsZSk7XG5cdFx0fVxuXG5cdFx0aWYobmV3TGlzdCkge1xuXHRcdFx0dmFyIG5ld1N0eWxlcyA9IGxpc3RUb1N0eWxlcyhuZXdMaXN0LCBvcHRpb25zKTtcblx0XHRcdGFkZFN0eWxlc1RvRG9tKG5ld1N0eWxlcywgb3B0aW9ucyk7XG5cdFx0fVxuXG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBtYXlSZW1vdmUubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBkb21TdHlsZSA9IG1heVJlbW92ZVtpXTtcblxuXHRcdFx0aWYoZG9tU3R5bGUucmVmcyA9PT0gMCkge1xuXHRcdFx0XHRmb3IgKHZhciBqID0gMDsgaiA8IGRvbVN0eWxlLnBhcnRzLmxlbmd0aDsgaisrKSBkb21TdHlsZS5wYXJ0c1tqXSgpO1xuXG5cdFx0XHRcdGRlbGV0ZSBzdHlsZXNJbkRvbVtkb21TdHlsZS5pZF07XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xufTtcblxuZnVuY3Rpb24gYWRkU3R5bGVzVG9Eb20gKHN0eWxlcywgb3B0aW9ucykge1xuXHRmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlcy5sZW5ndGg7IGkrKykge1xuXHRcdHZhciBpdGVtID0gc3R5bGVzW2ldO1xuXHRcdHZhciBkb21TdHlsZSA9IHN0eWxlc0luRG9tW2l0ZW0uaWRdO1xuXG5cdFx0aWYoZG9tU3R5bGUpIHtcblx0XHRcdGRvbVN0eWxlLnJlZnMrKztcblxuXHRcdFx0Zm9yKHZhciBqID0gMDsgaiA8IGRvbVN0eWxlLnBhcnRzLmxlbmd0aDsgaisrKSB7XG5cdFx0XHRcdGRvbVN0eWxlLnBhcnRzW2pdKGl0ZW0ucGFydHNbal0pO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3IoOyBqIDwgaXRlbS5wYXJ0cy5sZW5ndGg7IGorKykge1xuXHRcdFx0XHRkb21TdHlsZS5wYXJ0cy5wdXNoKGFkZFN0eWxlKGl0ZW0ucGFydHNbal0sIG9wdGlvbnMpKTtcblx0XHRcdH1cblx0XHR9IGVsc2Uge1xuXHRcdFx0dmFyIHBhcnRzID0gW107XG5cblx0XHRcdGZvcih2YXIgaiA9IDA7IGogPCBpdGVtLnBhcnRzLmxlbmd0aDsgaisrKSB7XG5cdFx0XHRcdHBhcnRzLnB1c2goYWRkU3R5bGUoaXRlbS5wYXJ0c1tqXSwgb3B0aW9ucykpO1xuXHRcdFx0fVxuXG5cdFx0XHRzdHlsZXNJbkRvbVtpdGVtLmlkXSA9IHtpZDogaXRlbS5pZCwgcmVmczogMSwgcGFydHM6IHBhcnRzfTtcblx0XHR9XG5cdH1cbn1cblxuZnVuY3Rpb24gbGlzdFRvU3R5bGVzIChsaXN0LCBvcHRpb25zKSB7XG5cdHZhciBzdHlsZXMgPSBbXTtcblx0dmFyIG5ld1N0eWxlcyA9IHt9O1xuXG5cdGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuXHRcdHZhciBpdGVtID0gbGlzdFtpXTtcblx0XHR2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcblx0XHR2YXIgY3NzID0gaXRlbVsxXTtcblx0XHR2YXIgbWVkaWEgPSBpdGVtWzJdO1xuXHRcdHZhciBzb3VyY2VNYXAgPSBpdGVtWzNdO1xuXHRcdHZhciBwYXJ0ID0ge2NzczogY3NzLCBtZWRpYTogbWVkaWEsIHNvdXJjZU1hcDogc291cmNlTWFwfTtcblxuXHRcdGlmKCFuZXdTdHlsZXNbaWRdKSBzdHlsZXMucHVzaChuZXdTdHlsZXNbaWRdID0ge2lkOiBpZCwgcGFydHM6IFtwYXJ0XX0pO1xuXHRcdGVsc2UgbmV3U3R5bGVzW2lkXS5wYXJ0cy5wdXNoKHBhcnQpO1xuXHR9XG5cblx0cmV0dXJuIHN0eWxlcztcbn1cblxuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50IChvcHRpb25zLCBzdHlsZSkge1xuXHR2YXIgdGFyZ2V0ID0gZ2V0RWxlbWVudChvcHRpb25zLmluc2VydEludG8pXG5cblx0aWYgKCF0YXJnZXQpIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydEludG8nIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcblx0fVxuXG5cdHZhciBsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcCA9IHN0eWxlc0luc2VydGVkQXRUb3Bbc3R5bGVzSW5zZXJ0ZWRBdFRvcC5sZW5ndGggLSAxXTtcblxuXHRpZiAob3B0aW9ucy5pbnNlcnRBdCA9PT0gXCJ0b3BcIikge1xuXHRcdGlmICghbGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3ApIHtcblx0XHRcdHRhcmdldC5pbnNlcnRCZWZvcmUoc3R5bGUsIHRhcmdldC5maXJzdENoaWxkKTtcblx0XHR9IGVsc2UgaWYgKGxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wLm5leHRTaWJsaW5nKSB7XG5cdFx0XHR0YXJnZXQuaW5zZXJ0QmVmb3JlKHN0eWxlLCBsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcC5uZXh0U2libGluZyk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG5cdFx0fVxuXHRcdHN0eWxlc0luc2VydGVkQXRUb3AucHVzaChzdHlsZSk7XG5cdH0gZWxzZSBpZiAob3B0aW9ucy5pbnNlcnRBdCA9PT0gXCJib3R0b21cIikge1xuXHRcdHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG5cdH0gZWxzZSBpZiAodHlwZW9mIG9wdGlvbnMuaW5zZXJ0QXQgPT09IFwib2JqZWN0XCIgJiYgb3B0aW9ucy5pbnNlcnRBdC5iZWZvcmUpIHtcblx0XHR2YXIgbmV4dFNpYmxpbmcgPSBnZXRFbGVtZW50KG9wdGlvbnMuaW5zZXJ0SW50byArIFwiIFwiICsgb3B0aW9ucy5pbnNlcnRBdC5iZWZvcmUpO1xuXHRcdHRhcmdldC5pbnNlcnRCZWZvcmUoc3R5bGUsIG5leHRTaWJsaW5nKTtcblx0fSBlbHNlIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoXCJbU3R5bGUgTG9hZGVyXVxcblxcbiBJbnZhbGlkIHZhbHVlIGZvciBwYXJhbWV0ZXIgJ2luc2VydEF0JyAoJ29wdGlvbnMuaW5zZXJ0QXQnKSBmb3VuZC5cXG4gTXVzdCBiZSAndG9wJywgJ2JvdHRvbScsIG9yIE9iamVjdC5cXG4gKGh0dHBzOi8vZ2l0aHViLmNvbS93ZWJwYWNrLWNvbnRyaWIvc3R5bGUtbG9hZGVyI2luc2VydGF0KVxcblwiKTtcblx0fVxufVxuXG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQgKHN0eWxlKSB7XG5cdGlmIChzdHlsZS5wYXJlbnROb2RlID09PSBudWxsKSByZXR1cm4gZmFsc2U7XG5cdHN0eWxlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGUpO1xuXG5cdHZhciBpZHggPSBzdHlsZXNJbnNlcnRlZEF0VG9wLmluZGV4T2Yoc3R5bGUpO1xuXHRpZihpZHggPj0gMCkge1xuXHRcdHN0eWxlc0luc2VydGVkQXRUb3Auc3BsaWNlKGlkeCwgMSk7XG5cdH1cbn1cblxuZnVuY3Rpb24gY3JlYXRlU3R5bGVFbGVtZW50IChvcHRpb25zKSB7XG5cdHZhciBzdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcblxuXHRpZihvcHRpb25zLmF0dHJzLnR5cGUgPT09IHVuZGVmaW5lZCkge1xuXHRcdG9wdGlvbnMuYXR0cnMudHlwZSA9IFwidGV4dC9jc3NcIjtcblx0fVxuXG5cdGFkZEF0dHJzKHN0eWxlLCBvcHRpb25zLmF0dHJzKTtcblx0aW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMsIHN0eWxlKTtcblxuXHRyZXR1cm4gc3R5bGU7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUxpbmtFbGVtZW50IChvcHRpb25zKSB7XG5cdHZhciBsaW5rID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxpbmtcIik7XG5cblx0aWYob3B0aW9ucy5hdHRycy50eXBlID09PSB1bmRlZmluZWQpIHtcblx0XHRvcHRpb25zLmF0dHJzLnR5cGUgPSBcInRleHQvY3NzXCI7XG5cdH1cblx0b3B0aW9ucy5hdHRycy5yZWwgPSBcInN0eWxlc2hlZXRcIjtcblxuXHRhZGRBdHRycyhsaW5rLCBvcHRpb25zLmF0dHJzKTtcblx0aW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMsIGxpbmspO1xuXG5cdHJldHVybiBsaW5rO1xufVxuXG5mdW5jdGlvbiBhZGRBdHRycyAoZWwsIGF0dHJzKSB7XG5cdE9iamVjdC5rZXlzKGF0dHJzKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcblx0XHRlbC5zZXRBdHRyaWJ1dGUoa2V5LCBhdHRyc1trZXldKTtcblx0fSk7XG59XG5cbmZ1bmN0aW9uIGFkZFN0eWxlIChvYmosIG9wdGlvbnMpIHtcblx0dmFyIHN0eWxlLCB1cGRhdGUsIHJlbW92ZSwgcmVzdWx0O1xuXG5cdC8vIElmIGEgdHJhbnNmb3JtIGZ1bmN0aW9uIHdhcyBkZWZpbmVkLCBydW4gaXQgb24gdGhlIGNzc1xuXHRpZiAob3B0aW9ucy50cmFuc2Zvcm0gJiYgb2JqLmNzcykge1xuXHQgICAgcmVzdWx0ID0gb3B0aW9ucy50cmFuc2Zvcm0ob2JqLmNzcyk7XG5cblx0ICAgIGlmIChyZXN1bHQpIHtcblx0ICAgIFx0Ly8gSWYgdHJhbnNmb3JtIHJldHVybnMgYSB2YWx1ZSwgdXNlIHRoYXQgaW5zdGVhZCBvZiB0aGUgb3JpZ2luYWwgY3NzLlxuXHQgICAgXHQvLyBUaGlzIGFsbG93cyBydW5uaW5nIHJ1bnRpbWUgdHJhbnNmb3JtYXRpb25zIG9uIHRoZSBjc3MuXG5cdCAgICBcdG9iai5jc3MgPSByZXN1bHQ7XG5cdCAgICB9IGVsc2Uge1xuXHQgICAgXHQvLyBJZiB0aGUgdHJhbnNmb3JtIGZ1bmN0aW9uIHJldHVybnMgYSBmYWxzeSB2YWx1ZSwgZG9uJ3QgYWRkIHRoaXMgY3NzLlxuXHQgICAgXHQvLyBUaGlzIGFsbG93cyBjb25kaXRpb25hbCBsb2FkaW5nIG9mIGNzc1xuXHQgICAgXHRyZXR1cm4gZnVuY3Rpb24oKSB7XG5cdCAgICBcdFx0Ly8gbm9vcFxuXHQgICAgXHR9O1xuXHQgICAgfVxuXHR9XG5cblx0aWYgKG9wdGlvbnMuc2luZ2xldG9uKSB7XG5cdFx0dmFyIHN0eWxlSW5kZXggPSBzaW5nbGV0b25Db3VudGVyKys7XG5cblx0XHRzdHlsZSA9IHNpbmdsZXRvbiB8fCAoc2luZ2xldG9uID0gY3JlYXRlU3R5bGVFbGVtZW50KG9wdGlvbnMpKTtcblxuXHRcdHVwZGF0ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZSwgc3R5bGVJbmRleCwgZmFsc2UpO1xuXHRcdHJlbW92ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZSwgc3R5bGVJbmRleCwgdHJ1ZSk7XG5cblx0fSBlbHNlIGlmIChcblx0XHRvYmouc291cmNlTWFwICYmXG5cdFx0dHlwZW9mIFVSTCA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIFVSTC5jcmVhdGVPYmplY3RVUkwgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBVUkwucmV2b2tlT2JqZWN0VVJMID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2YgQmxvYiA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIlxuXHQpIHtcblx0XHRzdHlsZSA9IGNyZWF0ZUxpbmtFbGVtZW50KG9wdGlvbnMpO1xuXHRcdHVwZGF0ZSA9IHVwZGF0ZUxpbmsuYmluZChudWxsLCBzdHlsZSwgb3B0aW9ucyk7XG5cdFx0cmVtb3ZlID0gZnVuY3Rpb24gKCkge1xuXHRcdFx0cmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKTtcblxuXHRcdFx0aWYoc3R5bGUuaHJlZikgVVJMLnJldm9rZU9iamVjdFVSTChzdHlsZS5ocmVmKTtcblx0XHR9O1xuXHR9IGVsc2Uge1xuXHRcdHN0eWxlID0gY3JlYXRlU3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuXHRcdHVwZGF0ZSA9IGFwcGx5VG9UYWcuYmluZChudWxsLCBzdHlsZSk7XG5cdFx0cmVtb3ZlID0gZnVuY3Rpb24gKCkge1xuXHRcdFx0cmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKTtcblx0XHR9O1xuXHR9XG5cblx0dXBkYXRlKG9iaik7XG5cblx0cmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZVN0eWxlIChuZXdPYmopIHtcblx0XHRpZiAobmV3T2JqKSB7XG5cdFx0XHRpZiAoXG5cdFx0XHRcdG5ld09iai5jc3MgPT09IG9iai5jc3MgJiZcblx0XHRcdFx0bmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiZcblx0XHRcdFx0bmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcFxuXHRcdFx0KSB7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0dXBkYXRlKG9iaiA9IG5ld09iaik7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHJlbW92ZSgpO1xuXHRcdH1cblx0fTtcbn1cblxudmFyIHJlcGxhY2VUZXh0ID0gKGZ1bmN0aW9uICgpIHtcblx0dmFyIHRleHRTdG9yZSA9IFtdO1xuXG5cdHJldHVybiBmdW5jdGlvbiAoaW5kZXgsIHJlcGxhY2VtZW50KSB7XG5cdFx0dGV4dFN0b3JlW2luZGV4XSA9IHJlcGxhY2VtZW50O1xuXG5cdFx0cmV0dXJuIHRleHRTdG9yZS5maWx0ZXIoQm9vbGVhbikuam9pbignXFxuJyk7XG5cdH07XG59KSgpO1xuXG5mdW5jdGlvbiBhcHBseVRvU2luZ2xldG9uVGFnIChzdHlsZSwgaW5kZXgsIHJlbW92ZSwgb2JqKSB7XG5cdHZhciBjc3MgPSByZW1vdmUgPyBcIlwiIDogb2JqLmNzcztcblxuXHRpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuXHRcdHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IHJlcGxhY2VUZXh0KGluZGV4LCBjc3MpO1xuXHR9IGVsc2Uge1xuXHRcdHZhciBjc3NOb2RlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKTtcblx0XHR2YXIgY2hpbGROb2RlcyA9IHN0eWxlLmNoaWxkTm9kZXM7XG5cblx0XHRpZiAoY2hpbGROb2Rlc1tpbmRleF0pIHN0eWxlLnJlbW92ZUNoaWxkKGNoaWxkTm9kZXNbaW5kZXhdKTtcblxuXHRcdGlmIChjaGlsZE5vZGVzLmxlbmd0aCkge1xuXHRcdFx0c3R5bGUuaW5zZXJ0QmVmb3JlKGNzc05vZGUsIGNoaWxkTm9kZXNbaW5kZXhdKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0c3R5bGUuYXBwZW5kQ2hpbGQoY3NzTm9kZSk7XG5cdFx0fVxuXHR9XG59XG5cbmZ1bmN0aW9uIGFwcGx5VG9UYWcgKHN0eWxlLCBvYmopIHtcblx0dmFyIGNzcyA9IG9iai5jc3M7XG5cdHZhciBtZWRpYSA9IG9iai5tZWRpYTtcblxuXHRpZihtZWRpYSkge1xuXHRcdHN0eWxlLnNldEF0dHJpYnV0ZShcIm1lZGlhXCIsIG1lZGlhKVxuXHR9XG5cblx0aWYoc3R5bGUuc3R5bGVTaGVldCkge1xuXHRcdHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcblx0fSBlbHNlIHtcblx0XHR3aGlsZShzdHlsZS5maXJzdENoaWxkKSB7XG5cdFx0XHRzdHlsZS5yZW1vdmVDaGlsZChzdHlsZS5maXJzdENoaWxkKTtcblx0XHR9XG5cblx0XHRzdHlsZS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcblx0fVxufVxuXG5mdW5jdGlvbiB1cGRhdGVMaW5rIChsaW5rLCBvcHRpb25zLCBvYmopIHtcblx0dmFyIGNzcyA9IG9iai5jc3M7XG5cdHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG5cdC8qXG5cdFx0SWYgY29udmVydFRvQWJzb2x1dGVVcmxzIGlzbid0IGRlZmluZWQsIGJ1dCBzb3VyY2VtYXBzIGFyZSBlbmFibGVkXG5cdFx0YW5kIHRoZXJlIGlzIG5vIHB1YmxpY1BhdGggZGVmaW5lZCB0aGVuIGxldHMgdHVybiBjb252ZXJ0VG9BYnNvbHV0ZVVybHNcblx0XHRvbiBieSBkZWZhdWx0LiAgT3RoZXJ3aXNlIGRlZmF1bHQgdG8gdGhlIGNvbnZlcnRUb0Fic29sdXRlVXJscyBvcHRpb25cblx0XHRkaXJlY3RseVxuXHQqL1xuXHR2YXIgYXV0b0ZpeFVybHMgPSBvcHRpb25zLmNvbnZlcnRUb0Fic29sdXRlVXJscyA9PT0gdW5kZWZpbmVkICYmIHNvdXJjZU1hcDtcblxuXHRpZiAob3B0aW9ucy5jb252ZXJ0VG9BYnNvbHV0ZVVybHMgfHwgYXV0b0ZpeFVybHMpIHtcblx0XHRjc3MgPSBmaXhVcmxzKGNzcyk7XG5cdH1cblxuXHRpZiAoc291cmNlTWFwKSB7XG5cdFx0Ly8gaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMjY2MDM4NzVcblx0XHRjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiICsgYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSArIFwiICovXCI7XG5cdH1cblxuXHR2YXIgYmxvYiA9IG5ldyBCbG9iKFtjc3NdLCB7IHR5cGU6IFwidGV4dC9jc3NcIiB9KTtcblxuXHR2YXIgb2xkU3JjID0gbGluay5ocmVmO1xuXG5cdGxpbmsuaHJlZiA9IFVSTC5jcmVhdGVPYmplY3RVUkwoYmxvYik7XG5cblx0aWYob2xkU3JjKSBVUkwucmV2b2tlT2JqZWN0VVJMKG9sZFNyYyk7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///3\n')},function(module,exports){eval('/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn "@media " + item[2] + "{" + content + "}";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join("");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === "string")\n\t\t\tmodules = [[null, modules, ""]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === "number")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = "(" + item[2] + ") and (" + mediaQuery + ")";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || \'\';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === \'function\') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn \'/*# sourceURL=\' + cssMapping.sourceRoot + source + \' */\'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join(\'\\n\');\n\t}\n\n\treturn [content].join(\'\\n\');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = \'sourceMappingURL=data:application/json;charset=utf-8;base64,\' + base64;\n\n\treturn \'/*# \' + data + \' */\';\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9UaWFvWWlUaWFvLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qcz83YjRiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsZ0JBQWdCO0FBQ25ELElBQUk7QUFDSjtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsaUJBQWlCO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxvQkFBb0I7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0RBQW9ELGNBQWM7O0FBRWxFO0FBQ0EiLCJmaWxlIjoiNC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG5cdE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG5cdEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG4vLyBjc3MgYmFzZSBjb2RlLCBpbmplY3RlZCBieSB0aGUgY3NzLWxvYWRlclxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbih1c2VTb3VyY2VNYXApIHtcblx0dmFyIGxpc3QgPSBbXTtcblxuXHQvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG5cdGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcblx0XHRyZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcblx0XHRcdHZhciBjb250ZW50ID0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApO1xuXHRcdFx0aWYoaXRlbVsyXSkge1xuXHRcdFx0XHRyZXR1cm4gXCJAbWVkaWEgXCIgKyBpdGVtWzJdICsgXCJ7XCIgKyBjb250ZW50ICsgXCJ9XCI7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRyZXR1cm4gY29udGVudDtcblx0XHRcdH1cblx0XHR9KS5qb2luKFwiXCIpO1xuXHR9O1xuXG5cdC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG5cdGxpc3QuaSA9IGZ1bmN0aW9uKG1vZHVsZXMsIG1lZGlhUXVlcnkpIHtcblx0XHRpZih0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIilcblx0XHRcdG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIFwiXCJdXTtcblx0XHR2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuXHRcdGZvcih2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgaWQgPSB0aGlzW2ldWzBdO1xuXHRcdFx0aWYodHlwZW9mIGlkID09PSBcIm51bWJlclwiKVxuXHRcdFx0XHRhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG5cdFx0fVxuXHRcdGZvcihpID0gMDsgaSA8IG1vZHVsZXMubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBpdGVtID0gbW9kdWxlc1tpXTtcblx0XHRcdC8vIHNraXAgYWxyZWFkeSBpbXBvcnRlZCBtb2R1bGVcblx0XHRcdC8vIHRoaXMgaW1wbGVtZW50YXRpb24gaXMgbm90IDEwMCUgcGVyZmVjdCBmb3Igd2VpcmQgbWVkaWEgcXVlcnkgY29tYmluYXRpb25zXG5cdFx0XHQvLyAgd2hlbiBhIG1vZHVsZSBpcyBpbXBvcnRlZCBtdWx0aXBsZSB0aW1lcyB3aXRoIGRpZmZlcmVudCBtZWRpYSBxdWVyaWVzLlxuXHRcdFx0Ly8gIEkgaG9wZSB0aGlzIHdpbGwgbmV2ZXIgb2NjdXIgKEhleSB0aGlzIHdheSB3ZSBoYXZlIHNtYWxsZXIgYnVuZGxlcylcblx0XHRcdGlmKHR5cGVvZiBpdGVtWzBdICE9PSBcIm51bWJlclwiIHx8ICFhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG5cdFx0XHRcdGlmKG1lZGlhUXVlcnkgJiYgIWl0ZW1bMl0pIHtcblx0XHRcdFx0XHRpdGVtWzJdID0gbWVkaWFRdWVyeTtcblx0XHRcdFx0fSBlbHNlIGlmKG1lZGlhUXVlcnkpIHtcblx0XHRcdFx0XHRpdGVtWzJdID0gXCIoXCIgKyBpdGVtWzJdICsgXCIpIGFuZCAoXCIgKyBtZWRpYVF1ZXJ5ICsgXCIpXCI7XG5cdFx0XHRcdH1cblx0XHRcdFx0bGlzdC5wdXNoKGl0ZW0pO1xuXHRcdFx0fVxuXHRcdH1cblx0fTtcblx0cmV0dXJuIGxpc3Q7XG59O1xuXG5mdW5jdGlvbiBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCkge1xuXHR2YXIgY29udGVudCA9IGl0ZW1bMV0gfHwgJyc7XG5cdHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcblx0aWYgKCFjc3NNYXBwaW5nKSB7XG5cdFx0cmV0dXJuIGNvbnRlbnQ7XG5cdH1cblxuXHRpZiAodXNlU291cmNlTWFwICYmIHR5cGVvZiBidG9hID09PSAnZnVuY3Rpb24nKSB7XG5cdFx0dmFyIHNvdXJjZU1hcHBpbmcgPSB0b0NvbW1lbnQoY3NzTWFwcGluZyk7XG5cdFx0dmFyIHNvdXJjZVVSTHMgPSBjc3NNYXBwaW5nLnNvdXJjZXMubWFwKGZ1bmN0aW9uIChzb3VyY2UpIHtcblx0XHRcdHJldHVybiAnLyojIHNvdXJjZVVSTD0nICsgY3NzTWFwcGluZy5zb3VyY2VSb290ICsgc291cmNlICsgJyAqLydcblx0XHR9KTtcblxuXHRcdHJldHVybiBbY29udGVudF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oJ1xcbicpO1xuXHR9XG5cblx0cmV0dXJuIFtjb250ZW50XS5qb2luKCdcXG4nKTtcbn1cblxuLy8gQWRhcHRlZCBmcm9tIGNvbnZlcnQtc291cmNlLW1hcCAoTUlUKVxuZnVuY3Rpb24gdG9Db21tZW50KHNvdXJjZU1hcCkge1xuXHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcblx0dmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSk7XG5cdHZhciBkYXRhID0gJ3NvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LCcgKyBiYXNlNjQ7XG5cblx0cmV0dXJuICcvKiMgJyArIGRhdGEgKyAnICovJztcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///4\n')},function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__.p + "img/score-2.png?6b6233";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9UaWFvWWlUaWFvLy4vc3JjL2NvbW1vbi9pbWcvc2NvcmUtMi5wbmc/YTljZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiI1LmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiaW1nL3Njb3JlLTIucG5nPzZiNjIzM1wiOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///5\n')},function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__.p + "img/score-1.png?019c2a";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9UaWFvWWlUaWFvLy4vc3JjL2NvbW1vbi9pbWcvc2NvcmUtMS5wbmc/NzI0MyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiI2LmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiaW1nL3Njb3JlLTEucG5nPzAxOWMyYVwiOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///6\n')},function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__.p + "img/floor2.jpg?19d062";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9UaWFvWWlUaWFvLy4vc3JjL2NvbW1vbi9pbWcvZmxvb3IyLmpwZz9kNmRjIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJpbWcvZmxvb3IyLmpwZz8xOWQwNjJcIjsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///7\n')},function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__.p + "img/game-board2.jpg?e1f51a";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9UaWFvWWlUaWFvLy4vc3JjL2NvbW1vbi9pbWcvZ2FtZS1ib2FyZDIuanBnPzMxYzAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiOC5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcImltZy9nYW1lLWJvYXJkMi5qcGc/ZTFmNTFhXCI7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///8\n')},function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__.p + "img/game-board1.jpg?0aa61c";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9UaWFvWWlUaWFvLy4vc3JjL2NvbW1vbi9pbWcvZ2FtZS1ib2FyZDEuanBnP2YyMmEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiOS5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcImltZy9nYW1lLWJvYXJkMS5qcGc/MGFhNjFjXCI7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///9\n')},function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__.p + "img/board1.jpg?f940a0";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9UaWFvWWlUaWFvLy4vc3JjL2NvbW1vbi9pbWcvYm9hcmQxLmpwZz9hN2JkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjEwLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiaW1nL2JvYXJkMS5qcGc/Zjk0MGEwXCI7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///10\n')},function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__.p + "img/boarde.jpg?f63c97";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9UaWFvWWlUaWFvLy4vc3JjL2NvbW1vbi9pbWcvYm9hcmRlLmpwZz8yZmJkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjExLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiaW1nL2JvYXJkZS5qcGc/ZjYzYzk3XCI7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///11\n')},function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__.p + "img/boardb.jpg?408335";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9UaWFvWWlUaWFvLy4vc3JjL2NvbW1vbi9pbWcvYm9hcmRiLmpwZz8yMDUwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjEyLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiaW1nL2JvYXJkYi5qcGc/NDA4MzM1XCI7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///12\n')},function(module,exports){eval('module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, "loaded", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, "id", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9UaWFvWWlUaWFvLy4uL25vZGVfbW9kdWxlcy93ZWJwYWNrL2J1aWxkaW4vbW9kdWxlLmpzPzQ2ODAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjEzLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihtb2R1bGUpIHtcblx0aWYgKCFtb2R1bGUud2VicGFja1BvbHlmaWxsKSB7XG5cdFx0bW9kdWxlLmRlcHJlY2F0ZSA9IGZ1bmN0aW9uKCkge307XG5cdFx0bW9kdWxlLnBhdGhzID0gW107XG5cdFx0Ly8gbW9kdWxlLnBhcmVudCA9IHVuZGVmaW5lZCBieSBkZWZhdWx0XG5cdFx0aWYgKCFtb2R1bGUuY2hpbGRyZW4pIG1vZHVsZS5jaGlsZHJlbiA9IFtdO1xuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShtb2R1bGUsIFwibG9hZGVkXCIsIHtcblx0XHRcdGVudW1lcmFibGU6IHRydWUsXG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4gbW9kdWxlLmw7XG5cdFx0XHR9XG5cdFx0fSk7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG1vZHVsZSwgXCJpZFwiLCB7XG5cdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxuXHRcdFx0Z2V0OiBmdW5jdGlvbigpIHtcblx0XHRcdFx0cmV0dXJuIG1vZHVsZS5pO1xuXHRcdFx0fVxuXHRcdH0pO1xuXHRcdG1vZHVsZS53ZWJwYWNrUG9seWZpbGwgPSAxO1xuXHR9XG5cdHJldHVybiBtb2R1bGU7XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///13\n')},function(module,exports,__webpack_require__){"use strict";eval("/* WEBPACK VAR INJECTION */(function(module) {\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mr.doob / http://mrdoob.com/\r\n */\n\nvar Detector = {\n\n\t\tcanvas: !!window.CanvasRenderingContext2D,\n\t\twebgl: function () {\n\n\t\t\t\ttry {\n\n\t\t\t\t\t\tvar canvas = document.createElement('canvas');return !!(window.WebGLRenderingContext && (canvas.getContext('webgl') || canvas.getContext('experimental-webgl')));\n\t\t\t\t} catch (e) {\n\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t}(),\n\t\tworkers: !!window.Worker,\n\t\tfileapi: window.File && window.FileReader && window.FileList && window.Blob,\n\n\t\tgetWebGLErrorMessage: function getWebGLErrorMessage() {\n\n\t\t\t\tvar element = document.createElement('div');\n\t\t\t\telement.id = 'webgl-error-message';\n\t\t\t\telement.style.fontFamily = 'monospace';\n\t\t\t\telement.style.fontSize = '13px';\n\t\t\t\telement.style.fontWeight = 'normal';\n\t\t\t\telement.style.textAlign = 'center';\n\t\t\t\telement.style.background = '#fff';\n\t\t\t\telement.style.color = '#000';\n\t\t\t\telement.style.padding = '1.5em';\n\t\t\t\telement.style.width = '400px';\n\t\t\t\telement.style.margin = '5em auto 0';\n\n\t\t\t\tif (!this.webgl) {\n\n\t\t\t\t\t\telement.innerHTML = window.WebGLRenderingContext ? ['Your graphics card does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000\">WebGL</a>.<br />', 'Find out how to get it <a href=\"http://get.webgl.org/\" style=\"color:#000\">here</a>.'].join('\\n') : ['Your browser does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000\">WebGL</a>.<br/>', 'Find out how to get it <a href=\"http://get.webgl.org/\" style=\"color:#000\">here</a>.'].join('\\n');\n\t\t\t\t}\n\n\t\t\t\treturn element;\n\t\t},\n\n\t\taddGetWebGLMessage: function addGetWebGLMessage(parameters) {\n\n\t\t\t\tvar parent, id, element;\n\n\t\t\t\tparameters = parameters || {};\n\n\t\t\t\tparent = parameters.parent !== undefined ? parameters.parent : document.body;\n\t\t\t\tid = parameters.id !== undefined ? parameters.id : 'oldie';\n\n\t\t\t\telement = Detector.getWebGLErrorMessage();\n\t\t\t\telement.id = id;\n\n\t\t\t\tparent.appendChild(element);\n\t\t}\n\n};\n\n// browserify support\nif (( false ? undefined : _typeof(module)) === 'object') {\n\n\t\tmodule.exports = Detector;\n}\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(13)(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9UaWFvWWlUaWFvLy4vc3JjL2RldGVjdG9yLmpzP2UwYzYiXSwibmFtZXMiOlsiRGV0ZWN0b3IiLCJjYW52YXMiLCJ3aW5kb3ciLCJDYW52YXNSZW5kZXJpbmdDb250ZXh0MkQiLCJ3ZWJnbCIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsIldlYkdMUmVuZGVyaW5nQ29udGV4dCIsImdldENvbnRleHQiLCJlIiwid29ya2VycyIsIldvcmtlciIsImZpbGVhcGkiLCJGaWxlIiwiRmlsZVJlYWRlciIsIkZpbGVMaXN0IiwiQmxvYiIsImdldFdlYkdMRXJyb3JNZXNzYWdlIiwiZWxlbWVudCIsImlkIiwic3R5bGUiLCJmb250RmFtaWx5IiwiZm9udFNpemUiLCJmb250V2VpZ2h0IiwidGV4dEFsaWduIiwiYmFja2dyb3VuZCIsImNvbG9yIiwicGFkZGluZyIsIndpZHRoIiwibWFyZ2luIiwiaW5uZXJIVE1MIiwiam9pbiIsImFkZEdldFdlYkdMTWVzc2FnZSIsInBhcmFtZXRlcnMiLCJwYXJlbnQiLCJ1bmRlZmluZWQiLCJib2R5IiwiYXBwZW5kQ2hpbGQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7O0FBQUE7Ozs7O0FBS0EsSUFBSUEsV0FBVzs7QUFFZEMsVUFBUSxDQUFDLENBQUVDLE9BQU9DLHdCQUZKO0FBR2RDLFNBQVMsWUFBWTs7QUFFcEIsUUFBSTs7QUFFSCxVQUFJSCxTQUFTSSxTQUFTQyxhQUFULENBQXdCLFFBQXhCLENBQWIsQ0FBaUQsT0FBTyxDQUFDLEVBQUlKLE9BQU9LLHFCQUFQLEtBQWtDTixPQUFPTyxVQUFQLENBQW1CLE9BQW5CLEtBQWdDUCxPQUFPTyxVQUFQLENBQW1CLG9CQUFuQixDQUFsRSxDQUFKLENBQVI7QUFFakQsS0FKRCxDQUlFLE9BQVFDLENBQVIsRUFBWTs7QUFFYixhQUFPLEtBQVA7QUFFQTtBQUVELEdBWk0sRUFITztBQWdCZEMsV0FBUyxDQUFDLENBQUVSLE9BQU9TLE1BaEJMO0FBaUJkQyxXQUFTVixPQUFPVyxJQUFQLElBQWVYLE9BQU9ZLFVBQXRCLElBQW9DWixPQUFPYSxRQUEzQyxJQUF1RGIsT0FBT2MsSUFqQnpEOztBQW1CZEMsd0JBQXNCLGdDQUFZOztBQUVqQyxRQUFJQyxVQUFVYixTQUFTQyxhQUFULENBQXdCLEtBQXhCLENBQWQ7QUFDQVksWUFBUUMsRUFBUixHQUFhLHFCQUFiO0FBQ0FELFlBQVFFLEtBQVIsQ0FBY0MsVUFBZCxHQUEyQixXQUEzQjtBQUNBSCxZQUFRRSxLQUFSLENBQWNFLFFBQWQsR0FBeUIsTUFBekI7QUFDQUosWUFBUUUsS0FBUixDQUFjRyxVQUFkLEdBQTJCLFFBQTNCO0FBQ0FMLFlBQVFFLEtBQVIsQ0FBY0ksU0FBZCxHQUEwQixRQUExQjtBQUNBTixZQUFRRSxLQUFSLENBQWNLLFVBQWQsR0FBMkIsTUFBM0I7QUFDQVAsWUFBUUUsS0FBUixDQUFjTSxLQUFkLEdBQXNCLE1BQXRCO0FBQ0FSLFlBQVFFLEtBQVIsQ0FBY08sT0FBZCxHQUF3QixPQUF4QjtBQUNBVCxZQUFRRSxLQUFSLENBQWNRLEtBQWQsR0FBc0IsT0FBdEI7QUFDQVYsWUFBUUUsS0FBUixDQUFjUyxNQUFkLEdBQXVCLFlBQXZCOztBQUVBLFFBQUssQ0FBRSxLQUFLekIsS0FBWixFQUFvQjs7QUFFbkJjLGNBQVFZLFNBQVIsR0FBb0I1QixPQUFPSyxxQkFBUCxHQUErQixDQUNsRCx3SkFEa0QsRUFFbEQscUZBRmtELEVBR2pEd0IsSUFIaUQsQ0FHM0MsSUFIMkMsQ0FBL0IsR0FHSCxDQUNoQixpSkFEZ0IsRUFFaEIscUZBRmdCLEVBR2ZBLElBSGUsQ0FHVCxJQUhTLENBSGpCO0FBUUE7O0FBRUQsV0FBT2IsT0FBUDtBQUVBLEdBL0NhOztBQWlEZGMsc0JBQW9CLDRCQUFXQyxVQUFYLEVBQXdCOztBQUUzQyxRQUFJQyxNQUFKLEVBQVlmLEVBQVosRUFBZ0JELE9BQWhCOztBQUVBZSxpQkFBYUEsY0FBYyxFQUEzQjs7QUFFQUMsYUFBU0QsV0FBV0MsTUFBWCxLQUFzQkMsU0FBdEIsR0FBa0NGLFdBQVdDLE1BQTdDLEdBQXNEN0IsU0FBUytCLElBQXhFO0FBQ0FqQixTQUFLYyxXQUFXZCxFQUFYLEtBQWtCZ0IsU0FBbEIsR0FBOEJGLFdBQVdkLEVBQXpDLEdBQThDLE9BQW5EOztBQUVBRCxjQUFVbEIsU0FBU2lCLG9CQUFULEVBQVY7QUFDQUMsWUFBUUMsRUFBUixHQUFhQSxFQUFiOztBQUVBZSxXQUFPRyxXQUFQLENBQW9CbkIsT0FBcEI7QUFFQTs7QUEvRGEsQ0FBZjs7QUFtRUE7QUFDQSxJQUFLLDhCQUFPb0IsTUFBUCxPQUFrQixRQUF2QixFQUFrQzs7QUFFakNBLFNBQU9DLE9BQVAsR0FBaUJ2QyxRQUFqQjtBQUVBLEMiLCJmaWxlIjoiMTQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQGF1dGhvciBhbHRlcmVkcSAvIGh0dHA6Ly9hbHRlcmVkcXVhbGlhLmNvbS9cclxuICogQGF1dGhvciBtci5kb29iIC8gaHR0cDovL21yZG9vYi5jb20vXHJcbiAqL1xyXG5cclxudmFyIERldGVjdG9yID0ge1xyXG5cclxuXHRjYW52YXM6ICEhIHdpbmRvdy5DYW52YXNSZW5kZXJpbmdDb250ZXh0MkQsXHJcblx0d2ViZ2w6ICggZnVuY3Rpb24gKCkge1xyXG5cclxuXHRcdHRyeSB7XHJcblxyXG5cdFx0XHR2YXIgY2FudmFzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggJ2NhbnZhcycgKTsgcmV0dXJuICEhICggd2luZG93LldlYkdMUmVuZGVyaW5nQ29udGV4dCAmJiAoIGNhbnZhcy5nZXRDb250ZXh0KCAnd2ViZ2wnICkgfHwgY2FudmFzLmdldENvbnRleHQoICdleHBlcmltZW50YWwtd2ViZ2wnICkgKSApO1xyXG5cclxuXHRcdH0gY2F0Y2ggKCBlICkge1xyXG5cclxuXHRcdFx0cmV0dXJuIGZhbHNlO1xyXG5cclxuXHRcdH1cclxuXHJcblx0fSApKCksXHJcblx0d29ya2VyczogISEgd2luZG93LldvcmtlcixcclxuXHRmaWxlYXBpOiB3aW5kb3cuRmlsZSAmJiB3aW5kb3cuRmlsZVJlYWRlciAmJiB3aW5kb3cuRmlsZUxpc3QgJiYgd2luZG93LkJsb2IsXHJcblxyXG5cdGdldFdlYkdMRXJyb3JNZXNzYWdlOiBmdW5jdGlvbiAoKSB7XHJcblxyXG5cdFx0dmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCAnZGl2JyApO1xyXG5cdFx0ZWxlbWVudC5pZCA9ICd3ZWJnbC1lcnJvci1tZXNzYWdlJztcclxuXHRcdGVsZW1lbnQuc3R5bGUuZm9udEZhbWlseSA9ICdtb25vc3BhY2UnO1xyXG5cdFx0ZWxlbWVudC5zdHlsZS5mb250U2l6ZSA9ICcxM3B4JztcclxuXHRcdGVsZW1lbnQuc3R5bGUuZm9udFdlaWdodCA9ICdub3JtYWwnO1xyXG5cdFx0ZWxlbWVudC5zdHlsZS50ZXh0QWxpZ24gPSAnY2VudGVyJztcclxuXHRcdGVsZW1lbnQuc3R5bGUuYmFja2dyb3VuZCA9ICcjZmZmJztcclxuXHRcdGVsZW1lbnQuc3R5bGUuY29sb3IgPSAnIzAwMCc7XHJcblx0XHRlbGVtZW50LnN0eWxlLnBhZGRpbmcgPSAnMS41ZW0nO1xyXG5cdFx0ZWxlbWVudC5zdHlsZS53aWR0aCA9ICc0MDBweCc7XHJcblx0XHRlbGVtZW50LnN0eWxlLm1hcmdpbiA9ICc1ZW0gYXV0byAwJztcclxuXHJcblx0XHRpZiAoICEgdGhpcy53ZWJnbCApIHtcclxuXHJcblx0XHRcdGVsZW1lbnQuaW5uZXJIVE1MID0gd2luZG93LldlYkdMUmVuZGVyaW5nQ29udGV4dCA/IFtcclxuXHRcdFx0XHQnWW91ciBncmFwaGljcyBjYXJkIGRvZXMgbm90IHNlZW0gdG8gc3VwcG9ydCA8YSBocmVmPVwiaHR0cDovL2tocm9ub3Mub3JnL3dlYmdsL3dpa2kvR2V0dGluZ19hX1dlYkdMX0ltcGxlbWVudGF0aW9uXCIgc3R5bGU9XCJjb2xvcjojMDAwXCI+V2ViR0w8L2E+LjxiciAvPicsXHJcblx0XHRcdFx0J0ZpbmQgb3V0IGhvdyB0byBnZXQgaXQgPGEgaHJlZj1cImh0dHA6Ly9nZXQud2ViZ2wub3JnL1wiIHN0eWxlPVwiY29sb3I6IzAwMFwiPmhlcmU8L2E+LidcclxuXHRcdFx0XS5qb2luKCAnXFxuJyApIDogW1xyXG5cdFx0XHRcdCdZb3VyIGJyb3dzZXIgZG9lcyBub3Qgc2VlbSB0byBzdXBwb3J0IDxhIGhyZWY9XCJodHRwOi8va2hyb25vcy5vcmcvd2ViZ2wvd2lraS9HZXR0aW5nX2FfV2ViR0xfSW1wbGVtZW50YXRpb25cIiBzdHlsZT1cImNvbG9yOiMwMDBcIj5XZWJHTDwvYT4uPGJyLz4nLFxyXG5cdFx0XHRcdCdGaW5kIG91dCBob3cgdG8gZ2V0IGl0IDxhIGhyZWY9XCJodHRwOi8vZ2V0LndlYmdsLm9yZy9cIiBzdHlsZT1cImNvbG9yOiMwMDBcIj5oZXJlPC9hPi4nXHJcblx0XHRcdF0uam9pbiggJ1xcbicgKTtcclxuXHJcblx0XHR9XHJcblxyXG5cdFx0cmV0dXJuIGVsZW1lbnQ7XHJcblxyXG5cdH0sXHJcblxyXG5cdGFkZEdldFdlYkdMTWVzc2FnZTogZnVuY3Rpb24gKCBwYXJhbWV0ZXJzICkge1xyXG5cclxuXHRcdHZhciBwYXJlbnQsIGlkLCBlbGVtZW50O1xyXG5cclxuXHRcdHBhcmFtZXRlcnMgPSBwYXJhbWV0ZXJzIHx8IHt9O1xyXG5cclxuXHRcdHBhcmVudCA9IHBhcmFtZXRlcnMucGFyZW50ICE9PSB1bmRlZmluZWQgPyBwYXJhbWV0ZXJzLnBhcmVudCA6IGRvY3VtZW50LmJvZHk7XHJcblx0XHRpZCA9IHBhcmFtZXRlcnMuaWQgIT09IHVuZGVmaW5lZCA/IHBhcmFtZXRlcnMuaWQgOiAnb2xkaWUnO1xyXG5cclxuXHRcdGVsZW1lbnQgPSBEZXRlY3Rvci5nZXRXZWJHTEVycm9yTWVzc2FnZSgpO1xyXG5cdFx0ZWxlbWVudC5pZCA9IGlkO1xyXG5cclxuXHRcdHBhcmVudC5hcHBlbmRDaGlsZCggZWxlbWVudCApO1xyXG5cclxuXHR9XHJcblxyXG59O1xyXG5cclxuLy8gYnJvd3NlcmlmeSBzdXBwb3J0XHJcbmlmICggdHlwZW9mIG1vZHVsZSA9PT0gJ29iamVjdCcgKSB7XHJcblxyXG5cdG1vZHVsZS5leHBvcnRzID0gRGV0ZWN0b3I7XHJcblxyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///14\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _mikuTween = __webpack_require__(0);\n\nvar _mikuTween2 = _interopRequireDefault(_mikuTween);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar BillBoard = function BillBoard(_ref) {\n  var map = _ref.map;\n\n  var pillar = new THREE.Mesh(\n  //new THREE.BoxGeometry(20,230,20)\n  new THREE.CylinderGeometry(9, 12, 230), new THREE.MeshPhongMaterial({\n    color: new THREE.Color().setRGB(.2, .2, .2)\n  }));\n  var board_materials = [].concat(_toConsumableArray(Array(4))).map(function () {\n    return new THREE.MeshPhongMaterial({\n      color: 0x2d2d2d,\n      specular: 0x05050\n    });\n  });\n\n  //console.log(map);\n  {\n\n    var cv_ = document.createElement('canvas');\n    cv_.width = 400, cv_.height = 300;\n\n    //debugger;\n\n    var c = cv_.getContext('2d');\n    //c.fillStyle = 'red';\n    //c.fillRect(0,0,cv_.width,cv_.height);\n    c.drawImage(map.image, 0, 0, cv_.width, cv_.height);\n\n    var map = new THREE.Texture(cv_);\n  }\n\n  board_materials.push(new THREE.MeshPhongMaterial({\n    map: map,\n    specular: 0xffffff\n  }), new THREE.MeshPhongMaterial({\n    map: map,\n    specular: 0xffffff\n  }));\n\n  //board_materials.push();\n  var board = new THREE.Mesh(new THREE.BoxGeometry(400, 300, 30)\n  //new THREE.SphereGeometry(100,100,100)\n  , board_materials);\n\n  board.material[board.material.length - 1].map.needsUpdate = true;\n  board.material[board.material.length - 2].map.needsUpdate = true;\n\n  pillar.add(board);\n\n  board.geometry.applyMatrix(new THREE.Matrix4().makeTranslation(0, pillar.geometry.parameters.height + board.geometry.parameters.height * .5, 0));\n\n  // board.geometry.applyMatrix(\n  // \tnew THREE.Matrix4()\n  // \t.makeTranslation(0,pillar.geometry.parameters.height*.5+50,0)\n\n  // )\n\n  pillar.geometry.applyMatrix(new THREE.Matrix4().makeTranslation(0, pillar.geometry.parameters.height * .5, 0));\n\n  pillar.visible = false;\n  //debugger;\n\n\n  pillar.castShadow = true;\n  pillar.receiveShadow = true;\n\n  board.castShadow = true;\n  board.receiveShadow = true;\n\n  return Object.assign(pillar, {\n    fallDown: function fallDown() {\n      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref2$delay = _ref2.delay,\n          delay = _ref2$delay === undefined ? 2000 : _ref2$delay;\n\n      var that = this;\n      //return;\n\n      new _mikuTween2.default.Tween({ y: 1000 }).to({ y: 0 }, 1555).easing(_mikuTween2.default.Easing.Cubic.In).delay(delay).onStart(function () {\n        pillar.visible = true;\n      }).onUpdate(function () {\n        pillar.position.y = this.y;\n        //console.log(pillar.position);\n      }).onComplete(function () {\n        that._handle_fall && that._handle_fall();\n      }).start();\n    },\n    onFallEnd: function onFallEnd(fn) {\n      this._handle_fall = fn;\n    },\n    comeOut: function comeOut() {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref3$delay = _ref3.delay,\n          delay = _ref3$delay === undefined ? 3000 : _ref3$delay;\n\n      new _mikuTween2.default.Tween({\n        y: (pillar.geometry.parameters.height + board.geometry.parameters.height) * -1\n      }).to({ y: 0 }, 2233).easing(_mikuTween2.default.Easing.Cubic.In).delay(delay).onStart(function () {\n        pillar.visible = true;\n      }).onUpdate(function () {\n        pillar.position.y = this.y;\n\n        // Particle.renderIn(\n        //   new THREE.Vector3(pillar.position.x,5,pillar.position.z) \n        //   ,{\n        //     count:10\n        //     ,co:new THREE.Color().setRGB(.8,.8,.8)\n        //     ,range_po(t){\n        //       return {\n        //         x:cos(t)*\n        //       }\n        //     }\n        //   }\n        // )\n        //console.log(pillar.position);\n      }).onComplete(function () {}).start();\n    }\n  });\n};\n\nexports.default = BillBoard;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///15\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _mikuTween = __webpack_require__(0);\n\nvar _mikuTween2 = _interopRequireDefault(_mikuTween);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Status = {\n  'stading': 'stading',\n  'flipping': 'flipping',\n  'holding': 'holding',\n  'died': 'died',\n  'outside': 'outside'\n};\n\nvar ChessMan = function ChessMan() {\n  var co = new THREE.Color().setRGB(.1, .1, .1);\n  var body = new THREE.Mesh(\n  //new THREE.BoxGeometry(3,10,3)\n  new THREE.CylinderGeometry(1.5, 2, 10, 32), new THREE.MeshPhongMaterial({\n    color: co,\n    transparent: true\n  }));\n  body.material.opacity = 1;\n  body.geometry.applyMatrix(new THREE.Matrix4().makeTranslation(0, body.geometry.parameters.height * .5, 0));\n\n  body.castShadow = true;\n  body.receiveShadow = true;\n\n  var head = new THREE.Mesh(\n  //new THREE.SphereGeometry(body.geometry.parameters.width*.7)\n  new THREE.SphereGeometry(2), new THREE.MeshPhongMaterial({\n    color: co,\n    transparent: true\n  }));\n  body.add(head);\n\n  head.geometry.applyMatrix(new THREE.Matrix4().makeTranslation(0, body.geometry.parameters.height * 1.333, 0));\n\n  head.castShadow = true;\n  head.receiveShadow = true;\n\n  {}\n  // let cv_ = document.createElement('canvas');\n  // cv_.width = cv_.height = 100;\n  // let c = cv_.getContext('2d');\n\n\n  // var msg = new THREE.Mesh(\n  //   new THREE.PlaneGeometry(2,2)\n  //   ,new THREE.MeshBasicMaterial({\n  //     map:new THREE.Texture(cv_)\n  //     ,transparent:true\n  //   })\n  // );\n  // msg.material.map.needsUpdate = true;\n  // head.add(msg);\n\n  // msg.geometry.applyMatrix(\n  //   new THREE.Matrix4()\n  //   .makeTranslation(0,13.5,2)\n\n  // );\n\n\n  //\tdebugger;\n\n  return Object.assign(body, {\n    holding: function holding() {\n\n      this.status = Status.holding;\n\n      var increasing = .007;\n      this.hold_coefficient += increasing;\n      this.hold_coefficient > 1 && (this.hold_coefficient = 1);\n\n      this.scale.y = (1 - this.hold_coefficient) * .7 + .3;\n\n      //console.log(this.scale.y);\n    },\n    start: function start() {\n      this.rotation.z = 0;\n      this.status = Status.stading;\n\n      //console.log('stading!!!!');\n    },\n    canHolding: function canHolding() {\n      return this.status === Status.stading || this.status === Status.holding;\n    },\n    canFlipping: function canFlipping() {\n      return this.status === Status.holding;\n    },\n    _controlVertex: function _controlVertex() {\n      var ty = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      body.geometry.applyMatrix(new THREE.Matrix4().makeTranslation(0, -ty, 0));\n      head.geometry.applyMatrix(new THREE.Matrix4().makeTranslation(0, -ty, 0));\n      this.position.y += ty;\n    },\n    onFilpEnd: function onFilpEnd(fn) {\n      this._handle_flip_end = fn;\n    },\n    fewFlip: function fewFlip(_ref) {\n      var onUpdate = _ref.onUpdate,\n          po_increments = _ref.po_increments;\n\n      var that = this;\n      return new Promise(function (r) {\n        var f = function f(len) {\n          //hold_coefficient*1000\n          that.hold_coefficient = .5;\n\n          that.flipping(function (po) {\n            onUpdate && onUpdate(po);\n          }, 123, 200, 600, false).then(function (res) {\n\n            if (len === 1) return r();\n\n            f(--len);\n          });\n        };\n\n        f(po_increments.length);\n      });\n    },\n    isOutside: function isOutside() {\n      return this.status === Status.outside;\n    },\n    isStading: function isStading() {\n      return this.status === Status.stading;\n    },\n    isDied: function isDied() {\n      return this.status === Status.died;\n    },\n    fallDown: function fallDown() {\n      var _this = this;\n\n      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref2$rz = _ref2.rz,\n          rz = _ref2$rz === undefined ? 30 : _ref2$rz,\n          _ref2$delay = _ref2.delay,\n          delay = _ref2$delay === undefined ? 333 : _ref2$delay;\n\n      var that = this;\n      this.status = Status.died;\n\n      return new Promise(function (r) {\n        new _mikuTween2.default.Tween({ y: _this.position.y, rz: 0 }).delay(delay).easing(_mikuTween2.default.Easing.Cubic.In).to({ y: 0, rz: rz }, 1234).onUpdate(function () {\n          that.position.y = this.y;\n          that.rotation.z = this.rz;\n        }).onComplete(function () {\n          r();\n        }).start();\n\n        //r();\n      });\n    },\n    stopToTop: function stopToTop() {\n      this.tw_top1.stop();\n      this.tw_top2.stop();\n    },\n    flipToTop: function flipToTop() {\n      var _this2 = this;\n\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          height = _ref3.height,\n          onUpdate = _ref3.onUpdate,\n          onPer = _ref3.onPer,\n          _ref3$delay = _ref3.delay,\n          delay = _ref3$delay === undefined ? 0 : _ref3$delay,\n          onFlipStart = _ref3.onFlipStart,\n          _ref3$flip_dur = _ref3.flip_dur,\n          flip_dur = _ref3$flip_dur === undefined ? 3333 : _ref3$flip_dur;\n\n      var that = this;\n      return new Promise(function (r) {\n\n        _this2.status = 'fliptotop';\n\n        var tw = new _mikuTween2.default.Tween({ scale: 1 }).to({ scale: .6 }, 566).delay(delay).onUpdate(function () {\n          that.scale.y = this.scale;\n        });\n\n        var tw2 = new _mikuTween2.default.Tween({ y: _this2.position.y, t: 0 }).to({ y: height, t: 1 }, flip_dur).easing(_mikuTween2.default.Easing.Cubic.Out).onStart(function () {\n          this.once = false;\n          that.scale.y = 1;\n          onFlipStart && onFlipStart();\n        }).onUpdate(function () {\n          that.position.y = this.y;\n          onUpdate && onUpdate(that.position);\n          if (this.t >= .2 && !this.once) {\n            this.once = true;\n            onPer && onPer(that.position);\n          }\n        }).onComplete(function () {\n          //console.log('flip to top ..!!!')\n\n          r();\n        });\n\n        _this2.tw_top1 = tw;\n        _this2.tw_top2 = tw2;\n\n        tw.chain(tw2);\n\n        tw.start();\n      });\n    },\n    flipping: function flipping(fn) {\n      var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var dy = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 26;\n\n      var _this3 = this;\n\n      var dur = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 433;\n      var statusx = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n\n      this.scale.y = 1;\n\n      var that = this;\n      var ty = body.geometry.parameters.height * .5;\n\n      var target_o = {\n        // x:this.hold_coefficient*123\n        x: this.hold_coefficient * 150\n        //z:this.hold_coefficient*50\n        , y: this.position.y\n\n        //console.log('flipping!!');\n\n      };if (statusx) this.status = Status.flipping;\n\n      return new Promise(function (r) {\n\n        new _mikuTween2.default.Tween({ t: 0 }).to({ t: 1 }, dur).delay(delay).onStart(function () {\n          that._controlVertex(ty);\n\n          this.bef = {\n            x: that.position.x,\n            y: that.position.y\n          };\n        }).onUpdate(function () {\n          body.rotation.z = this.t * -PI * 2;\n\n          var x_ = this.bef.x + this.t * target_o.x;\n          var y_ = this.bef.y + sin(this.t * PI) * dy;\n          that.position.x = x_;\n          that.position.y = y_;\n\n          //console.log(that.position);\n          fn && fn(that.position);\n        }).onComplete(function () {\n          that._controlVertex(-ty);\n\n          if (statusx) that.status = Status.stading;\n\n          that._handle_flip_end && that._handle_flip_end(that);\n\n          r();\n        }).start();\n\n        _this3.hold_coefficient = 0;\n      });\n    },\n    hold_coefficient: 0,\n    status: Status.outside\n  });\n};\n\nexports.default = ChessMan;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///16\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar InfinityElement = Class.create({\n    init: function init(props) {\n        this.els = [];\n        this.groups = [];\n        this.group_id = 0;\n\n        this.in_group_num = props.in_group_num || 10;\n\n        this.once = false;\n        this.far = props.far || 3000;\n        this.allow_far = this.far;\n\n        this.handle_each_child = props.handle_each_child;\n    },\n    reset: function reset(scene) {\n        this.once = false;\n\n        this.group_id = 0;\n\n        if (scene) {\n            this.els.forEach(function (o) {\n                return scene.remove(o);\n            });\n        }\n\n        this.els = [];\n\n        this.groups = [];\n\n        this.allow_far = this.far;\n    },\n    elForThatArea: function elForThatArea(po1, far, scene) {\n        var _this = this;\n\n        this.group_id++;\n\n        var objs = [].concat(_toConsumableArray(Array(this.in_group_num))).map(function (v, i) {\n\n            var o = _this.handle_each_child.call(_this, po1, far, scene);\n            scene.add(o);\n            _this.els.push(o);\n\n            o.group_id = _this.group_id;\n\n            return o;\n        });\n        //debugger;\n\n        return objs;\n    },\n    render: function render(current_po, scene) {\n        var groups = this.groups,\n            far = this.far,\n            in_group_num = this.in_group_num;\n\n\n        if (!this.once) {\n            //console.log('oncex');\n            //console.log(infinityCreateTree.once);\n            this.once = true;\n\n            this.groups = [this.elForThatArea(0, -far, scene), this.elForThatArea(0, far, scene), this.elForThatArea(far, far, scene)];\n\n            //console.log(groups);\n\n            // -far   0  \n        }\n\n        var current_po = current_po.x;\n\n        //return;\n        //5000 10000\n        if (current_po != 0 && current_po > this.allow_far) {\n            this.allow_far += far;\n            //debugger;\n\n            //console.log(this.groups);\n\n\n            //debugger;\n            var group = this.groups.shift();\n\n            group.forEach(function (o) {\n                scene.remove(o);\n                //console.log(this.els);\n                //this.els.remove(o);\n            });\n\n            this.groups.push(this.elForThatArea(current_po + far, far, scene));\n            //alert('creat and destory groups!!');\n            console.log('%c creat and destory groups!!', 'font-size:30px;', groups);\n        }\n    }\n});\n\nexports.default = InfinityElement;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9UaWFvWWlUaWFvLy4vc3JjL2luZmluaXR5X2VsZW1lbnQuanM/MDdmZSJdLCJuYW1lcyI6WyJJbmZpbml0eUVsZW1lbnQiLCJDbGFzcyIsImNyZWF0ZSIsImluaXQiLCJwcm9wcyIsImVscyIsImdyb3VwcyIsImdyb3VwX2lkIiwiaW5fZ3JvdXBfbnVtIiwib25jZSIsImZhciIsImFsbG93X2ZhciIsImhhbmRsZV9lYWNoX2NoaWxkIiwicmVzZXQiLCJzY2VuZSIsImZvckVhY2giLCJvIiwicmVtb3ZlIiwiZWxGb3JUaGF0QXJlYSIsInBvMSIsIm9ianMiLCJBcnJheSIsIm1hcCIsInYiLCJpIiwiY2FsbCIsImFkZCIsInB1c2giLCJyZW5kZXIiLCJjdXJyZW50X3BvIiwieCIsImdyb3VwIiwic2hpZnQiLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBLElBQUlBLGtCQUFrQkMsTUFBTUMsTUFBTixDQUFhO0FBQ2pDQyxRQURpQyxnQkFDNUJDLEtBRDRCLEVBQ3RCO0FBQ1QsYUFBS0MsR0FBTCxHQUFXLEVBQVg7QUFDQSxhQUFLQyxNQUFMLEdBQWMsRUFBZDtBQUNBLGFBQUtDLFFBQUwsR0FBZ0IsQ0FBaEI7O0FBRUEsYUFBS0MsWUFBTCxHQUFvQkosTUFBTUksWUFBTixJQUFzQixFQUExQzs7QUFFQSxhQUFLQyxJQUFMLEdBQVcsS0FBWDtBQUNBLGFBQUtDLEdBQUwsR0FBWU4sTUFBTU0sR0FBTixJQUFhLElBQXpCO0FBQ0EsYUFBS0MsU0FBTCxHQUFpQixLQUFLRCxHQUF0Qjs7QUFFQSxhQUFLRSxpQkFBTCxHQUEwQlIsTUFBTVEsaUJBQWhDO0FBRUQsS0FkZ0M7QUFlaENDLFNBZmdDLGlCQWUxQkMsS0FmMEIsRUFlcEI7QUFDWCxhQUFLTCxJQUFMLEdBQVksS0FBWjs7QUFFQSxhQUFLRixRQUFMLEdBQWdCLENBQWhCOztBQUVBLFlBQUdPLEtBQUgsRUFBUztBQUNQLGlCQUFLVCxHQUFMLENBQVNVLE9BQVQsQ0FBaUIsVUFBQ0MsQ0FBRDtBQUFBLHVCQUFLRixNQUFNRyxNQUFOLENBQWFELENBQWIsQ0FBTDtBQUFBLGFBQWpCO0FBQ0Q7O0FBR0QsYUFBS1gsR0FBTCxHQUFXLEVBQVg7O0FBRUEsYUFBS0MsTUFBTCxHQUFjLEVBQWQ7O0FBRUEsYUFBS0ssU0FBTCxHQUFpQixLQUFLRCxHQUF0QjtBQUdELEtBaENnQztBQWlDaENRLGlCQWpDZ0MseUJBaUNsQkMsR0FqQ2tCLEVBaUNkVCxHQWpDYyxFQWlDVkksS0FqQ1UsRUFpQ0o7QUFBQTs7QUFFM0IsYUFBS1AsUUFBTDs7QUFFQSxZQUFJYSxPQUFPLDZCQUFJQyxNQUFNLEtBQUtiLFlBQVgsQ0FBSixHQUE4QmMsR0FBOUIsQ0FBa0MsVUFBQ0MsQ0FBRCxFQUFHQyxDQUFILEVBQU87O0FBRWxELGdCQUFJUixJQUFJLE1BQUtKLGlCQUFMLENBQXVCYSxJQUF2QixDQUE0QixLQUE1QixFQUFpQ04sR0FBakMsRUFBcUNULEdBQXJDLEVBQXlDSSxLQUF6QyxDQUFSO0FBQ0FBLGtCQUFNWSxHQUFOLENBQVVWLENBQVY7QUFDQSxrQkFBS1gsR0FBTCxDQUFTc0IsSUFBVCxDQUFjWCxDQUFkOztBQUVBQSxjQUFFVCxRQUFGLEdBQWEsTUFBS0EsUUFBbEI7O0FBRUEsbUJBQU9TLENBQVA7QUFFRCxTQVZVLENBQVg7QUFXQTs7QUFFQSxlQUFPSSxJQUFQO0FBQ0QsS0FuRGdDO0FBb0RoQ1EsVUFwRGdDLGtCQW9EekJDLFVBcER5QixFQW9EZGYsS0FwRGMsRUFvRFI7QUFBQSxZQUNsQlIsTUFEa0IsR0FDUyxJQURULENBQ2xCQSxNQURrQjtBQUFBLFlBQ1hJLEdBRFcsR0FDUyxJQURULENBQ1hBLEdBRFc7QUFBQSxZQUNQRixZQURPLEdBQ1MsSUFEVCxDQUNQQSxZQURPOzs7QUFHdkIsWUFBRyxDQUFDLEtBQUtDLElBQVQsRUFBYztBQUNaO0FBQ0E7QUFDQSxpQkFBS0EsSUFBTCxHQUFZLElBQVo7O0FBRUEsaUJBQUtILE1BQUwsR0FBYyxDQUNaLEtBQUtZLGFBQUwsQ0FBbUIsQ0FBbkIsRUFBcUIsQ0FBQ1IsR0FBdEIsRUFBMEJJLEtBQTFCLENBRFksRUFFWCxLQUFLSSxhQUFMLENBQW1CLENBQW5CLEVBQXFCUixHQUFyQixFQUF5QkksS0FBekIsQ0FGVyxFQUdYLEtBQUtJLGFBQUwsQ0FBbUJSLEdBQW5CLEVBQXVCQSxHQUF2QixFQUEyQkksS0FBM0IsQ0FIVyxDQUFkOztBQU1BOztBQUVBO0FBRUQ7O0FBRUQsWUFBSWUsYUFBYUEsV0FBV0MsQ0FBNUI7O0FBRUE7QUFDQTtBQUNBLFlBQUdELGNBQVksQ0FBWixJQUFnQkEsYUFBWSxLQUFLbEIsU0FBcEMsRUFBK0M7QUFDN0MsaUJBQUtBLFNBQUwsSUFBZ0JELEdBQWhCO0FBQ0E7O0FBRUE7OztBQUdBO0FBQ0EsZ0JBQUlxQixRQUFRLEtBQUt6QixNQUFMLENBQVkwQixLQUFaLEVBQVo7O0FBRUFELGtCQUFNaEIsT0FBTixDQUFjLFVBQUNDLENBQUQsRUFBSztBQUNqQkYsc0JBQU1HLE1BQU4sQ0FBYUQsQ0FBYjtBQUNBO0FBQ0E7QUFDRCxhQUpEOztBQU1BLGlCQUFLVixNQUFMLENBQVlxQixJQUFaLENBQWtCLEtBQUtULGFBQUwsQ0FBbUJXLGFBQVduQixHQUE5QixFQUFrQ0EsR0FBbEMsRUFBc0NJLEtBQXRDLENBQWxCO0FBQ0U7QUFDRm1CLG9CQUFRQyxHQUFSLENBQVksK0JBQVosRUFBNEMsaUJBQTVDLEVBQThENUIsTUFBOUQ7QUFFRDtBQUNGO0FBakdnQyxDQUFiLENBQXRCOztrQkFvR2VOLGUiLCJmaWxlIjoiMTcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgSW5maW5pdHlFbGVtZW50ID0gQ2xhc3MuY3JlYXRlKHtcclxuICBpbml0KHByb3BzKXtcclxuICAgIHRoaXMuZWxzID0gW107XHJcbiAgICB0aGlzLmdyb3VwcyA9IFtdO1xyXG4gICAgdGhpcy5ncm91cF9pZCA9IDA7XHJcblxyXG4gICAgdGhpcy5pbl9ncm91cF9udW0gPSBwcm9wcy5pbl9ncm91cF9udW0gfHwgMTA7XHJcblxyXG4gICAgdGhpcy5vbmNlPSBmYWxzZTtcclxuICAgIHRoaXMuZmFyID0gIHByb3BzLmZhciB8fCAzMDAwO1xyXG4gICAgdGhpcy5hbGxvd19mYXIgPSB0aGlzLmZhcjtcclxuXHJcbiAgICB0aGlzLmhhbmRsZV9lYWNoX2NoaWxkICA9IHByb3BzLmhhbmRsZV9lYWNoX2NoaWxkO1xyXG5cclxuICB9XHJcbiAgLHJlc2V0KHNjZW5lKXtcclxuICAgIHRoaXMub25jZSA9IGZhbHNlO1xyXG5cclxuICAgIHRoaXMuZ3JvdXBfaWQgPSAwO1xyXG5cclxuICAgIGlmKHNjZW5lKXtcclxuICAgICAgdGhpcy5lbHMuZm9yRWFjaCgobyk9PnNjZW5lLnJlbW92ZShvKSk7XHJcbiAgICB9XHJcblxyXG4gXHJcbiAgICB0aGlzLmVscyA9IFtdO1xyXG5cclxuICAgIHRoaXMuZ3JvdXBzID0gW107XHJcblxyXG4gICAgdGhpcy5hbGxvd19mYXIgPSB0aGlzLmZhcjtcclxuXHJcblxyXG4gIH1cclxuICAsZWxGb3JUaGF0QXJlYShwbzEsZmFyLHNjZW5lKXtcclxuXHJcbiAgICB0aGlzLmdyb3VwX2lkKys7XHJcblxyXG4gICAgdmFyIG9ianMgPSBbLi4uQXJyYXkodGhpcy5pbl9ncm91cF9udW0pXS5tYXAoKHYsaSk9PntcclxuXHJcbiAgICAgIHZhciBvID0gdGhpcy5oYW5kbGVfZWFjaF9jaGlsZC5jYWxsKHRoaXMscG8xLGZhcixzY2VuZSk7XHJcbiAgICAgIHNjZW5lLmFkZChvKTtcclxuICAgICAgdGhpcy5lbHMucHVzaChvKTtcclxuICAgICAgXHJcbiAgICAgIG8uZ3JvdXBfaWQgPSB0aGlzLmdyb3VwX2lkO1xyXG5cclxuICAgICAgcmV0dXJuIG87XHJcblxyXG4gICAgfSk7XHJcbiAgICAvL2RlYnVnZ2VyO1xyXG5cclxuICAgIHJldHVybiBvYmpzO1xyXG4gIH1cclxuICAscmVuZGVyKGN1cnJlbnRfcG8sc2NlbmUpe1xyXG4gICAgdmFyIHtncm91cHMsZmFyLGluX2dyb3VwX251bX0gPSB0aGlzO1xyXG5cclxuICAgIGlmKCF0aGlzLm9uY2Upe1xyXG4gICAgICAvL2NvbnNvbGUubG9nKCdvbmNleCcpO1xyXG4gICAgICAvL2NvbnNvbGUubG9nKGluZmluaXR5Q3JlYXRlVHJlZS5vbmNlKTtcclxuICAgICAgdGhpcy5vbmNlID0gdHJ1ZTtcclxuICAgICAgXHJcbiAgICAgIHRoaXMuZ3JvdXBzID0gW1xyXG4gICAgICAgIHRoaXMuZWxGb3JUaGF0QXJlYSgwLC1mYXIsc2NlbmUpXHJcbiAgICAgICAgLHRoaXMuZWxGb3JUaGF0QXJlYSgwLGZhcixzY2VuZSlcclxuICAgICAgICAsdGhpcy5lbEZvclRoYXRBcmVhKGZhcixmYXIsc2NlbmUpXHJcbiAgICAgIF07XHJcbiAgICAgIFxyXG4gICAgICAvL2NvbnNvbGUubG9nKGdyb3Vwcyk7XHJcblxyXG4gICAgICAvLyAtZmFyICAgMCAgXHJcblxyXG4gICAgfVxyXG5cclxuICAgIHZhciBjdXJyZW50X3BvID0gY3VycmVudF9wby54O1xyXG5cclxuICAgIC8vcmV0dXJuO1xyXG4gICAgLy81MDAwIDEwMDAwXHJcbiAgICBpZihjdXJyZW50X3BvIT0wJiYgY3VycmVudF9wbz4gdGhpcy5hbGxvd19mYXIgKXtcclxuICAgICAgdGhpcy5hbGxvd19mYXIrPWZhcjtcclxuICAgICAgLy9kZWJ1Z2dlcjtcclxuXHJcbiAgICAgIC8vY29uc29sZS5sb2codGhpcy5ncm91cHMpO1xyXG5cclxuXHJcbiAgICAgIC8vZGVidWdnZXI7XHJcbiAgICAgIGxldCBncm91cCA9IHRoaXMuZ3JvdXBzLnNoaWZ0KCk7XHJcbiAgICAgIFxyXG4gICAgICBncm91cC5mb3JFYWNoKChvKT0+e1xyXG4gICAgICAgIHNjZW5lLnJlbW92ZShvKTtcclxuICAgICAgICAvL2NvbnNvbGUubG9nKHRoaXMuZWxzKTtcclxuICAgICAgICAvL3RoaXMuZWxzLnJlbW92ZShvKTtcclxuICAgICAgfSk7XHJcbiAgICAgIFxyXG4gICAgICB0aGlzLmdyb3Vwcy5wdXNoKCB0aGlzLmVsRm9yVGhhdEFyZWEoY3VycmVudF9wbytmYXIsZmFyLHNjZW5lKSApO1xyXG4gICAgICAgIC8vYWxlcnQoJ2NyZWF0IGFuZCBkZXN0b3J5IGdyb3VwcyEhJyk7XHJcbiAgICAgIGNvbnNvbGUubG9nKCclYyBjcmVhdCBhbmQgZGVzdG9yeSBncm91cHMhIScsJ2ZvbnQtc2l6ZTozMHB4OycsZ3JvdXBzKTtcclxuXHJcbiAgICB9XHJcbiAgfVxyXG59KTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IEluZmluaXR5RWxlbWVudDtcclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///17\n")},function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _mikuTween = __webpack_require__(0);\n\nvar _mikuTween2 = _interopRequireDefault(_mikuTween);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Tree = function Tree() {\n  var trunk = new THREE.Mesh(new THREE.BoxGeometry(3, 200, 3), new THREE.MeshLambertMaterial({ color: 0xe3cf73 }));\n  var leaf = new THREE.Mesh(new THREE.OctahedronGeometry(20, 1)\n  //new THREE.BoxGeometry(30,30,30)\n  , new THREE.MeshLambertMaterial({ color: 0x005910 }));\n  trunk.add(leaf);\n\n  leaf.geometry.applyMatrix(new THREE.Matrix4().makeTranslation(0, trunk.geometry.parameters.height * .5, 0));\n\n  trunk.castShadow = true;\n  leaf.castShadow = true;\n\n  return Object.assign(trunk, {\n    flip: function flip(_ref) {\n      var _ref$delay = _ref.delay,\n          delay = _ref$delay === undefined ? 200 : _ref$delay;\n\n      var that = this;\n      new _mikuTween2.default.Tween({ t: 0 }).to({ t: 1 }, 200 + random() * 200).delay(delay).onStart(function () {\n        this.by = that.position.y;\n        this.dy = 8 + random() * 8;\n      }).onUpdate(function () {\n        that.position.y = this.by + sin(this.t * PI) * this.dy;\n\n        //console.log(that.position.y);\n      }).start();\n    }\n  });\n};\n\nexports.default = Tree;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9UaWFvWWlUaWFvLy4vc3JjL3RyZWUuanM/OTc0ZSJdLCJuYW1lcyI6WyJUcmVlIiwidHJ1bmsiLCJUSFJFRSIsIk1lc2giLCJCb3hHZW9tZXRyeSIsIk1lc2hMYW1iZXJ0TWF0ZXJpYWwiLCJjb2xvciIsImxlYWYiLCJPY3RhaGVkcm9uR2VvbWV0cnkiLCJhZGQiLCJnZW9tZXRyeSIsImFwcGx5TWF0cml4IiwiTWF0cml4NCIsIm1ha2VUcmFuc2xhdGlvbiIsInBhcmFtZXRlcnMiLCJoZWlnaHQiLCJjYXN0U2hhZG93IiwiT2JqZWN0IiwiYXNzaWduIiwiZmxpcCIsImRlbGF5IiwidGhhdCIsIlR3ZWVuIiwidCIsInRvIiwicmFuZG9tIiwib25TdGFydCIsImJ5IiwicG9zaXRpb24iLCJ5IiwiZHkiLCJvblVwZGF0ZSIsInNpbiIsIlBJIiwic3RhcnQiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7Ozs7QUFFQSxJQUFJQSxPQUFPLFNBQVBBLElBQU8sR0FBSTtBQUNiLE1BQUlDLFFBQVEsSUFBSUMsTUFBTUMsSUFBVixDQUNWLElBQUlELE1BQU1FLFdBQVYsQ0FBc0IsQ0FBdEIsRUFBd0IsR0FBeEIsRUFBNEIsQ0FBNUIsQ0FEVSxFQUVULElBQUlGLE1BQU1HLG1CQUFWLENBQThCLEVBQUNDLE9BQU0sUUFBUCxFQUE5QixDQUZTLENBQVo7QUFJQSxNQUFJQyxPQUFPLElBQUlMLE1BQU1DLElBQVYsQ0FDVCxJQUFJRCxNQUFNTSxrQkFBVixDQUE2QixFQUE3QixFQUFnQyxDQUFoQztBQUNBO0FBRlMsSUFHUixJQUFJTixNQUFNRyxtQkFBVixDQUE4QixFQUFDQyxPQUFNLFFBQVAsRUFBOUIsQ0FIUSxDQUFYO0FBS0FMLFFBQU1RLEdBQU4sQ0FBVUYsSUFBVjs7QUFFQUEsT0FBS0csUUFBTCxDQUFjQyxXQUFkLENBQ0UsSUFBSVQsTUFBTVUsT0FBVixHQUFvQkMsZUFBcEIsQ0FBb0MsQ0FBcEMsRUFBc0NaLE1BQU1TLFFBQU4sQ0FBZUksVUFBZixDQUEwQkMsTUFBMUIsR0FBaUMsRUFBdkUsRUFBMEUsQ0FBMUUsQ0FERjs7QUFJQWQsUUFBTWUsVUFBTixHQUFtQixJQUFuQjtBQUNBVCxPQUFLUyxVQUFMLEdBQWtCLElBQWxCOztBQUVBLFNBQU9DLE9BQU9DLE1BQVAsQ0FBY2pCLEtBQWQsRUFBb0I7QUFDekJrQixRQUR5QixzQkFDUjtBQUFBLDRCQUFYQyxLQUFXO0FBQUEsVUFBWEEsS0FBVyw4QkFBTCxHQUFLOztBQUNmLFVBQUlDLE9BQU8sSUFBWDtBQUNBLFVBQUksb0JBQU1DLEtBQVYsQ0FBZ0IsRUFBQ0MsR0FBRSxDQUFILEVBQWhCLEVBQ0NDLEVBREQsQ0FDSSxFQUFDRCxHQUFFLENBQUgsRUFESixFQUNVLE1BQUlFLFdBQVMsR0FEdkIsRUFFQ0wsS0FGRCxDQUVPQSxLQUZQLEVBR0NNLE9BSEQsQ0FHUyxZQUFVO0FBQ2pCLGFBQUtDLEVBQUwsR0FBVU4sS0FBS08sUUFBTCxDQUFjQyxDQUF4QjtBQUNBLGFBQUtDLEVBQUwsR0FBVSxJQUFFTCxXQUFTLENBQXJCO0FBQ0QsT0FORCxFQU9DTSxRQVBELENBT1UsWUFBVTtBQUNsQlYsYUFBS08sUUFBTCxDQUFjQyxDQUFkLEdBQWtCLEtBQUtGLEVBQUwsR0FBUUssSUFBSSxLQUFLVCxDQUFMLEdBQU9VLEVBQVgsSUFBZSxLQUFLSCxFQUE5Qzs7QUFFQTtBQUNELE9BWEQsRUFZQ0ksS0FaRDtBQWFEO0FBaEJ3QixHQUFwQixDQUFQO0FBa0JELENBckNEOztrQkF1Q2VsQyxJIiwiZmlsZSI6IjE4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFRXRUVOIGZyb20gJ21pa3UtdHdlZW4nO1xyXG5cclxudmFyIFRyZWUgPSAoKT0+e1xyXG4gIHZhciB0cnVuayA9IG5ldyBUSFJFRS5NZXNoKFxyXG4gICAgbmV3IFRIUkVFLkJveEdlb21ldHJ5KDMsMjAwLDMpXHJcbiAgICAsbmV3IFRIUkVFLk1lc2hMYW1iZXJ0TWF0ZXJpYWwoe2NvbG9yOjB4ZTNjZjczfSlcclxuICApO1xyXG4gIHZhciBsZWFmID0gbmV3IFRIUkVFLk1lc2goXHJcbiAgICBuZXcgVEhSRUUuT2N0YWhlZHJvbkdlb21ldHJ5KDIwLDEpXHJcbiAgICAvL25ldyBUSFJFRS5Cb3hHZW9tZXRyeSgzMCwzMCwzMClcclxuICAgICxuZXcgVEhSRUUuTWVzaExhbWJlcnRNYXRlcmlhbCh7Y29sb3I6MHgwMDU5MTB9KVxyXG4gICk7XHJcbiAgdHJ1bmsuYWRkKGxlYWYpO1xyXG5cclxuICBsZWFmLmdlb21ldHJ5LmFwcGx5TWF0cml4KFxyXG4gICAgbmV3IFRIUkVFLk1hdHJpeDQoKS5tYWtlVHJhbnNsYXRpb24oMCx0cnVuay5nZW9tZXRyeS5wYXJhbWV0ZXJzLmhlaWdodCouNSwwKVxyXG4gICkgXHJcblxyXG4gIHRydW5rLmNhc3RTaGFkb3cgPSB0cnVlO1xyXG4gIGxlYWYuY2FzdFNoYWRvdyA9IHRydWU7XHJcblxyXG4gIHJldHVybiBPYmplY3QuYXNzaWduKHRydW5rLHtcclxuICAgIGZsaXAoe2RlbGF5PTIwMH0pe1xyXG4gICAgICB2YXIgdGhhdCA9IHRoaXM7XHJcbiAgICAgIG5ldyBUV0VFTi5Ud2Vlbih7dDowfSlcclxuICAgICAgLnRvKHt0OjF9LDIwMCtyYW5kb20oKSoyMDApXHJcbiAgICAgIC5kZWxheShkZWxheSlcclxuICAgICAgLm9uU3RhcnQoZnVuY3Rpb24oKXtcclxuICAgICAgICB0aGlzLmJ5ID0gdGhhdC5wb3NpdGlvbi55O1xyXG4gICAgICAgIHRoaXMuZHkgPSA4K3JhbmRvbSgpKjg7XHJcbiAgICAgIH0pXHJcbiAgICAgIC5vblVwZGF0ZShmdW5jdGlvbigpe1xyXG4gICAgICAgIHRoYXQucG9zaXRpb24ueSA9IHRoaXMuYnkrc2luKHRoaXMudCpQSSkqdGhpcy5keTtcclxuXHJcbiAgICAgICAgLy9jb25zb2xlLmxvZyh0aGF0LnBvc2l0aW9uLnkpO1xyXG4gICAgICB9KVxyXG4gICAgICAuc3RhcnQoKTtcclxuICAgIH1cclxuICB9KTtcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgVHJlZTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///18\n')},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function () {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$goods = _ref.goods,\n      goods = _ref$goods === undefined ? null : _ref$goods,\n      _ref$height = _ref.height,\n      height = _ref$height === undefined ? 600 : _ref$height,\n      _ref$billboard = _ref.billboard,\n      billboard = _ref$billboard === undefined ? false : _ref$billboard,\n      billboard_map = _ref.billboard_map;\n\n  var color = new THREE.Color().setHSL(Math.random(), 1, .9);\n  var material = new THREE.MeshPhongMaterial({\n    color: color,\n    transparent: true, specular: 0xffffff, flatShading: false\n\n    //,map:new THREE.TextureLoader().load(require('./common/img/board1.jpg'))\n  });\n\n  // var materials = [\n  //   material.clone(),material.clone()\n  //   // ,new THREE.MeshPhongMaterial({\n  //   //   color,transparent:true, specular: 0xffffff,flatShading: false\n  //   //   ,map:new THREE.TextureLoader().load(require('./common/img/boardx2.jpg'))\n  //   // })\n  //   ,material.clone()\n  //   ,material.clone(),material.clone(),material.clone()\n  // ]\n\n\n  var mesh;\n\n  if (random() > .2) {\n    mesh = new THREE.Mesh(\n    //new THREE.BoxGeometry(30,height,30)\n    new THREE.CylinderGeometry(15, 15, height, 32)\n    //,materials\n    , material);\n    mesh.material.opacity = 0;\n    mesh.position.y = mesh.geometry.parameters.height * .5;\n    mesh.castShadow = true;\n    mesh.receiveShadow = true;\n\n    var parameters = mesh.geometry.parameters;\n\n\n    var billborad_ = new THREE.Mesh(new THREE.CylinderGeometry(15, 15, 20, 32, 32, true, 0, PI * .6), new THREE.MeshPhongMaterial({\n      //map:new THREE.TextureLoader().load(require('./common/img/boardx2.jpg'))\n      specular: 0xffffff, flatShading: false,\n      map: billboard_map\n    }));\n\n    billborad_.position.set(0, height * .5 - billborad_.geometry.parameters.height * (.6 + random() * 1), .1);\n    billborad_.rotation.y = -.5 - random() * .433;\n    mesh.add(billborad_);\n  } else {\n\n    mesh = new THREE.Mesh(new THREE.BoxGeometry(30, height, 30)\n    //,materials\n    , material);\n    mesh.material.opacity = 0;\n    mesh.position.y = mesh.geometry.parameters.height * .5;\n    mesh.castShadow = true;\n    mesh.receiveShadow = true;\n  }\n\n  /////////////\n  mesh.castShadow = false;\n\n  if (goods) {\n\n    //190/207\n    // var s = 190/207;\n    // var goods_ = new THREE.Mesh(\n    //   //new THREE.BoxGeometry(10,10,10)\n    //   // ,new THREE.MeshPhongMaterial({\n    //   //   color: new THREE.Color().setHSL(Math.random(),1,.9)\n    //   //   ,transparent:true, specular: 0xffffff,flatShading: false\n    //   // })\n    //   new THREE.PlaneGeometry(15,15/s,10)\n    //   ,new THREE.MeshBasicMaterial({\n    //     map:new THREE.TextureLoader().load(require('./common/img/chest2.png'))\n    //     ,transparent:true\n    //     ,side :THREE.DoubleSide\n    //   })\n    // );\n\n    // //mesh.add(goods_);\n\n    // goods_.geometry.applyMatrix(\n    //   new THREE.Matrix4().makeTranslation(0,height*.5+goods_.geometry.parameters.height*.5,0)\n    // );\n    // goods_.position.set(\n    //   0,height*.5+goods_.geometry.parameters.height*.5,0\n    // );\n\n  }\n\n  new _mikuTween2.default.Tween({ opacity: 0 }).to({ opacity: 1 }, 333).onUpdate(function () {\n    mesh.material.opacity = this.opacity;\n\n    //console.log(this.opacity);\n  }).start();\n\n  return Object.assign(mesh, {\n    goods: goods,\n    displayGoods: function displayGoods(scene) {\n      var _this = this;\n\n      setTimeout(function () {\n        alert('OvO你得到了cdk：' + _this.goods.cdk);\n      }, 433);\n\n      //this.remove(goods_);\n    },\n    goodsLookAt: function goodsLookAt(po) {\n      //if(goods_){\n\n      //console.log(po);\n      //goods_.lookAt(po);\n\n\n      //goods_.lookAt(new THREE.Vector3(po.x,po.y,po.z))\n\n      //}\n    }\n  });\n};\n\nvar _mikuTween = __webpack_require__(0);\n\nvar _mikuTween2 = _interopRequireDefault(_mikuTween);\n\nvar _texture_manager = __webpack_require__(1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///19\n")},function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(4)(false);\n// imports\n\n\n// module\nexports.push([module.i, "#game_container {\\n  width: 800px;\\n  height: 500px;\\n  margin: 0 auto;\\n}\\n#no-gl-for-you {\\n  width: 100%;\\n  height: 100%;\\n}\\n#no-gl-for-you span {\\n  display: block;\\n  margin: 0 auto;\\n  text-align: center;\\n  color: black;\\n  margin-top: 20%;\\n}\\n", ""]);\n\n// exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9UaWFvWWlUaWFvLy4vc3JjL3RpYW95aXRpYW8ubGVzcz84YWQ5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7OztBQUdBO0FBQ0EsMENBQTJDLGlCQUFpQixrQkFBa0IsbUJBQW1CLEdBQUcsa0JBQWtCLGdCQUFnQixpQkFBaUIsR0FBRyx1QkFBdUIsbUJBQW1CLG1CQUFtQix1QkFBdUIsaUJBQWlCLG9CQUFvQixHQUFHOztBQUV0UiIsImZpbGUiOiIyMC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiI2dhbWVfY29udGFpbmVyIHtcXG4gIHdpZHRoOiA4MDBweDtcXG4gIGhlaWdodDogNTAwcHg7XFxuICBtYXJnaW46IDAgYXV0bztcXG59XFxuI25vLWdsLWZvci15b3Uge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IDEwMCU7XFxufVxcbiNuby1nbC1mb3IteW91IHNwYW4ge1xcbiAgZGlzcGxheTogYmxvY2s7XFxuICBtYXJnaW46IDAgYXV0bztcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gIGNvbG9yOiBibGFjaztcXG4gIG1hcmdpbi10b3A6IDIwJTtcXG59XFxuXCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///20\n')},function(module,exports,__webpack_require__){eval("\nvar content = __webpack_require__(20);\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(3)(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9UaWFvWWlUaWFvLy4vc3JjL3RpYW95aXRpYW8ubGVzcz82MGFlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOzs7O0FBSUEsZUFBZTs7QUFFZjtBQUNBOztBQUVBOztBQUVBOztBQUVBIiwiZmlsZSI6IjIxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tNC0yIS4uLy4uL25vZGVfbW9kdWxlcy9sZXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3RpYW95aXRpYW8ubGVzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS00LTIhLi4vLi4vbm9kZV9tb2R1bGVzL2xlc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vdGlhb3lpdGlhby5sZXNzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS00LTIhLi4vLi4vbm9kZV9tb2R1bGVzL2xlc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vdGlhb3lpdGlhby5sZXNzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///21\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n__webpack_require__(21);\n\n__webpack_require__(2);\n\nvar _cube = __webpack_require__(19);\n\nvar _cube2 = _interopRequireDefault(_cube);\n\nvar _mikuTween = __webpack_require__(0);\n\nvar _mikuTween2 = _interopRequireDefault(_mikuTween);\n\nvar _tree = __webpack_require__(18);\n\nvar _tree2 = _interopRequireDefault(_tree);\n\nvar _infinity_element = __webpack_require__(17);\n\nvar _infinity_element2 = _interopRequireDefault(_infinity_element);\n\nvar _chessman = __webpack_require__(16);\n\nvar _chessman2 = _interopRequireDefault(_chessman);\n\nvar _billboard = __webpack_require__(15);\n\nvar _billboard2 = _interopRequireDefault(_billboard);\n\nvar _texture_manager = __webpack_require__(1);\n\nvar _detector = __webpack_require__(14);\n\nvar _detector2 = _interopRequireDefault(_detector);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar Api = {};\n\n{\n  var _document$body = document.body,\n      offsetWidth = _document$body.offsetWidth,\n      offsetHeight = _document$body.offsetHeight;\n\n  var $game_container = $('#game_container');\n\n  $game_container.on('touchstart', function (e) {\n    e.preventDefault();\n  });\n\n  if (K.Brower.version.mobile) {\n    $('#holder').css({ width: '100%', height: '100%' });\n\n    $game_container.width(offsetHeight).height(offsetWidth).css({\n      'transform-origin': '0% 0%',\n      'transform': 'rotateZ(90deg) translate3d(0%,-100%,0)'\n    });\n  } else {\n    $game_container.width(offsetWidth).height(offsetWidth * .5);\n    $('<p style=\"font-size:32px;text-align:center;\">pc\\u7AEF\\u957F\\u6309\\u7A7A\\u683C=w=</p>').appendTo('#holder');\n  }\n}\n\nexports.default = K.Event.extend({\n  init: function init(opt) {\n    var _this = this;\n\n    this._super();\n\n    this.options = _defineProperty({\n      can_play: true,\n      $container: $(document.body),\n      status_msg: ''\n    }, 'can_play', false);\n\n    Object.assign(this.options, opt);\n\n    Api = opt.Api;\n\n    this.$container = $(this.options.$container);\n    this.status_msg = this.options.status_msg;\n    this.can_play = this.options.can_play;\n\n    if (!this._supportGl()) {\n\n      return this._noGlForYou();\n    }\n\n    this._max_phase = 100;\n\n    this._phase = 0;\n    this.score = 0;\n    this._good_i = 0;\n    this.goods = opt.goods;\n\n    this._request = false;\n\n    this.can_update_camera = false;\n\n    this.mesh_points = [];\n\n    this.v3_look = new THREE.Vector3(0, 0, -1).applyAxisAngle(new THREE.Vector3(1, 0, 0), .1).applyAxisAngle(new THREE.Vector3(0, 1, 0), -.2);\n\n    this.num_of_game = this.options.num_of_game;\n    this.score = 0;\n    this.current_grid = null;\n    this._keydown = false;\n\n    this.Phases = {};\n\n    this._createStage();\n\n    this.on('round_', function () {\n\n      //debugger;\n\n      _this.num_of_game--;\n\n      console.log('%c round_,score:%s,num_of_game:%s', 'color:black;', _this.score, _this.num_of_game);\n\n      //if(this.num_of_game<=0) return console.log('次数用尽');\n\n      _this.trigger('round-of-game', { score: _this.score, num_of_game: _this.num_of_game });\n\n      _this._restart();\n    });\n\n    //return;\n\n\n    this._getGameResult().then(function (res) {\n\n      _this._textures = res;\n\n      _this._createActor();\n\n      _this._createPhases();\n\n      _this._run();\n\n      _this._render();\n    });\n  },\n  _getGameResult: function _getGameResult() {\n\n    return new Promise(function (r) {\n\n      _texture_manager.TextureManager.initial({\n        boards_small: [\n        //  require('./common/img/boardx2.jpg'),require('./common/img/boardx3.jpg'),require('./common/img/boardx6.jpg')\n        //  ,require('./common/img/boardx.jpg'),require('./common/img/board3.jpg'),require('./common/img/boarda.jpg')\n        __webpack_require__(12), __webpack_require__(11), __webpack_require__(10)\n        //  ,require('./common/img/boardf.jpg'),require('./common/img/boardg.jpg')\n        ],\n        boards_big: [__webpack_require__(9), __webpack_require__(8)],\n        floor: [__webpack_require__(7)],\n        points: [__webpack_require__(6), __webpack_require__(5)]\n        //,chacters:[require('./common/img/gangdan3.png')]\n      });\n\n      _texture_manager.TextureManager.onComplate(function (res) {\n        r(res);\n      });\n    });\n  },\n  _supportGl: function _supportGl() {\n\n    // if(document.querySelector && !window.addEventListener){\n    //     alert('IE8')\n    // }else{\n    //   alert('> ie8');\n    // }\n\n    //console.log(K.Brower.version);\n    return _detector2.default.webgl ? true : void function () {\n      //var warning = Detector.getWebGLErrorMessage();\n      //$('body')[0].appendChild(warning);\n\n\n    }();\n  },\n  _noGlForYou: function _noGlForYou() {\n    //alert('no gl for you!');\n    var d = document.createElement('div');\n    d.id = 'no-gl-for-you';\n    $(this.$container).append(d);\n    d.innerHTML = '\\n      <span>\\u6D4F\\u89C8\\u5668\\u541B\\u9700\\u8981\\u5347\\u7EA7\\uFF01\\u6216\\u8005\\u6362\\u4E2A\\u6D4F\\u89C8\\u5668\\u518D\\u8BD5\\uFF01</span>\\n    ';\n\n    //console.log(this.$container);\n  },\n  _noChance: function _noChance() {\n    alert('次数用尽！');\n  },\n  _restart: function _restart() {\n\n    var that = this;\n\n    this._zoom.show({\n      phase0: function phase0() {\n        {\n\n          that.cubes.forEach(function (o) {\n            that.scene.remove(o);\n          });\n\n          var cube_num = 2;\n          var grid_height = 800;\n\n          that.cubes = [].concat(_toConsumableArray(Array(cube_num))).map(function (v, i) {\n            var mesh = (0, _cube2.default)({\n              height: grid_height,\n              billboard_map: that._textures.boards_small[that._textures.boards_small.length - 1]\n            });\n\n            mesh.position.x = i / cube_num * 100;\n\n            that.scene.add(mesh);\n            return mesh;\n          });\n        }\n\n        that.current_grid = null;\n        that._phase = 0;\n        that.score = 0;\n\n        var po = that.cubes[0].position;\n\n        var _po1$po = {\n          po1: po.clone().add(new THREE.Vector3(0, that.cubes[0].geometry.parameters.height * .6, 0)),\n          po2: po.clone().add(new THREE.Vector3(0, that.cubes[0].geometry.parameters.height * .5, 0))\n        },\n            po1 = _po1$po.po1,\n            po2 = _po1$po.po2;\n\n\n        Object.assign(FreeCamera, {\n          x: po2.x, y: po2.y + 100, z: po2.z + 150\n          // x:120,y:50,z:296\n          , speed: { front: 8, back: 8, left: 3, right: 3\n            //90--55\n          }, θ: 116, φ: 165\n          //,φ:154\n        });\n\n        that._infinity_tree.reset(that.scene);\n        that._infinity_ground.reset(that.scene);\n\n        that.mesh_score.setScore(that.score);\n\n        that.chessman.position.copy(po2);\n\n        that.chessman.start();\n      },\n      phase1: function phase1() {}\n    });\n  },\n  _addScore: function _addScore() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$score = _ref.score,\n        score = _ref$score === undefined ? 1 : _ref$score;\n\n    var that = this;\n\n    this.score += score;\n\n    this.mesh_score.setScore(this.score);\n\n    this.trigger('score', { score: this.score });\n\n    //console.log(score);\n    //debugger;\n\n    var w = this.chessman.geometry.parameters.radiusBottom;\n    w *= score > 1 ? 10 : 5;\n    var dify = score > 1 ? w * 1.23 : w * 2.23;\n\n    var mesh_point = new THREE.Mesh(new THREE.PlaneGeometry(w, w), new THREE.MeshBasicMaterial({\n      map: this._textures.points[score - 1],\n      transparent: true,\n      side: THREE.DoubleSide\n\n    }));\n    this.scene.add(mesh_point);\n    this.mesh_points.push(mesh_point);\n\n    mesh_point.position.copy(this.chessman.position.clone().add(new THREE.Vector3(0, dify, 0)));\n\n    new _mikuTween2.default.Tween({ opacity: 1, y: mesh_point.position.y }).to({ opacity: 0, y: mesh_point.position.y + 10 }, 366).onUpdate(function () {\n      mesh_point.position.y = this.y;\n      mesh_point.material.opacity = this.opacity;\n    }).onComplete(function () {\n      //that.scene.remove(mesh_point);\n\n    }).start();\n  },\n  _run: function _run() {\n    var _this2 = this;\n\n    var _Phases = this.Phases,\n        MoveToSpecialPo = _Phases.MoveToSpecialPo,\n        FlipToHeight = _Phases.FlipToHeight;\n\n\n    var mtsp = new MoveToSpecialPo();\n    var fth = new FlipToHeight();\n\n    var that = this;\n\n    mtsp.on('clear', function () {\n\n      //return;\n\n      fth.execute();\n    });\n\n    fth.on('clear', function () {\n\n      that.on('_keydown', function () {\n\n        if (!that.can_play) return;\n\n        if (that._zoom.hidding) return;\n\n        if (that._request) return;\n\n        if (that.num_of_game === 0) return;\n\n        //if(that.num_of_game===0) return that._noChance();\n        //if(that.num_of_game===0) return console.log('nochance!');\n\n        if (that.chessman.canHolding()) {\n          //console.log('e');\n          that.chessman.holding();\n        }\n      });\n\n      that.on('_keyup', function () {\n\n        if (!that.can_play) return alert(that.status_msg);\n\n        if (that.num_of_game === 0) return that._noChance();\n\n        if (that.chessman.canFlipping()) {\n          that.chessman.flipping();\n        }\n      });\n\n      //debugger;\n\n      //return;\n      _this2.light.position.set(17, 30, 138);\n\n      //console.log('clear!!!!!!!!!!!!!');\n\n      _this2.can_update_camera = true;\n\n      var po = _this2.cubes[0].position;\n\n      var _po1$po2 = {\n        po1: po.clone().add(new THREE.Vector3(0, _this2.cubes[0].geometry.parameters.height * .6, 0)),\n        po2: po.clone().add(new THREE.Vector3(0, _this2.cubes[0].geometry.parameters.height * .5, 0))\n      },\n          po1 = _po1$po2.po1,\n          po2 = _po1$po2.po2;\n\n\n      Object.assign(FreeCamera, {\n        x: po1.x, y: po2.y + 100, z: po1.z + 150\n        //x:po1.x,y:po1.y,z:po1.z+150\n        // x:120,y:50,z:296\n        , speed: { front: 8, back: 8, left: 3, right: 3\n          //90--55\n        }, θ: 116, φ: 165\n        //,φ:154\n      });\n\n      FreeCamera.update();\n\n      //console.log(2333333333333333333);\n\n\n      new _mikuTween2.default.Tween({ x: po1.x, y: po1.y, z: po1.z }).to(po2, 1234).delay(566)\n      //TWEEN.Easing.Elastic.Out\n      .easing(_mikuTween2.default.Easing.Bounce.Out).onUpdate(function () {\n        that.chessman.position.copy(new THREE.Vector3(this.x, this.y, this.z));\n      }).onComplete(function () {\n        that.chessman.start();\n\n        that.mesh_score.show();\n      }).start();\n    });\n\n    addEventListener('keydown', function (e) {\n\n      if (e.keyCode === 32) e.preventDefault();\n\n      if (e.keyCode === 32) _this2._keydown = true;\n    });\n\n    addEventListener('keyup', function (e) {\n\n      if (e.keyCode === 32) e.preventDefault();\n\n      if (e.keyCode === 32) {\n        _this2._keydown = false;\n        _this2.trigger('_keyup');\n      }\n    });\n\n    addEventListener('touchstart', function (e) {\n\n      e.preventDefault();\n\n      _this2._keydown = true;\n    });\n\n    addEventListener('touchend', function (e) {\n\n      e.preventDefault();\n\n      _this2._keydown = false;\n      _this2.trigger('_keyup');\n    });\n\n    mtsp.execute();\n\n    //////////////\n  },\n  _createPhases: function _createPhases() {\n\n    var Phases = K.Event.extend({\n      init: function init() {\n        this._super();\n      },\n      execute: function execute() {}\n    });\n    var that = this;\n\n    var MoveToSpecialPo = Phases.extend({\n      init: function init() {\n        this._super();\n      },\n      execute: function execute() {\n        var _this3 = this;\n\n        var _po1$po3 = {\n          po1: new THREE.Vector3(-300, 0, 0),\n          po2: new THREE.Vector3(60, 0, 0)\n        },\n            po1 = _po1$po3.po1,\n            po2 = _po1$po3.po2;\n\n\n        that.chessman.position.copy(po1.clone());\n\n        var po_chessman = that.chessman.position;\n\n        //////\n        // var mesh_chacter = new THREE.Mesh(\n        //   new THREE.PlaneBufferGeometry(600,600)\n        //   ,new THREE.MeshPhongMaterial({\n        //     color:0x2d2d2d\n        //     ,specular: 0x05050\n        //     ,map: that._textures.chacters[0]\n        //     ,transparent:true\n        //     ,fog:false\n        //   })\n        // );\n        // window.mesh_chacter = mesh_chacter;\n        // that.scene.add(mesh_chacter);\n        // mesh_chacter.position.copy(\n        //   po_chessman.clone().add(new THREE.Vector3(0,300,-900) )\n        // );\n\n        /////\n\n\n        //console.log(that._textures.boards_big);\n        var billboard = that._addBillBoard({\n          // position:po_chessman.clone().add(new THREE.Vector3(0,0,-900) )\n          // ,delay:100\n          position: po_chessman.clone().add(new THREE.Vector3(0, 0, -900)),\n          delay: 0,\n          active_fall: false,\n\n          map: that._textures.boards_big[0]\n\n          //,map : TextureManager.boards_big[0]\n\n        });\n\n        // billboard.rotation.y = .2;\n\n        billboard = that._addBillBoard({\n          position: po_chessman.clone().add(new THREE.Vector3(900, 0, -800)),\n          delay: 666,\n          active_fall: false,\n\n          map: that._textures.boards_big[1]\n\n        });\n\n        billboard.rotation.y = -.5;\n\n        var dx = po2.x - po1.x;\n\n        that.camera.lookAt(that.camera.position.clone().add(that.v3_look));\n\n        that.camera.position.copy(that.chessman.position.clone().add(new THREE.Vector3(0, 10, 150)));\n\n        setTimeout(function () {\n\n          that.chessman.fewFlip({\n            onUpdate: function onUpdate(po) {\n              //FreeCamera.x = po.x-20;\n              //FreeCamera.y = po.y+10;\n\n\n              that.camera.position.copy(new THREE.Vector3(po.x, po.y + 10, po.z + 150));\n\n              that.camera.lookAt(that.camera.position.clone().add(that.v3_look));\n              // FreeCamera.update();\n            },\n            po_increments: [].concat(_toConsumableArray(Array(3))).map(function (v, i) {\n\n              return new THREE.Vector3(po_chessman.x + i / 3 * dx, 0, 0);\n            })\n          }).then(function (res) {\n            _this3.trigger('clear', {});\n          });\n        }, 666);\n\n        //debugger;\n      }\n    });\n\n    var FlipToHeight = Phases.extend({\n      init: function init() {\n        this._super();\n      },\n      execute: function execute() {\n\n        console.log('F');\n        var rx = 0;\n        var me = this;\n\n        that.chessman.flipToTop({\n          height: 400,\n          delay: 566,\n          flip_dur: 3333,\n\n          onFlipStart: function onFlipStart() {\n\n            setTimeout(function () {\n              that.chessman.stopToTop();\n\n              that._zoom.show({\n                phase0: function phase0() {\n                  me.trigger('clear', {});\n                }\n              });\n            }, 888);\n          },\n          onUpdate: function onUpdate(po) {\n\n            var n = .02;\n            rx += n;\n\n            //console.log(rx);\n\n            if (rx >= .6) return;\n\n            that.camera.lookAt(that.camera.position.clone().add(that.v3_look.applyAxisAngle(new THREE.Vector3(1, 0, 0), n)));\n          },\n          onPer: function onPer() {\n            //debugger;\n            //console.log('per');\n          }\n        }).then(function (res) {\n          //this.trigger('clear',{});\n\n        });\n      }\n    });\n\n    this.Phases = {\n      MoveToSpecialPo: MoveToSpecialPo,\n      FlipToHeight: FlipToHeight\n    };\n  },\n  assignGoods: function assignGoods() {\n    //this.goods = goods;\n\n\n    var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        goods = _ref2.goods;\n  },\n  _setRandGoods: function _setRandGoods(mesh) {\n\n    //if(++this._good_i===1) return; \n    //if(this._good_i===3) return mesh.setGood(this.goods.shift());\n\n\n  },\n  _createActor: function _createActor() {\n    var _this4 = this;\n\n    var that = this;\n\n    {\n      this._infinity_tree = new _infinity_element2.default({\n        far: 3000, in_group_num: 123,\n        handle_each_child: function handle_each_child(po1, far) {\n          var tree = (0, _tree2.default)();\n          tree.position.copy(new THREE.Vector3(po1 + far * random(), 0, -350 - random() * 1800));\n\n          return tree;\n        }\n      });\n    }\n\n    {\n      var w = 10000;\n      var map_ = this._textures.floor[0];\n\n      this._infinity_ground = new _infinity_element2.default({\n        far: w, in_group_num: 1,\n        handle_each_child: function handle_each_child(po1, far) {\n\n          var ground = new THREE.Mesh(new THREE.PlaneBufferGeometry(far, far), new THREE.MeshPhongMaterial({\n            color: 0xffffff, specular: 0x050505,\n            map: map_\n            //,transparent:true\n          }));\n\n          ground.rotation.x = -Math.PI / 2;\n          ground.material.map.wrapS = ground.material.map.wrapT = THREE.RepeatWrapping;\n          ground.material.map.repeat.set(80, 80);\n          ground.receiveShadow = true;\n\n          //debugger;\n\n\n          ground.position.copy(new THREE.Vector3(po1 + far * .5, 0, 0));\n\n          //console.log(ground.position);\n\n          return ground;\n        }\n      });\n    }\n\n    {\n      ///\n      // let mesh_author = new THREE.Mesh(\n      //   new THREE.BoxGeometry()\n      //   ,new THREE.MeshPhongMaterial({})\n      // );\n      // this.scene.add(author_board);\n\n\n    }\n\n    {\n      var cube_num = 2;\n      var grid_height = 800;\n      this.cubes = [].concat(_toConsumableArray(Array(cube_num))).map(function (v, i) {\n        var mesh = (0, _cube2.default)({\n          height: grid_height,\n          billboard_map: that._textures.boards_small[random() * that._textures.boards_small.length | 0]\n        });\n\n        mesh.position.x = i / cube_num * 100;\n        _this4.scene.add(mesh);\n\n        //this._setRandGoods(mesh);\n\n        return mesh;\n      });\n    }\n\n    {\n\n      this.chessman = (0, _chessman2.default)({});\n      this.scene.add(this.chessman);\n      this.chessman.onFilpEnd(function () {\n\n        var effect_ring = new THREE.Mesh(\n        // innerRadius,outerRadius\n        new THREE.RingBufferGeometry(5, 7, 32), new THREE.MeshBasicMaterial({\n          color: 0xffffff, side: THREE.DoubleSide,\n          transparent: true\n        }));\n\n        that.scene.add(effect_ring);\n        effect_ring.rotation.x = PI * .5;\n\n        effect_ring.position.copy(_this4.chessman.position.clone().add(new THREE.Vector3(0, _this4.chessman.geometry.parameters.height * .16, 0)));\n\n        new _mikuTween2.default.Tween({ t: 1, a: 1 }).to({ t: 3, a: 0 }, 333).easing(_mikuTween2.default.Easing.Quadratic.Out).onUpdate(function () {\n          effect_ring.scale.set(this.t, this.t, this.t);\n          effect_ring.material.opacity = this.a;\n        }).onComplete(function () {\n          that.scene.remove(effect_ring);\n        }).start();\n      });\n    }\n\n    {\n      var _renderer$getSize = this.renderer.getSize(),\n          width = _renderer$getSize.width,\n          height = _renderer$getSize.height;\n\n      var cv_ = document.createElement('canvas');\n      cv_.width = cv_.height = 100;\n      var c = cv_.getContext('2d');\n\n      this.mesh_score = new THREE.Mesh(new THREE.PlaneGeometry(100, 100), new THREE.MeshBasicMaterial({\n        map: new THREE.Texture(cv_),\n        transparent: true\n      }));\n\n      this.orth_scene.add(this.mesh_score);\n\n      var parameters = this.mesh_score.geometry.parameters;\n      //debugger;\n\n      this.mesh_score.position.copy(new THREE.Vector3(width * .5 - parameters.width * .5, height * .5 - parameters.height * .5, 0));\n\n      Object.assign(this.mesh_score, {\n        setScore: function setScore(score) {\n          c.clearRect(0, 0, cv_.width, cv_.height);\n          c.font = '40px Georgia';\n          c.textAlign = 'center';\n          c.fillText(score, cv_.width * .5, cv_.height * .5);\n          this.material.map.needsUpdate = true;\n        },\n        show: function show() {\n          this.visible = true;\n        },\n        hide: function hide() {\n          this.visible = false;\n        }\n      });\n\n      this.mesh_score.setScore(0);\n      this.mesh_score.hide();\n    }\n\n    {\n      var _renderer$getSize2 = this.renderer.getSize(),\n          _width = _renderer$getSize2.width,\n          _height = _renderer$getSize2.height;\n\n      var zoom = new THREE.Mesh(new THREE.PlaneBufferGeometry(_width, _height), new THREE.MeshBasicMaterial({\n        color: new THREE.Color().setRGB(0, 0, 0),\n        transparent: true\n      }));\n      that.orth_scene.add(zoom);\n\n      Object.assign(zoom, {\n        hidding: false,\n        show: function show() {\n          var _this5 = this;\n\n          var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n              _ref3$delay = _ref3.delay,\n              delay = _ref3$delay === undefined ? 0 : _ref3$delay,\n              _ref3$delay2 = _ref3.delay2,\n              delay2 = _ref3$delay2 === undefined ? 888 : _ref3$delay2,\n              _ref3$dur = _ref3.dur,\n              dur = _ref3$dur === undefined ? 433 : _ref3$dur,\n              phase0 = _ref3.phase0,\n              phase1 = _ref3.phase1;\n\n          var that = this;\n          return new Promise(function (r) {\n            _this5.itv && _this5.itv.stop();\n            _this5.itv = new _mikuTween2.default.Tween({ opacity: 0 }).delay(delay).to({ opacity: 1 }, dur).onUpdate(function () {\n              that.material.opacity = this.opacity;\n              //console.log(this.opacity,'111111');\n            }).onComplete(function () {\n              // console.log('complete tw1')\n              phase0 && phase0();\n            });\n\n            _this5.itv2 && _this5.itv2.stop();\n            _this5.itv2 = new _mikuTween2.default.Tween({ opacity: 1 }).delay(delay2).to({ opacity: 0 }, dur).onUpdate(function () {\n              that.material.opacity = this.opacity;\n              //console.log(this.opacity,'222222');\n            }).onComplete(function () {\n              //console.log('complete tw2')\n              phase1 && phase1();\n            });\n\n            _this5.itv.chain(_this5.itv2);\n\n            _this5.itv.start();\n          });\n        },\n        hide: function hide() {}\n      });\n\n      // that._zoom.show({}).then(res=>{\n\n      // });\n\n      // that._zoom.hide({}).then(res=>{\n\n      // });\n      zoom.material.opacity = 0;\n\n      that._zoom = zoom;\n    }\n  },\n  _addBillBoard: function _addBillBoard(_ref4) {\n    var _this6 = this;\n\n    var _ref4$position = _ref4.position,\n        position = _ref4$position === undefined ? new THREE.Vector3(0, 0, 0) : _ref4$position,\n        _ref4$delay = _ref4.delay,\n        delay = _ref4$delay === undefined ? 0 : _ref4$delay,\n        _ref4$active_fall = _ref4.active_fall,\n        active_fall = _ref4$active_fall === undefined ? true : _ref4$active_fall,\n        map = _ref4.map;\n\n\n    var billboard = (0, _billboard2.default)({\n      map: map\n    });\n\n    this.scene.add(billboard);\n\n    billboard.position.copy(position);\n\n    billboard.onFallEnd(function () {\n      // debugger;\n\n      if (!active_fall) return;\n\n      _this6._infinity_tree.els.forEach(function (o) {\n        o.flip({ delay: random() * 50 });\n      });\n    });\n\n    billboard.fallDown({ delay: delay });\n\n    return billboard;\n  },\n  _addNextGrid: function _addNextGrid() {\n    var _this7 = this;\n\n    this._request = true;\n\n    this._handel_next_grid = function (props) {\n      _this7._request = false;\n\n      var grid_height = 800;\n\n      var goods = props.goods;\n\n      //{name:'name233',cdk:'cdk-123456'}\n\n      var mesh = (0, _cube2.default)({\n        height: grid_height\n        //,goods\n        , goods: goods\n        //,billboard:this._phase%2===0?true:false\n        , billboard: random() < .3 ? true : false,\n        billboard_map: _this7._textures.boards_small[random() * _this7._textures.boards_small.length | 0]\n      });\n\n      mesh.castShadow = false;\n\n      //console.log(this.goods);\n\n      mesh.material.opacity = 1;\n\n      //mesh.position.x = this.current_grid.position.x + 100;\n\n      //var gap =  min(this._phase/this._max_phase,1)*50;\n      var gap = min(_this7._phase / _this7._max_phase, 1) * 100;\n\n      mesh.position.x = _this7.current_grid.position.x + 50 + random() * gap;\n\n      _this7.scene.add(mesh);\n\n      _this7.cubes.push(mesh);\n\n      //debugger;\n    };\n\n    this.trigger('next-grid', {\n      _phase: this._phase,\n      fn: this._handel_next_grid.bind(this)\n    });\n\n    ///////////////////////////////\n\n  },\n  _checkChessManOutSide: function _checkChessManOutSide() {\n    var _this8 = this;\n\n    var po_ = this.chessman.position.clone();\n    po_.y = max(po_.y, this.cubes[0].position.y + this.cubes[0].geometry.parameters.height);\n\n    var ray = new THREE.Raycaster(po_, new THREE.Vector3(0, -1, 0));\n\n    var intersects = ray.intersectObjects([].concat(_toConsumableArray(this.cubes)));\n    //console.log(intersects.length);\n\n    //console.log('len:',intersects.length);\n    if (this.chessman.isOutside()) return;\n\n    // document.title = `len:${intersects.length},status:${this.chessman.status}`;\n\n\n    // console.log(this.chessman.status,'####');\n    //console.log(this.chessman.position,'####');\n    if (!intersects.length && this.chessman.isStading()) {\n      this.chessman.fallDown({}).then(function (res) {\n        _this8.trigger('round_', {});\n      });\n\n      console.log('%c outside! status:%s', 'color:teal;', this.chessman.status);\n      return;\n    }\n\n    if (intersects.length && this.chessman.isStading()) {\n      var _intersects$ = intersects[0],\n          distance = _intersects$.distance,\n          point = _intersects$.point,\n          object = _intersects$.object;\n\n\n      if (!this.current_grid) {\n        this.current_grid = object;\n      }\n\n      if (this.current_grid != object) {\n        this.current_grid = object;\n        this._phase++;\n\n        if (this.current_grid.goods) {\n          this.current_grid.displayGoods(this.scene);\n          this.trigger('receive-goods', _extends({}, this.current_grid.goods));\n        }\n\n        //console.log(point);\n\n        {\n\n          var point_center = this.current_grid.position.clone().add(new THREE.Vector3(0, this.current_grid.geometry.parameters.height * .5, 0));\n\n          var len = point.clone().sub(point_center).length();\n\n          //console.log(len);\n\n          //\n        }\n\n        this._addScore({ score: len < 4 ? 2 : 1 });\n        //this._addScore({ score:2});\n\n        //console.log(this.this._phase);\n        if (this._phase > 0) {\n          //debugger;\n\n          //addNextCube();\n          this._addNextGrid();\n        }\n\n        if (this._phase % 4 == 0) {\n          //addBillboard();\n        }\n\n        console.log('%c _phase:%s', 'color:red;', this._phase);\n      }\n    }\n  },\n  _trackChessMan: function _trackChessMan() {\n    if (this.chessman.isDied()) return;\n\n    FreeCamera.x = this.chessman.position.x;\n  },\n  _render: function _render() {\n    var that = this;\n    //debugger;\n\n    requestAnimationFrame(function animate() {\n      requestAnimationFrame(animate);\n\n      if (that._keydown) that.trigger('_keydown');\n\n      _mikuTween2.default.update();\n\n      //that.renderer.render(that.scene , that.camera);\n\n      that.renderer.clear();\n      that.renderer.render(that.scene, that.camera);\n      that.renderer.clearDepth();\n      that.renderer.render(that.orth_scene, that.orth_camera);\n\n      //renderer.setSize($container.width(), $container.height());\n\n      //console.log(that.$container.width(), that.$container.height());\n\n\n      that._infinity_tree.render({ x: Cam.x }, that.scene);\n      that._infinity_ground.render({ x: Cam.x }, that.scene);\n\n      that._checkChessManOutSide();\n      that._trackChessMan();\n\n      that.cubes.forEach(function (o) {\n        o.goodsLookAt(new THREE.Vector3(FreeCamera.x, FreeCamera.y, FreeCamera.z));\n      });\n\n      if (that.can_update_camera) FreeCamera.update();\n\n      //\n    });\n  },\n  _createStage: function _createStage() {\n    var $container = this.$container;\n    var _ref5 = [$container.width(), $container.height()],\n        width = _ref5[0],\n        height = _ref5[1];\n\n\n    var scene = new THREE.Scene();\n    var camera = new THREE.PerspectiveCamera(30, $container.width() / $container.height(), .1, 10000);\n    //let camera = new THREE.PerspectiveCamera( 45, $container.width()/$container.height(), .1, 10000 );\n    var renderer = new THREE.WebGLRenderer({ antialias: true });\n    //let renderer = new THREE.WebGLRenderer( {} );\n    //renderer.setClearColor(0xeeeeee, 1);\n    renderer.autoClear = false; // To allow render overlay on top of sprited sphere\n    renderer.setClearColor(0x000000, 1);\n    renderer.setSize($container.width(), $container.height());\n\n    var orth_scene = new THREE.Scene();\n    var orth_camera = new THREE.OrthographicCamera(-width / 2, width / 2, height / 2, height / -2, .1, 6000);\n    orth_camera.position.copy(new THREE.Vector3(0, 0, 10));\n\n    renderer.shadowMap.enabled = true;\n    renderer.shadowMap.type = THREE.PCFSoftShadowMap; // default THREE.PCFShadowMap\n\n    $container.append(renderer.domElement);\n\n    scene.background = new THREE.Color().setRGB(0.6, 1, 1);\n    scene.fog = new THREE.FogExp2(scene.background, 0.0006);\n\n    FreeCamera({ camera: camera, el: $container[0], keycode_move: true });\n\n    FreeCamera.update();\n\n    var ambientLight = new THREE.AmbientLight(new THREE.Color().setRGB(.2, .2, .2));\n    scene.add(ambientLight);\n\n    var dirLight = new THREE.DirectionalLight(0xffffff, 1);\n    dirLight.color.setHSL(0.1, 1, 0.8);\n\n    //正式玩\n    dirLight.position.set(17, 30, 138);\n\n    //场外\n    //30 69 47\n    dirLight.position.set(30, 69, 47);\n\n    scene.add(dirLight);\n\n    dirLight.castShadow = true;\n    // dirLight.shadow.mapSize.width = 2048;\n    // dirLight.shadow.mapSize.height = 2048;\n\n    dirLight.shadow.mapSize.width = 2048;\n    dirLight.shadow.mapSize.height = 2048;\n\n    var d = 1500;\n    dirLight.shadow.camera.left = -d;\n    dirLight.shadow.camera.right = d;\n    dirLight.shadow.camera.top = d;\n    dirLight.shadow.camera.bottom = -d;\n    dirLight.shadow.camera.near = -d;\n    dirLight.shadow.camera.far = d;\n    dirLight.shadow.bias = -0.0001;\n\n    scene.add(new THREE.DirectionalLightHelper(dirLight));\n\n    this.light = dirLight;\n\n    this.scene = scene;\n    this.camera = camera;\n    this.orth_scene = orth_scene;\n    this.orth_camera = orth_camera;\n\n    this.Cam = Cam;\n    this.renderer = renderer;\n  },\n  start: function start(o) {\n    Object.assign(this.options, o);\n\n    //this._handlePress();\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///22\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n/**\r\n * Tween.js - Licensed under the MIT license\r\n * https://github.com/tweenjs/tween.js\r\n * ----------------------------------------------\r\n *\r\n * See https://github.com/tweenjs/tween.js/graphs/contributors for the full list of contributors.\r\n * Thank you all, you're awesome!\r\n */\n\nvar TWEEN = TWEEN || function () {\n\n\tvar _tweens = [];\n\n\treturn {\n\n\t\tgetAll: function getAll() {\n\n\t\t\treturn _tweens;\n\t\t},\n\n\t\tremoveAll: function removeAll() {\n\n\t\t\t_tweens = [];\n\t\t},\n\n\t\tadd: function add(tween) {\n\n\t\t\t_tweens.push(tween);\n\t\t},\n\n\t\tremove: function remove(tween) {\n\n\t\t\tvar i = _tweens.indexOf(tween);\n\n\t\t\tif (i !== -1) {\n\t\t\t\t_tweens.splice(i, 1);\n\t\t\t}\n\t\t},\n\n\t\tupdate: function update(time, preserve) {\n\n\t\t\tif (_tweens.length === 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar i = 0;\n\n\t\t\ttime = time !== undefined ? time : TWEEN.now();\n\n\t\t\twhile (i < _tweens.length) {\n\n\t\t\t\tif (_tweens[i].update(time) || preserve) {\n\t\t\t\t\ti++;\n\t\t\t\t} else {\n\t\t\t\t\t_tweens.splice(i, 1);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\t};\n}();\n\n// Include a performance.now polyfill\n(function () {\n\t// In node.js, use process.hrtime.\n\t// if (this.window === undefined && this.process !== undefined) {\n\t// \tTWEEN.now = function () {\n\t// \t\tvar time = process.hrtime();\n\n\t// \t\t// Convert [seconds, microseconds] to milliseconds.\n\t// \t\treturn time[0] * 1000 + time[1] / 1000;\n\t// \t};\n\t// }\n\t// // In a browser, use window.performance.now if it is available.\n\t// else if (this.window !== undefined &&\n\t//          window.performance !== undefined &&\n\t// \t window.performance.now !== undefined) {\n\n\t// \t// This must be bound, because directly assigning this function\n\t// \t// leads to an invocation exception in Chrome.\n\t// \tTWEEN.now = window.performance.now.bind(window.performance);\n\t// }\n\t// // Use Date.now if it is available.\n\t// else if (Date.now !== undefined) {\n\t// \tTWEEN.now = Date.now;\n\t// }\n\t// // Otherwise, use 'new Date().getTime()'.\n\t// else {\n\t// \tTWEEN.now = function () {\n\t// \t\treturn new Date().getTime();\n\t// \t};\n\t// }\n\t// \n\t// \n\tif (Date.now !== undefined) {\n\t\tTWEEN.now = Date.now;\n\t} else {\n\t\tTWEEN.now = function () {\n\t\t\treturn new Date().getTime();\n\t\t};\n\t}\n}).bind(undefined)();\n\nTWEEN.Tween = function (object) {\n\n\tvar _object = object;\n\tvar _valuesStart = {};\n\tvar _valuesEnd = {};\n\tvar _valuesStartRepeat = {};\n\tvar _duration = 1000;\n\tvar _repeat = 0;\n\tvar _repeatDelayTime;\n\tvar _yoyo = false;\n\tvar _isPlaying = false;\n\tvar _reversed = false;\n\tvar _delayTime = 0;\n\tvar _startTime = null;\n\tvar _easingFunction = TWEEN.Easing.Linear.None;\n\tvar _interpolationFunction = TWEEN.Interpolation.Linear;\n\tvar _chainedTweens = [];\n\tvar _onStartCallback = null;\n\tvar _onStartCallbackFired = false;\n\tvar _onUpdateCallback = null;\n\tvar _onCompleteCallback = null;\n\tvar _onStopCallback = null;\n\n\t// Set all starting values present on the target object\n\tfor (var field in object) {\n\t\t_valuesStart[field] = parseFloat(object[field], 10);\n\t}\n\n\tthis.to = function (properties, duration) {\n\n\t\tif (duration !== undefined) {\n\t\t\t_duration = duration;\n\t\t}\n\n\t\t_valuesEnd = properties;\n\n\t\treturn this;\n\t};\n\n\tthis.start = function (time) {\n\n\t\tTWEEN.add(this);\n\n\t\t_isPlaying = true;\n\n\t\t_onStartCallbackFired = false;\n\n\t\t_startTime = time !== undefined ? time : TWEEN.now();\n\t\t_startTime += _delayTime;\n\n\t\tfor (var property in _valuesEnd) {\n\n\t\t\t// Check if an Array was provided as property value\n\t\t\tif (_valuesEnd[property] instanceof Array) {\n\n\t\t\t\tif (_valuesEnd[property].length === 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Create a local copy of the Array with the start value at the front\n\t\t\t\t_valuesEnd[property] = [_object[property]].concat(_valuesEnd[property]);\n\t\t\t}\n\n\t\t\t// If `to()` specifies a property that doesn't exist in the source object,\n\t\t\t// we should not set that property in the object\n\t\t\tif (_valuesStart[property] === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t_valuesStart[property] = _object[property];\n\n\t\t\tif (_valuesStart[property] instanceof Array === false) {\n\t\t\t\t_valuesStart[property] *= 1.0; // Ensures we're using numbers, not strings\n\t\t\t}\n\n\t\t\t_valuesStartRepeat[property] = _valuesStart[property] || 0;\n\t\t}\n\n\t\treturn this;\n\t};\n\n\tthis.stop = function () {\n\n\t\tif (!_isPlaying) {\n\t\t\treturn this;\n\t\t}\n\n\t\tTWEEN.remove(this);\n\t\t_isPlaying = false;\n\n\t\tif (_onStopCallback !== null) {\n\t\t\t_onStopCallback.call(_object);\n\t\t}\n\n\t\tthis.stopChainedTweens();\n\t\treturn this;\n\t};\n\n\tthis.end = function () {\n\n\t\tthis.update(_startTime + _duration);\n\t\treturn this;\n\t};\n\n\tthis.stopChainedTweens = function () {\n\n\t\tfor (var i = 0, numChainedTweens = _chainedTweens.length; i < numChainedTweens; i++) {\n\t\t\t_chainedTweens[i].stop();\n\t\t}\n\t};\n\n\tthis.delay = function (amount) {\n\n\t\t_delayTime = amount;\n\t\treturn this;\n\t};\n\n\tthis.repeat = function (times) {\n\n\t\t_repeat = times;\n\t\treturn this;\n\t};\n\n\tthis.repeatDelay = function (amount) {\n\n\t\t_repeatDelayTime = amount;\n\t\treturn this;\n\t};\n\n\tthis.yoyo = function (yoyo) {\n\n\t\t_yoyo = yoyo;\n\t\treturn this;\n\t};\n\n\tthis.easing = function (easing) {\n\n\t\t_easingFunction = easing;\n\t\treturn this;\n\t};\n\n\tthis.interpolation = function (interpolation) {\n\n\t\t_interpolationFunction = interpolation;\n\t\treturn this;\n\t};\n\n\tthis.chain = function () {\n\n\t\t_chainedTweens = arguments;\n\t\treturn this;\n\t};\n\n\tthis.onStart = function (callback) {\n\n\t\t_onStartCallback = callback;\n\t\treturn this;\n\t};\n\n\tthis.onUpdate = function (callback) {\n\n\t\t_onUpdateCallback = callback;\n\t\treturn this;\n\t};\n\n\tthis.onComplete = function (callback) {\n\n\t\t_onCompleteCallback = callback;\n\t\treturn this;\n\t};\n\n\tthis.onStop = function (callback) {\n\n\t\t_onStopCallback = callback;\n\t\treturn this;\n\t};\n\n\tthis.update = function (time) {\n\n\t\tvar property;\n\t\tvar elapsed;\n\t\tvar value;\n\n\t\tif (time < _startTime) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (_onStartCallbackFired === false) {\n\n\t\t\tif (_onStartCallback !== null) {\n\t\t\t\t_onStartCallback.call(_object);\n\t\t\t}\n\n\t\t\t_onStartCallbackFired = true;\n\t\t}\n\n\t\telapsed = (time - _startTime) / _duration;\n\t\telapsed = elapsed > 1 ? 1 : elapsed;\n\n\t\tvalue = _easingFunction(elapsed);\n\n\t\tfor (property in _valuesEnd) {\n\n\t\t\t// Don't update properties that do not exist in the source object\n\t\t\tif (_valuesStart[property] === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar start = _valuesStart[property] || 0;\n\t\t\tvar end = _valuesEnd[property];\n\n\t\t\tif (end instanceof Array) {\n\n\t\t\t\t_object[property] = _interpolationFunction(end, value);\n\t\t\t} else {\n\n\t\t\t\t// Parses relative end values with start as base (e.g.: +10, -3)\n\t\t\t\tif (typeof end === 'string') {\n\n\t\t\t\t\tif (end.charAt(0) === '+' || end.charAt(0) === '-') {\n\t\t\t\t\t\tend = start + parseFloat(end, 10);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tend = parseFloat(end, 10);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Protect against non numeric properties.\n\t\t\t\tif (typeof end === 'number') {\n\t\t\t\t\t_object[property] = start + (end - start) * value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (_onUpdateCallback !== null) {\n\t\t\t_onUpdateCallback.call(_object, value);\n\t\t}\n\n\t\tif (elapsed === 1) {\n\n\t\t\tif (_repeat > 0) {\n\n\t\t\t\tif (isFinite(_repeat)) {\n\t\t\t\t\t_repeat--;\n\t\t\t\t}\n\n\t\t\t\t// Reassign starting values, restart by making startTime = now\n\t\t\t\tfor (property in _valuesStartRepeat) {\n\n\t\t\t\t\tif (typeof _valuesEnd[property] === 'string') {\n\t\t\t\t\t\t_valuesStartRepeat[property] = _valuesStartRepeat[property] + parseFloat(_valuesEnd[property], 10);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (_yoyo) {\n\t\t\t\t\t\tvar tmp = _valuesStartRepeat[property];\n\n\t\t\t\t\t\t_valuesStartRepeat[property] = _valuesEnd[property];\n\t\t\t\t\t\t_valuesEnd[property] = tmp;\n\t\t\t\t\t}\n\n\t\t\t\t\t_valuesStart[property] = _valuesStartRepeat[property];\n\t\t\t\t}\n\n\t\t\t\tif (_yoyo) {\n\t\t\t\t\t_reversed = !_reversed;\n\t\t\t\t}\n\n\t\t\t\tif (_repeatDelayTime !== undefined) {\n\t\t\t\t\t_startTime = time + _repeatDelayTime;\n\t\t\t\t} else {\n\t\t\t\t\t_startTime = time + _delayTime;\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t} else {\n\n\t\t\t\tif (_onCompleteCallback !== null) {\n\t\t\t\t\t_onCompleteCallback.call(_object);\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, numChainedTweens = _chainedTweens.length; i < numChainedTweens; i++) {\n\t\t\t\t\t// Make the chained tweens start exactly at the time they should,\n\t\t\t\t\t// even if the `update()` method was called way past the duration of the tween\n\t\t\t\t\t_chainedTweens[i].start(_startTime + _duration);\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t};\n};\n\nTWEEN.Easing = {\n\n\tLinear: {\n\n\t\tNone: function None(k) {\n\n\t\t\treturn k;\n\t\t}\n\n\t},\n\n\tQuadratic: {\n\n\t\tIn: function In(k) {\n\n\t\t\treturn k * k;\n\t\t},\n\n\t\tOut: function Out(k) {\n\n\t\t\treturn k * (2 - k);\n\t\t},\n\n\t\tInOut: function InOut(k) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k;\n\t\t\t}\n\n\t\t\treturn -0.5 * (--k * (k - 2) - 1);\n\t\t}\n\n\t},\n\n\tCubic: {\n\n\t\tIn: function In(k) {\n\n\t\t\treturn k * k * k;\n\t\t},\n\n\t\tOut: function Out(k) {\n\n\t\t\treturn --k * k * k + 1;\n\t\t},\n\n\t\tInOut: function InOut(k) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k * k;\n\t\t\t}\n\n\t\t\treturn 0.5 * ((k -= 2) * k * k + 2);\n\t\t}\n\n\t},\n\n\tQuartic: {\n\n\t\tIn: function In(k) {\n\n\t\t\treturn k * k * k * k;\n\t\t},\n\n\t\tOut: function Out(k) {\n\n\t\t\treturn 1 - --k * k * k * k;\n\t\t},\n\n\t\tInOut: function InOut(k) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k * k * k;\n\t\t\t}\n\n\t\t\treturn -0.5 * ((k -= 2) * k * k * k - 2);\n\t\t}\n\n\t},\n\n\tQuintic: {\n\n\t\tIn: function In(k) {\n\n\t\t\treturn k * k * k * k * k;\n\t\t},\n\n\t\tOut: function Out(k) {\n\n\t\t\treturn --k * k * k * k * k + 1;\n\t\t},\n\n\t\tInOut: function InOut(k) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k * k * k * k;\n\t\t\t}\n\n\t\t\treturn 0.5 * ((k -= 2) * k * k * k * k + 2);\n\t\t}\n\n\t},\n\n\tSinusoidal: {\n\n\t\tIn: function In(k) {\n\n\t\t\treturn 1 - Math.cos(k * Math.PI / 2);\n\t\t},\n\n\t\tOut: function Out(k) {\n\n\t\t\treturn Math.sin(k * Math.PI / 2);\n\t\t},\n\n\t\tInOut: function InOut(k) {\n\n\t\t\treturn 0.5 * (1 - Math.cos(Math.PI * k));\n\t\t}\n\n\t},\n\n\tExponential: {\n\n\t\tIn: function In(k) {\n\n\t\t\treturn k === 0 ? 0 : Math.pow(1024, k - 1);\n\t\t},\n\n\t\tOut: function Out(k) {\n\n\t\t\treturn k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n\t\t},\n\n\t\tInOut: function InOut(k) {\n\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * Math.pow(1024, k - 1);\n\t\t\t}\n\n\t\t\treturn 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n\t\t}\n\n\t},\n\n\tCircular: {\n\n\t\tIn: function In(k) {\n\n\t\t\treturn 1 - Math.sqrt(1 - k * k);\n\t\t},\n\n\t\tOut: function Out(k) {\n\n\t\t\treturn Math.sqrt(1 - --k * k);\n\t\t},\n\n\t\tInOut: function InOut(k) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn -0.5 * (Math.sqrt(1 - k * k) - 1);\n\t\t\t}\n\n\t\t\treturn 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n\t\t}\n\n\t},\n\n\tElastic: {\n\n\t\tIn: function In(k) {\n\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\treturn -Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n\t\t},\n\n\t\tOut: function Out(k) {\n\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\treturn Math.pow(2, -10 * k) * Math.sin((k - 0.1) * 5 * Math.PI) + 1;\n\t\t},\n\n\t\tInOut: function InOut(k) {\n\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tk *= 2;\n\n\t\t\tif (k < 1) {\n\t\t\t\treturn -0.5 * Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n\t\t\t}\n\n\t\t\treturn 0.5 * Math.pow(2, -10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI) + 1;\n\t\t}\n\n\t},\n\n\tBack: {\n\n\t\tIn: function In(k) {\n\n\t\t\tvar s = 1.70158;\n\n\t\t\treturn k * k * ((s + 1) * k - s);\n\t\t},\n\n\t\tOut: function Out(k) {\n\n\t\t\tvar s = 1.70158;\n\n\t\t\treturn --k * k * ((s + 1) * k + s) + 1;\n\t\t},\n\n\t\tInOut: function InOut(k) {\n\n\t\t\tvar s = 1.70158 * 1.525;\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * (k * k * ((s + 1) * k - s));\n\t\t\t}\n\n\t\t\treturn 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n\t\t}\n\n\t},\n\n\tBounce: {\n\n\t\tIn: function In(k) {\n\n\t\t\treturn 1 - TWEEN.Easing.Bounce.Out(1 - k);\n\t\t},\n\n\t\tOut: function Out(k) {\n\n\t\t\tif (k < 1 / 2.75) {\n\t\t\t\treturn 7.5625 * k * k;\n\t\t\t} else if (k < 2 / 2.75) {\n\t\t\t\treturn 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\n\t\t\t} else if (k < 2.5 / 2.75) {\n\t\t\t\treturn 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\n\t\t\t} else {\n\t\t\t\treturn 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\n\t\t\t}\n\t\t},\n\n\t\tInOut: function InOut(k) {\n\n\t\t\tif (k < 0.5) {\n\t\t\t\treturn TWEEN.Easing.Bounce.In(k * 2) * 0.5;\n\t\t\t}\n\n\t\t\treturn TWEEN.Easing.Bounce.Out(k * 2 - 1) * 0.5 + 0.5;\n\t\t}\n\n\t}\n\n};\n\nTWEEN.Interpolation = {\n\n\tLinear: function Linear(v, k) {\n\n\t\tvar m = v.length - 1;\n\t\tvar f = m * k;\n\t\tvar i = Math.floor(f);\n\t\tvar fn = TWEEN.Interpolation.Utils.Linear;\n\n\t\tif (k < 0) {\n\t\t\treturn fn(v[0], v[1], f);\n\t\t}\n\n\t\tif (k > 1) {\n\t\t\treturn fn(v[m], v[m - 1], m - f);\n\t\t}\n\n\t\treturn fn(v[i], v[i + 1 > m ? m : i + 1], f - i);\n\t},\n\n\tBezier: function Bezier(v, k) {\n\n\t\tvar b = 0;\n\t\tvar n = v.length - 1;\n\t\tvar pw = Math.pow;\n\t\tvar bn = TWEEN.Interpolation.Utils.Bernstein;\n\n\t\tfor (var i = 0; i <= n; i++) {\n\t\t\tb += pw(1 - k, n - i) * pw(k, i) * v[i] * bn(n, i);\n\t\t}\n\n\t\treturn b;\n\t},\n\n\tCatmullRom: function CatmullRom(v, k) {\n\n\t\tvar m = v.length - 1;\n\t\tvar f = m * k;\n\t\tvar i = Math.floor(f);\n\t\tvar fn = TWEEN.Interpolation.Utils.CatmullRom;\n\n\t\tif (v[0] === v[m]) {\n\n\t\t\tif (k < 0) {\n\t\t\t\ti = Math.floor(f = m * (1 + k));\n\t\t\t}\n\n\t\t\treturn fn(v[(i - 1 + m) % m], v[i], v[(i + 1) % m], v[(i + 2) % m], f - i);\n\t\t} else {\n\n\t\t\tif (k < 0) {\n\t\t\t\treturn v[0] - (fn(v[0], v[0], v[1], v[1], -f) - v[0]);\n\t\t\t}\n\n\t\t\tif (k > 1) {\n\t\t\t\treturn v[m] - (fn(v[m], v[m], v[m - 1], v[m - 1], f - m) - v[m]);\n\t\t\t}\n\n\t\t\treturn fn(v[i ? i - 1 : 0], v[i], v[m < i + 1 ? m : i + 1], v[m < i + 2 ? m : i + 2], f - i);\n\t\t}\n\t},\n\n\tUtils: {\n\n\t\tLinear: function Linear(p0, p1, t) {\n\n\t\t\treturn (p1 - p0) * t + p0;\n\t\t},\n\n\t\tBernstein: function Bernstein(n, i) {\n\n\t\t\tvar fc = TWEEN.Interpolation.Utils.Factorial;\n\n\t\t\treturn fc(n) / fc(i) / fc(n - i);\n\t\t},\n\n\t\tFactorial: function () {\n\n\t\t\tvar a = [1];\n\n\t\t\treturn function (n) {\n\n\t\t\t\tvar s = 1;\n\n\t\t\t\tif (a[n]) {\n\t\t\t\t\treturn a[n];\n\t\t\t\t}\n\n\t\t\t\tfor (var i = n; i > 1; i--) {\n\t\t\t\t\ts *= i;\n\t\t\t\t}\n\n\t\t\t\ta[n] = s;\n\t\t\t\treturn s;\n\t\t\t};\n\t\t}(),\n\n\t\tCatmullRom: function CatmullRom(p0, p1, p2, p3, t) {\n\n\t\t\tvar v0 = (p2 - p0) * 0.5;\n\t\t\tvar v1 = (p3 - p1) * 0.5;\n\t\t\tvar t2 = t * t;\n\t\t\tvar t3 = t * t2;\n\n\t\t\treturn (2 * p1 - 2 * p2 + v0 + v1) * t3 + (-3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\n\t\t}\n\n\t}\n\n};\n\nexports.default = TWEEN;\n\n// UMD (Universal Module Definition)\n// (function (root) {\n\n// \tif (typeof define === 'function' && define.amd) {\n\n// \t\t// AMD\n// \t\tdefine([], function () {\n// \t\t\treturn TWEEN;\n// \t\t});\n\n// \t} else if (typeof module !== 'undefined' && typeof exports === 'object') {\n\n// \t\t// Node.js\n// \t\tmodule.exports = TWEEN;\n\n// \t} else if (root !== undefined) {\n\n// \t\t// Global variable\n// \t\troot.TWEEN = TWEEN;\n\n\n// \t}\n\n// })(this);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///23\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\n{\n  var Vec;\n\n  (function () {\n    var equalNum = function equalNum(a, b) {\n      return Math.abs(a - b) < (Number.EPSILON || pow(2, -52));\n    };\n    Vec = Class.extend({\n      init: function init(x, y, z) {\n        this.x = x || 0;\n        this.y = y || 0;\n        this.z = z || 0;\n      },\n      equal: function equal(v) {\n        //return abs(v.x-this.x)<&&this.y==v.y&&this.z==v.z;\n        return equalNum(this.x, v.x) && equalNum(this.y, v.y) && equalNum(this.z, v.z);\n      },\n      length: function length() {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n      },\n      normal: function normal() {\n        var len = this.length();\n        return len ? new Vec(this.x / len, this.y / len, this.z / len) : new Vec(0, 0, 0);\n      },\n      scale: function scale(_scale) {\n        return new Vec(this.x * _scale, this.y * _scale, this.z * _scale);\n      },\n      add: function add(vec) {\n        return new Vec(this.x + vec.x, this.y + vec.y, this.z + vec.z);\n      },\n      sub: function sub(vec) {\n        return new Vec(this.x - vec.x, this.y - vec.y, this.z - vec.z);\n      },\n      vertical: function vertical() {\n        return new Vec(this.y, -this.x);\n      },\n      dot: function dot(vec) {\n        //vec是单位向量  那返回的就是投影了\n        // 如果都是单位向量 返回的就是 cos的值   acos可以求出弧度了\n        return this.x * vec.x + this.y * vec.y + this.z * vec.z;\n      },\n      cross_v2: function cross_v2(vec) {\n\n        return this.x * vec.y - this.y * vec.x;\n      },\n      cross: function cross(vec) {\n        //角动量啊！\n        // return this.x*vec.y - this.y*vec.x;\n\n        return new Vec(this.y * vec.z - this.z * vec.y, this.z * vec.x - this.x * vec.z, this.x * vec.y - this.y * vec.x);\n      },\n      clone: function clone() {\n        return new Vec(this.x, this.y, this.z);\n      },\n      rotateY: function rotateY(radian) {\n        var cosine = Math.cos(radian),\n            sine = Math.sin(radian),\n            x = cosine * this.x - sine * this.z,\n            z = cosine * this.z + sine * this.x;\n        return new Vec(x, this.y, z);\n      },\n      rotateX: function rotateX(radian) {\n        // console.log(Math.cos(PI*.5),Math.sin(PI*.5));\n        //  console.log(Math.cos(PI),Math.sin(PI));\n        var cosine = Math.cos(radian),\n            sine = Math.sin(radian),\n            y = cosine * this.y - sine * this.z,\n            z = cosine * this.z + sine * this.y;\n        return new Vec(this.x, y, z);\n      },\n      rotateZ: function rotateZ(radian) {\n        var cosine = Math.cos(radian),\n            sine = Math.sin(radian),\n            x = cosine * this.x - sine * this.y,\n            y = cosine * this.y + sine * this.x;\n        return new Vec(x, y, this.z);\n      },\n      radian: function radian() {\n        return Math.atan2(this.y, this.x);\n      }\n    });\n  })();\n}\n{\n  var Det2;\n\n  (function () {\n    var det = function det(ar) {\n      return ar[0][0] * ar[1][1] - ar[1][0] * ar[0][1];\n    };\n\n    Det2 = function Det2(ar, nar) {\n      var a, b;\n      var D = det(ar);\n      //if(D==0) return console.warn('...!!!');\n      if (D == 0) return;\n\n      var ar1 = $.extend(true, [], ar);\n      var ar2 = $.extend(true, [], ar);\n      ar1[0][0] = nar[0];\n      ar1[1][0] = nar[1];\n\n      ar2[0][1] = nar[0];\n      ar2[1][1] = nar[1];\n\n      return [det(ar1) / D, det(ar2) / D];\n    };\n  })();\n}\n{\n  var Det3;\n\n  (function () {\n    var det = function det(a) {\n      return a[0][0] * a[1][1] * a[2][2] + a[0][1] * a[1][2] * a[2][0] + a[0][2] * a[1][0] * a[2][1] - a[0][2] * a[1][1] * a[2][0] - a[0][1] * a[1][0] * a[2][2] - a[0][0] * a[1][2] * a[2][1];\n    };\n\n    Det3 = function Det3(ar, nar) {\n      var a, b, c;\n      var D = det(ar);\n\n      //if(D==0) return console.warn('矩阵不可逆呦~');\n      if (D == 0) return;\n\n      var ar1 = JSON.parse(JSON.stringify(ar));\n      var ar2 = JSON.parse(JSON.stringify(ar));\n      var ar3 = JSON.parse(JSON.stringify(ar));\n\n      ar1[0][0] = nar[0];\n      ar1[1][0] = nar[1];\n      ar1[2][0] = nar[2];\n\n      ar2[0][1] = nar[0];\n      ar2[1][1] = nar[1];\n      ar2[2][1] = nar[2];\n\n      ar3[0][2] = nar[0];\n      ar3[1][2] = nar[1];\n      ar3[2][2] = nar[2];\n\n      var D1 = det(ar1);\n\n      var D2 = det(ar2);\n\n      var D3 = det(ar3);\n\n      return [D1 / D, D2 / D, D3 / D];\n    };\n  })();\n}\nvar MxEvent = {\n  evs: {},\n  on: function on(s, fn, once) {\n    s = s.trim();\n    if (once && once.trim() == 'once') {\n      this.evs[s] = [fn];\n\n      return this;\n    };\n\n    if (!this.evs[s]) {\n      this.evs[s] = [fn];\n      return this;\n    };\n    this.evs[s].push(fn);\n    return this;\n  },\n  trigger: function trigger(s) {\n    var that = this,\n        args = arguments,\n        ar = this.evs[s = s.trim()];\n\n    //tirgger('aaa' , a,b,c)\n    ar && ar.forEach(function (fn) {\n      fn.apply(that, [].slice.call(args, 1));\n    });\n\n    return this;\n  },\n  off: function off(s) {\n    delete this.evs[s.trim()];\n    return this;\n  }\n};\nvar Event = Class.extend({\n  init: function init() {\n    this.evs = {};\n  },\n  on: function on(s, fn, once) {\n    s = s.trim();\n    if (once && once.trim() == 'once') {\n      this.evs[s] = [fn];\n\n      return this;\n    };\n\n    if (!this.evs[s]) {\n      this.evs[s] = [fn];\n      return this;\n    };\n    this.evs[s].push(fn);\n    return this;\n  },\n  trigger: function trigger(s) {\n    var that = this,\n        args = arguments,\n        ar = this.evs[s = s.trim()];\n\n    //tirgger('aaa' , a,b,c)\n    ar && ar.forEach(function (fn) {\n      fn.apply(that, [].slice.call(args, 1));\n    });\n\n    return this;\n  },\n  off: function off(s) {\n    delete this.evs[s.trim()];\n    return this;\n  }\n});\nvar KeepEvent = {\n  ex_map: Object.create(null),\n  ex: function ex(ss, v) {\n    var s = ss.trim().split(/,/);\n\n    s.forEach(function (s) {\n      var o;\n      s = s.trim();\n\n      if (!(o = this.ex_map[s])) {\n        o = { attr: 0, cb: 0 };\n        this.ex_map[s] = o;\n      };\n\n      if (_$.isFunction(v)) {\n        return o.cb = v;\n      };\n      o.attr = v;\n    }, this);\n  },\n  exLoop: function exLoop(t) {\n    Object.keys(this.ex_map).forEach(function (s) {\n      var o = this.ex_map[s];\n      if (o.cb && o.attr) o.cb.call(this);\n    }, this);\n  }\n};\n\nmodule.exports = {\n  Vec: Vec, Det2: Det2, Det3: Det3, MxEvent: MxEvent, Event: Event, KeepEvent: KeepEvent\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///24\n")},function(module,exports,__webpack_require__){eval("\nmodule.exports = __webpack_require__(24);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9UaWFvWWlUaWFvLy4uL25vZGVfbW9kdWxlcy9taWt1LXV0aWwvaW5kZXguanM/YTI1OCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EiLCJmaWxlIjoiMjUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9kaXN0L21haW4uanMnKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///25\n")},function(module,exports){eval('\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function "fixes" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== "undefined" && window.location;\n\n  if (!location) {\n    throw new Error("fixUrls requires window.location");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== "string") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + "//" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, "/");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word "url" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn\'t a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn\'t a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn\'t a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^"(.*)"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^\'(.*)\'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf("//") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf("/") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with \'/\'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, ""); // Strip leading \'./\'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn "url(" + JSON.stringify(newUrl) + ")";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9UaWFvWWlUaWFvLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL3VybHMuanM/OTQzMiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDLFdBQVcsRUFBRTtBQUNyRCx3Q0FBd0MsV0FBVyxFQUFFOztBQUVyRDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLHNDQUFzQztBQUN0QyxHQUFHO0FBQ0g7QUFDQSw4REFBOEQ7QUFDOUQ7O0FBRUE7QUFDQTtBQUNBLEVBQUU7O0FBRUY7QUFDQTtBQUNBIiwiZmlsZSI6IjI2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG4vKipcbiAqIFdoZW4gc291cmNlIG1hcHMgYXJlIGVuYWJsZWQsIGBzdHlsZS1sb2FkZXJgIHVzZXMgYSBsaW5rIGVsZW1lbnQgd2l0aCBhIGRhdGEtdXJpIHRvXG4gKiBlbWJlZCB0aGUgY3NzIG9uIHRoZSBwYWdlLiBUaGlzIGJyZWFrcyBhbGwgcmVsYXRpdmUgdXJscyBiZWNhdXNlIG5vdyB0aGV5IGFyZSByZWxhdGl2ZSB0byBhXG4gKiBidW5kbGUgaW5zdGVhZCBvZiB0aGUgY3VycmVudCBwYWdlLlxuICpcbiAqIE9uZSBzb2x1dGlvbiBpcyB0byBvbmx5IHVzZSBmdWxsIHVybHMsIGJ1dCB0aGF0IG1heSBiZSBpbXBvc3NpYmxlLlxuICpcbiAqIEluc3RlYWQsIHRoaXMgZnVuY3Rpb24gXCJmaXhlc1wiIHRoZSByZWxhdGl2ZSB1cmxzIHRvIGJlIGFic29sdXRlIGFjY29yZGluZyB0byB0aGUgY3VycmVudCBwYWdlIGxvY2F0aW9uLlxuICpcbiAqIEEgcnVkaW1lbnRhcnkgdGVzdCBzdWl0ZSBpcyBsb2NhdGVkIGF0IGB0ZXN0L2ZpeFVybHMuanNgIGFuZCBjYW4gYmUgcnVuIHZpYSB0aGUgYG5wbSB0ZXN0YCBjb21tYW5kLlxuICpcbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3MpIHtcbiAgLy8gZ2V0IGN1cnJlbnQgbG9jYXRpb25cbiAgdmFyIGxvY2F0aW9uID0gdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiAmJiB3aW5kb3cubG9jYXRpb247XG5cbiAgaWYgKCFsb2NhdGlvbikge1xuICAgIHRocm93IG5ldyBFcnJvcihcImZpeFVybHMgcmVxdWlyZXMgd2luZG93LmxvY2F0aW9uXCIpO1xuICB9XG5cblx0Ly8gYmxhbmsgb3IgbnVsbD9cblx0aWYgKCFjc3MgfHwgdHlwZW9mIGNzcyAhPT0gXCJzdHJpbmdcIikge1xuXHQgIHJldHVybiBjc3M7XG4gIH1cblxuICB2YXIgYmFzZVVybCA9IGxvY2F0aW9uLnByb3RvY29sICsgXCIvL1wiICsgbG9jYXRpb24uaG9zdDtcbiAgdmFyIGN1cnJlbnREaXIgPSBiYXNlVXJsICsgbG9jYXRpb24ucGF0aG5hbWUucmVwbGFjZSgvXFwvW15cXC9dKiQvLCBcIi9cIik7XG5cblx0Ly8gY29udmVydCBlYWNoIHVybCguLi4pXG5cdC8qXG5cdFRoaXMgcmVndWxhciBleHByZXNzaW9uIGlzIGp1c3QgYSB3YXkgdG8gcmVjdXJzaXZlbHkgbWF0Y2ggYnJhY2tldHMgd2l0aGluXG5cdGEgc3RyaW5nLlxuXG5cdCAvdXJsXFxzKlxcKCAgPSBNYXRjaCBvbiB0aGUgd29yZCBcInVybFwiIHdpdGggYW55IHdoaXRlc3BhY2UgYWZ0ZXIgaXQgYW5kIHRoZW4gYSBwYXJlbnNcblx0ICAgKCAgPSBTdGFydCBhIGNhcHR1cmluZyBncm91cFxuXHQgICAgICg/OiAgPSBTdGFydCBhIG5vbi1jYXB0dXJpbmcgZ3JvdXBcblx0ICAgICAgICAgW14pKF0gID0gTWF0Y2ggYW55dGhpbmcgdGhhdCBpc24ndCBhIHBhcmVudGhlc2VzXG5cdCAgICAgICAgIHwgID0gT1Jcblx0ICAgICAgICAgXFwoICA9IE1hdGNoIGEgc3RhcnQgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICg/OiAgPSBTdGFydCBhbm90aGVyIG5vbi1jYXB0dXJpbmcgZ3JvdXBzXG5cdCAgICAgICAgICAgICAgICAgW14pKF0rICA9IE1hdGNoIGFueXRoaW5nIHRoYXQgaXNuJ3QgYSBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgICAgIHwgID0gT1Jcblx0ICAgICAgICAgICAgICAgICBcXCggID0gTWF0Y2ggYSBzdGFydCBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgICAgICAgICBbXikoXSogID0gTWF0Y2ggYW55dGhpbmcgdGhhdCBpc24ndCBhIHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAgICAgXFwpICA9IE1hdGNoIGEgZW5kIHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICApICA9IEVuZCBHcm91cFxuICAgICAgICAgICAgICAqXFwpID0gTWF0Y2ggYW55dGhpbmcgYW5kIHRoZW4gYSBjbG9zZSBwYXJlbnNcbiAgICAgICAgICApICA9IENsb3NlIG5vbi1jYXB0dXJpbmcgZ3JvdXBcbiAgICAgICAgICAqICA9IE1hdGNoIGFueXRoaW5nXG4gICAgICAgKSAgPSBDbG9zZSBjYXB0dXJpbmcgZ3JvdXBcblx0IFxcKSAgPSBNYXRjaCBhIGNsb3NlIHBhcmVuc1xuXG5cdCAvZ2kgID0gR2V0IGFsbCBtYXRjaGVzLCBub3QgdGhlIGZpcnN0LiAgQmUgY2FzZSBpbnNlbnNpdGl2ZS5cblx0ICovXG5cdHZhciBmaXhlZENzcyA9IGNzcy5yZXBsYWNlKC91cmxcXHMqXFwoKCg/OlteKShdfFxcKCg/OlteKShdK3xcXChbXikoXSpcXCkpKlxcKSkqKVxcKS9naSwgZnVuY3Rpb24oZnVsbE1hdGNoLCBvcmlnVXJsKSB7XG5cdFx0Ly8gc3RyaXAgcXVvdGVzIChpZiB0aGV5IGV4aXN0KVxuXHRcdHZhciB1bnF1b3RlZE9yaWdVcmwgPSBvcmlnVXJsXG5cdFx0XHQudHJpbSgpXG5cdFx0XHQucmVwbGFjZSgvXlwiKC4qKVwiJC8sIGZ1bmN0aW9uKG8sICQxKXsgcmV0dXJuICQxOyB9KVxuXHRcdFx0LnJlcGxhY2UoL14nKC4qKSckLywgZnVuY3Rpb24obywgJDEpeyByZXR1cm4gJDE7IH0pO1xuXG5cdFx0Ly8gYWxyZWFkeSBhIGZ1bGwgdXJsPyBubyBjaGFuZ2Vcblx0XHRpZiAoL14oI3xkYXRhOnxodHRwOlxcL1xcL3xodHRwczpcXC9cXC98ZmlsZTpcXC9cXC9cXC98XFxzKiQpL2kudGVzdCh1bnF1b3RlZE9yaWdVcmwpKSB7XG5cdFx0ICByZXR1cm4gZnVsbE1hdGNoO1xuXHRcdH1cblxuXHRcdC8vIGNvbnZlcnQgdGhlIHVybCB0byBhIGZ1bGwgdXJsXG5cdFx0dmFyIG5ld1VybDtcblxuXHRcdGlmICh1bnF1b3RlZE9yaWdVcmwuaW5kZXhPZihcIi8vXCIpID09PSAwKSB7XG5cdFx0ICBcdC8vVE9ETzogc2hvdWxkIHdlIGFkZCBwcm90b2NvbD9cblx0XHRcdG5ld1VybCA9IHVucXVvdGVkT3JpZ1VybDtcblx0XHR9IGVsc2UgaWYgKHVucXVvdGVkT3JpZ1VybC5pbmRleE9mKFwiL1wiKSA9PT0gMCkge1xuXHRcdFx0Ly8gcGF0aCBzaG91bGQgYmUgcmVsYXRpdmUgdG8gdGhlIGJhc2UgdXJsXG5cdFx0XHRuZXdVcmwgPSBiYXNlVXJsICsgdW5xdW90ZWRPcmlnVXJsOyAvLyBhbHJlYWR5IHN0YXJ0cyB3aXRoICcvJ1xuXHRcdH0gZWxzZSB7XG5cdFx0XHQvLyBwYXRoIHNob3VsZCBiZSByZWxhdGl2ZSB0byBjdXJyZW50IGRpcmVjdG9yeVxuXHRcdFx0bmV3VXJsID0gY3VycmVudERpciArIHVucXVvdGVkT3JpZ1VybC5yZXBsYWNlKC9eXFwuXFwvLywgXCJcIik7IC8vIFN0cmlwIGxlYWRpbmcgJy4vJ1xuXHRcdH1cblxuXHRcdC8vIHNlbmQgYmFjayB0aGUgZml4ZWQgdXJsKC4uLilcblx0XHRyZXR1cm4gXCJ1cmwoXCIgKyBKU09OLnN0cmluZ2lmeShuZXdVcmwpICsgXCIpXCI7XG5cdH0pO1xuXG5cdC8vIHNlbmQgYmFjayB0aGUgZml4ZWQgY3NzXG5cdHJldHVybiBmaXhlZENzcztcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///26\n')},function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(4)(false);\n// imports\n\n\n// module\nexports.push([module.i, "@font-face {\\n}\\nhtml {\\n  width: 100%;\\n  height: 100%;\\n  font-family: Helvetica;\\n}\\nbody {\\n  margin: 0 auto;\\n  position: relative;\\n  width: 100%;\\n  min-height: 100%;\\n}\\nbody .rel {\\n  position: relative;\\n  left: 0;\\n  top: 0;\\n}\\nbody .rel_ {\\n  position: relative;\\n}\\nbody .abs {\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n}\\nbody .abs_ {\\n  position: absolute;\\n}\\nbody .clear-both {\\n  clear: both;\\n}\\nbody .w {\\n  width: 100%;\\n}\\nbody .wh {\\n  width: 100%;\\n  height: 100%;\\n}\\nbody .show {\\n  display: block;\\n}\\nbody .hide {\\n  display: none;\\n}\\nbody .visible {\\n  visibility: visible;\\n}\\nbody .hidden {\\n  visibility: hidden;\\n}\\nbody .css2-z1 {\\n  z-index: 1;\\n}\\nbody .css2-z2 {\\n  z-index: 2;\\n}\\nbody .css2-z3 {\\n  z-index: 3;\\n}\\nbody .css2-z4 {\\n  z-index: 4;\\n}\\nbody .css2-z5 {\\n  z-index: 5;\\n}\\nbody .css2-z6 {\\n  z-index: 6;\\n}\\nbody .css2-z7 {\\n  z-index: 7;\\n}\\nbody .css2-z8 {\\n  z-index: 8;\\n}\\nbody .css2-z9 {\\n  z-index: 9;\\n}\\nbody .css2-z10 {\\n  z-index: 10;\\n}\\nbody .css2-z11 {\\n  z-index: 11;\\n}\\nbody .css2-z12 {\\n  z-index: 12;\\n}\\nbody .css2-z13 {\\n  z-index: 13;\\n}\\nbody .css2-z14 {\\n  z-index: 14;\\n}\\nbody .css2-z15 {\\n  z-index: 15;\\n}\\nbody .css2-z16 {\\n  z-index: 16;\\n}\\nbody .css2-z17 {\\n  z-index: 17;\\n}\\nbody .css2-z18 {\\n  z-index: 18;\\n}\\nbody .css2-z19 {\\n  z-index: 19;\\n}\\nbody .css2-z20 {\\n  z-index: 20;\\n}\\nbody .css3-z1 {\\n  -webkit-transform: translate3d(\\"0.01px\\", 0, 0);\\n}\\nbody .css3-z2 {\\n  -webkit-transform: translate3d(\\"0.02px\\", 0, 0);\\n}\\nbody .css3-z3 {\\n  -webkit-transform: translate3d(\\"0.03px\\", 0, 0);\\n}\\nbody .css3-z4 {\\n  -webkit-transform: translate3d(\\"0.04px\\", 0, 0);\\n}\\nbody .css3-z5 {\\n  -webkit-transform: translate3d(\\"0.05px\\", 0, 0);\\n}\\nbody .css3-z6 {\\n  -webkit-transform: translate3d(\\"0.06px\\", 0, 0);\\n}\\nbody .css3-z7 {\\n  -webkit-transform: translate3d(\\"0.07px\\", 0, 0);\\n}\\nbody .css3-z8 {\\n  -webkit-transform: translate3d(\\"0.08px\\", 0, 0);\\n}\\nbody .css3-z9 {\\n  -webkit-transform: translate3d(\\"0.09px\\", 0, 0);\\n}\\nbody .css3-z10 {\\n  -webkit-transform: translate3d(\\"0.1px\\", 0, 0);\\n}\\nbody .css3-z11 {\\n  -webkit-transform: translate3d(\\"0.11px\\", 0, 0);\\n}\\nbody .css3-z12 {\\n  -webkit-transform: translate3d(\\"0.12px\\", 0, 0);\\n}\\nbody .css3-z13 {\\n  -webkit-transform: translate3d(\\"0.13px\\", 0, 0);\\n}\\nbody .css3-z14 {\\n  -webkit-transform: translate3d(\\"0.14px\\", 0, 0);\\n}\\nbody .css3-z15 {\\n  -webkit-transform: translate3d(\\"0.15px\\", 0, 0);\\n}\\nbody .css3-z16 {\\n  -webkit-transform: translate3d(\\"0.16px\\", 0, 0);\\n}\\nbody .css3-z17 {\\n  -webkit-transform: translate3d(\\"0.17px\\", 0, 0);\\n}\\nbody .css3-z18 {\\n  -webkit-transform: translate3d(\\"0.18px\\", 0, 0);\\n}\\nbody .css3-z19 {\\n  -webkit-transform: translate3d(\\"0.19px\\", 0, 0);\\n}\\nbody .css3-z20 {\\n  -webkit-transform: translate3d(\\"0.2px\\", 0, 0);\\n}\\nbutton {\\n  background: transparent;\\n  border: none;\\n  -webkit-touch-callout: none;\\n  -webkit-user-select: none;\\n  -webkit-tap-highlight-color: transparent;\\n  display: block;\\n  outline: none;\\n  cursor: auto;\\n}\\nli {\\n  list-style: none;\\n}\\ncanvas {\\n  -webkit-touch-callout: none;\\n  -webkit-user-select: none;\\n}\\n@media screen and (max-width: 321px) {\\n}\\n@media screen and (min-width: 321px) and (max-width: 400px) {\\n}\\n@media screen and (min-width: 400px) {\\n}\\n@-webkit-keyframes light-mask {\\n  0%,\\n  100% {\\n    visibility: hidden;\\n    opacity: 0;\\n  }\\n  30%,\\n  60% {\\n    visibility: visible;\\n    opacity: 1;\\n  }\\n}\\n.light-mask {\\n  -webkit-animation: 0.5s light-mask;\\n}\\n.shake-vertical {\\n  -webkit-animation: 0.5s shake-vertical;\\n}\\n@-webkit-keyframes shake-vertical {\\n  0% {\\n    -webkit-transform: translate(0px, 0px) rotate(0deg) scale(1.2);\\n  }\\n  2% {\\n    -webkit-transform: translate(0px, 1px) rotate(0deg) scale(1.2);\\n  }\\n  4% {\\n    -webkit-transform: translate(0px, 5px) rotate(0deg) scale(1.2);\\n  }\\n  6% {\\n    -webkit-transform: translate(0px, -2px) rotate(0deg) scale(1.2);\\n  }\\n  8% {\\n    -webkit-transform: translate(0px, 6px) rotate(0deg) scale(1.2);\\n  }\\n  10% {\\n    -webkit-transform: translate(0px, 4px) rotate(0deg) scale(1.2);\\n  }\\n  12% {\\n    -webkit-transform: translate(0px, 6px) rotate(0deg) scale(1.2);\\n  }\\n  14% {\\n    -webkit-transform: translate(0px, 5px) rotate(0deg) scale(1.2);\\n  }\\n  16% {\\n    -webkit-transform: translate(0px, -7px) rotate(0deg) scale(1.2);\\n  }\\n  18% {\\n    -webkit-transform: translate(0px, 3px) rotate(0deg) scale(1.2);\\n  }\\n  20% {\\n    -webkit-transform: translate(0px, 10px) rotate(0deg) scale(1.2);\\n  }\\n  22% {\\n    -webkit-transform: translate(0px, 8px) rotate(0deg) scale(1.2);\\n  }\\n  24% {\\n    -webkit-transform: translate(0px, -5px) rotate(0deg) scale(1.2);\\n  }\\n  26% {\\n    -webkit-transform: translate(0px, 9px) rotate(0deg) scale(1.2);\\n  }\\n  28% {\\n    -webkit-transform: translate(0px, 5px) rotate(0deg) scale(1.2);\\n  }\\n  30% {\\n    -webkit-transform: translate(0px, -7px) rotate(0deg) scale(1.2);\\n  }\\n  32% {\\n    -webkit-transform: translate(0px, -1px) rotate(0deg) scale(1.2);\\n  }\\n  34% {\\n    -webkit-transform: translate(0px, 4px) rotate(0deg) scale(1.2);\\n  }\\n  36% {\\n    -webkit-transform: translate(0px, -4px) rotate(0deg) scale(1.2);\\n  }\\n  38% {\\n    -webkit-transform: translate(0px, 2px) rotate(0deg) scale(1.2);\\n  }\\n  40% {\\n    -webkit-transform: translate(0px, 10px) rotate(0deg) scale(1.2);\\n  }\\n  42% {\\n    -webkit-transform: translate(0px, 1px) rotate(0deg) scale(1.2);\\n  }\\n  44% {\\n    -webkit-transform: translate(0px, 6px) rotate(0deg) scale(1.2);\\n  }\\n  46% {\\n    -webkit-transform: translate(0px, 5px) rotate(0deg) scale(1.2);\\n  }\\n  48% {\\n    -webkit-transform: translate(0px, 7px) rotate(0deg) scale(1.2);\\n  }\\n  50% {\\n    -webkit-transform: translate(0px, -7px) rotate(0deg) scale(1.2);\\n  }\\n  52% {\\n    -webkit-transform: translate(0px, -2px) rotate(0deg) scale(1.2);\\n  }\\n  54% {\\n    -webkit-transform: translate(0px, 2px) rotate(0deg) scale(1.2);\\n  }\\n  56% {\\n    -webkit-transform: translate(0px, 3px) rotate(0deg) scale(1.2);\\n  }\\n  58% {\\n    -webkit-transform: translate(0px, -5px) rotate(0deg) scale(1.2);\\n  }\\n  60% {\\n    -webkit-transform: translate(0px, -3px) rotate(0deg) scale(1.2);\\n  }\\n  62% {\\n    -webkit-transform: translate(0px, 10px) rotate(0deg) scale(1.2);\\n  }\\n  64% {\\n    -webkit-transform: translate(0px, -5px) rotate(0deg) scale(1.2);\\n  }\\n  66% {\\n    -webkit-transform: translate(0px, 8px) rotate(0deg) scale(1.2);\\n  }\\n  68% {\\n    -webkit-transform: translate(0px, 0px) rotate(0deg) scale(1.2);\\n  }\\n  70% {\\n    -webkit-transform: translate(0px, 6px) rotate(0deg) scale(1.2);\\n  }\\n  72% {\\n    -webkit-transform: translate(0px, -1px) rotate(0deg) scale(1.2);\\n  }\\n  74% {\\n    -webkit-transform: translate(0px, 6px) rotate(0deg) scale(1.2);\\n  }\\n  76% {\\n    -webkit-transform: translate(0px, 8px) rotate(0deg) scale(1.2);\\n  }\\n  78% {\\n    -webkit-transform: translate(0px, 10px) rotate(0deg) scale(1.2);\\n  }\\n  80% {\\n    -webkit-transform: translate(0px, 4px) rotate(0deg) scale(1.2);\\n  }\\n  82% {\\n    -webkit-transform: translate(0px, 9px) rotate(0deg) scale(1.2);\\n  }\\n  84% {\\n    -webkit-transform: translate(0px, -1px) rotate(0deg) scale(1.2);\\n  }\\n  86% {\\n    -webkit-transform: translate(0px, 8px) rotate(0deg) scale(1.2);\\n  }\\n  88% {\\n    -webkit-transform: translate(0px, 1px) rotate(0deg) scale(1.2);\\n  }\\n  90% {\\n    -webkit-transform: translate(0px, -6px) rotate(0deg) scale(1.2);\\n  }\\n  92% {\\n    -webkit-transform: translate(0px, 2px) rotate(0deg) scale(1.2);\\n  }\\n  94% {\\n    -webkit-transform: translate(0px, -5px) rotate(0deg) scale(1.2);\\n  }\\n  96% {\\n    -webkit-transform: translate(0px, -4px) rotate(0deg) scale(1.2);\\n  }\\n  98% {\\n    -webkit-transform: translate(0px, -4px) rotate(0deg) scale(1.2);\\n  }\\n}\\n#xxzoom {\\n  width: 1000%;\\n  height: 100%;\\n  background: -webkit-linear-gradient(left, rgba(0, 0, 0, 0.001) 0%, #000000 30%, #000000 70%, rgba(0, 0, 0, 0.001) 100%);\\n  -webkit-transform: translate3d(-100%, 0, 0);\\n}\\n#xzoom {\\n  background: #000000;\\n}\\n.xfade {\\n  -webkit-animation: 1s xfade1 forwards\\n\\t\\t,1s 1.5s xfade2 forwards;\\n}\\n@-webkit-keyframes xfade1 {\\n  0% {\\n    visibility: hidden;\\n    opacity: 0;\\n  }\\n  100% {\\n    visibility: visible;\\n    opacity: 1;\\n  }\\n}\\n@-webkit-keyframes xfade2 {\\n  0% {\\n    visibility: visible;\\n    opacity: 1;\\n  }\\n  100% {\\n    visibility: hidden;\\n    opacity: 0;\\n  }\\n}\\ns-word {\\n  display: none;\\n}\\n.animated1 {\\n  -webkit-animation: 0.5s ease-in-out forwards;\\n}\\n", ""]);\n\n// exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///27\n')},function(module,exports,__webpack_require__){eval("\nvar content = __webpack_require__(27);\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(3)(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9UaWFvWWlUaWFvLy4vc3JjL21haW4xLmxlc3M/OTgwYSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7OztBQUlBLGVBQWU7O0FBRWY7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQSIsImZpbGUiOiIyOC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvbGliL2luZGV4LmpzPz9yZWYtLTQtMiEuLi8uLi9ub2RlX21vZHVsZXMvbGVzcy1sb2FkZXIvZGlzdC9janMuanMhLi9tYWluMS5sZXNzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvbGliL2luZGV4LmpzPz9yZWYtLTQtMiEuLi8uLi9ub2RlX21vZHVsZXMvbGVzcy1sb2FkZXIvZGlzdC9janMuanMhLi9tYWluMS5sZXNzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS00LTIhLi4vLi4vbm9kZV9tb2R1bGVzL2xlc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vbWFpbjEubGVzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///28\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\n__webpack_require__(28);\n\n__webpack_require__(2);\n\nvar _mikuTween = __webpack_require__(0);\n\nvar _mikuTween2 = _interopRequireDefault(_mikuTween);\n\nvar _tiaoyitiao = __webpack_require__(22);\n\nvar _tiaoyitiao2 = _interopRequireDefault(_tiaoyitiao);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = _tiaoyitiao2.default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9UaWFvWWlUaWFvLy4vc3JjL21haW4xLmpzPzQ3YjEiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFDQTs7OztBQUNBOzs7Ozs7QUFFQUEsT0FBT0MsT0FBUCIsImZpbGUiOiIyOS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAnLi9tYWluMS5sZXNzJztcclxuaW1wb3J0ICcuL2ZyZWVjYW1lcmEnO1xyXG5pbXBvcnQgVFdFRU4gZnJvbSAnbWlrdS10d2Vlbic7XHJcbmltcG9ydCBUaWFvWWlUaWFvIGZyb20gJy4vdGlhb3lpdGlhbyc7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IFRpYW9ZaVRpYW87XHJcblxyXG5cclxuXHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///29\n")}])});